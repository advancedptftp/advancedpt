@model DataLayer.Models.tblTIncidentForm

@{
    ViewBag.Title = "Edit";
}

<section class="bodyinner">
    @using (Html.BeginForm("Approve", "IncidentForm", FormMethod.Post, new { name = "Approve", id = "Approve" }))
    {
        <div class="bodyleft">
            <div class="select-style">


                @Html.DropDownList("Location_Id")
            </div>

            @Html.Partial("~/Views/Shared/_LeftPart.cshtml")
        </div>
        <div class="bodyright">

            <div class="report-form clearfix">
                <h2>Incident report Form<span></span></h2>
                <div class="confident">
                    CONFIDENTIAL REPORT:
                </div>

                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.CreatedBy)
                @Html.HiddenFor(m => m.IncidentForm_Id)
                @Html.HiddenFor(m => m.IncidentEvent_Id)
                @Html.HiddenFor(m => m.PhysicianName)
                @Html.HiddenFor(m => m.CreatedOn)
                @Html.HiddenFor(m => m.ModifiedBy)
                @Html.Hidden("ModifiedOn", DateTime.Now)
                @if (ViewBag.Error != null)
                {
                    @Html.Raw(ViewBag.Error)
                }
                <div class="row">
                    <div class="col-sm-6 col-md-3 form-group">
                        <label>Name of Person Involved</label>
                        @Html.TextBoxFor(m => m.Involved_Person_Name, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-6 col-md-3 form-group">
                        <label for="date">Submission Date:</label>
                        @Html.TextBox("CreatedOnShow", Model.CreatedOn.ToString("MM/dd/yyyy"), new { @class = "form-control ", style = "width:100%;", @Value = Model.CreatedOn.ToString("MM/dd/yyyy"), @readonly = "readonly" })
                    </div>

                    <div class="col-sm-6 col-md-3 form-group">
                        <label>MR# (if applicable)</label>
                        @Html.TextBoxFor(m => m.MR_, new { @class = "form-control", @readonly = "readonly" })
                    </div>

                    <div class="col-sm-6 col-md-3 form-group">
                        <label for="location-incident">Gender:</label><br>

                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Gender, "M", new { @disabled = "disabled" })Male</label>
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Gender, "F", new { @disabled = "disabled" })Female</label>

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-md-3 form-group">
                        <label>Street Address of Occurrence</label>
                        @Html.TextBoxFor(m => m.Street_Address, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-6 col-md-3 form-group">
                        <label>City</label>
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-6 col-md-3 form-group">
                        <label>State</label>
                        @Html.TextBoxFor(m => m.State, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-6 col-md-3 form-group">
                        <label>Zip Code</label>
                        @Html.TextBoxFor(m => m.Zip_Code, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-6 col-md-3 form-group">
                        <label for="date">Date of Occurrence :</label>
                        @*<input name="date" type="text" class="form-control datepicker datepicker-bg" placeholder="mm/dd/yyyy" style="width:100%;">*@
                        @Html.TextBoxFor(m => m.DateOfOccurance, new { @class = "form-control", style = "width:100%;", @Value = Model.CreatedOn.ToString("MM/dd/yyyy"), @readonly = "readonly" })
                    </div>
                    <div class="col-sm-6 col-md-3 form-group">
                        <label for="date">Time of Incident</label>

                        @Html.TextBoxFor(m => m.TimeOfIncident, new { id = "time1", @class = "form-control", @readonly = "readonly" })
                        @*@Html.TextBox("TimeOfIncident", Model.TimeOfIncident == null ? "" : DateTime.Parse(Model.TimeOfIncident.Value.ToString()).ToString("hh:mm tt"), new { @class = "form-control" })*@

                    </div>
                    <div class="col-sm-12 col-md-6 form-group">
                        <label>Person Completing Report</label>
                        @Html.TextBoxFor(m => m.Person_Completing_Report, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />
                <div class="row">

                    <div class="col-sm-6 col-md-3 form-group">
                        <label for="date">Was a Physician Notified?</label>
                        <div class="checjtick">
                            <label class="checkbox-inline">
                                <label class="radio-inline">@Html.RadioButtonFor(m => m.WasPhysicianNotified, true, new { @onclick = "javascript:PhysicianNotified(this);", @disabled = "disabled" })Yes</label>
                                <label class="radio-inline">@Html.RadioButtonFor(m => m.WasPhysicianNotified, false, new { @onclick = "javascript:PhysicianNotified(this);", @disabled = "disabled" })No</label>
                            </label>

                        </div>

                    </div>
                    <div class="col-sm-6 col-md-3 form-group">
                        <label for="date">Physician Name:  &nbsp;&nbsp;</label>
                        @Html.TextBoxFor(m => m.PhysicianName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.PhysicianName)
                    </div>
                    <div class="col-sm-12 col-md-6 form-group">
                        <label>Date & Time they were notified: &nbsp;&nbsp;</label>
                        @Html.TextBox("Notified_DateTime", Model.Notified_DateTime.HasValue ? Model.Notified_DateTime.Value.ToString() : "", new { @class = "form-control datetimepicker datepicker-bg", style = "width:60%;", @Readonly = true })
                        @*@Html.TextBox("Notified_DateTime", Model.Notified_DateTime.Value, new { @class = "form-control datetimepicker datepicker-bg", style = "width:60%;", @Readonly = true })*@
                        @*@Html.TextBoxFor(m => m.Notified_DateTime, new { @class = "form-control datepicker datepicker-bg", style = "width:60%;", @Readonly = true })*@
                        @Html.ValidationMessageFor(m => m.Notified_DateTime)
                    </div>
                </div>
                <hr>
                <h3>Check Applicable Event:</h3><br>


                <div class="row">
                    <div class="col-sm-12">
                        <table width="100%" style="width: 90%; margin: 20px;">
                            @{ var odd = true; }
                            @foreach (var item in ViewBag.IncidentEvent_Id)
                            {

                                if (odd)
                                {
                                    @:<tr>
                                        <td>
                                            <label class="checkbox-inline">
                                                <input onclick="return false" type="checkbox" id="@item.Value" class="chk" name="@item.Text" value="@item.Value" disabled="disabled" />@item.Text
                                            </label><br />
                                        </td>

                                }
                                else
                                {
                                    <td>
                                        <label class="checkbox-inline">
                                            <input onclick="return false" type="checkbox" id="@item.Value" name="@item.Text" class="chk" value="@item.Value" disabled="disabled" />@item.Text
                                        </label><br />
                                    </td>
                                    @:</tr>
                                                            }

                                odd = !odd;
                            }



                        </table>

                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-12 form-group">
                        @Html.DisplayName("Describe  the event, effects, outcome and potential risk issue (name equipment, drug, procedure, treatment, etc)")
                        <br />
                        <div class="col-sm-12 form-group">

                            @Html.TextAreaFor(m => m.Event_Desc, new { @class = "form-control", @readonly = "readonly" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6 col-md-4 form-group">
                        @Html.DisplayName("For PI Director Use Only:")
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-6 col-md-4 form-group">

                        @Html.DisplayName("Date Received:")
                        @*@Html.TextBoxFor(model => model.Date_Received, new { @class = "form-control datepicker datepicker-bg", placeholder = "mm/dd/yyyy", style = "width:100%;", @readonly = "readonly" })*@
                        @*@Html.TextBox("Date_Received", Model.Date_Received, new { @class = "form-control ", style = "width:100%;", @Value = Model.Date_Received, @readonly = "readonly" })*@
                        @Html.TextBox("Date_Received", Model.Date_Received.HasValue ? Model.Date_Received.Value.ToShortDateString() : "", new { @class = "form-control", style = "width:60%;", @Readonly = true })
                        @Html.ValidationMessageFor(model => model.Date_Received)

                    </div>
                    <div class="col-sm-6 col-md-4 form-group">

                        @Html.HiddenFor(e => e.Effect)
                        @Html.DisplayName("Effect:")
                        <div class="checjtick"><label class="checkbox-inline"><input class="chkeffect" id="chkeffect1" value="1" name="optradio" type="checkbox" readonly="readonly">Trending</label></div>
                        <div class="checjtick"><label class="checkbox-inline"><input class="chkeffect" id="chkeffect2" value="2" name="optradio" type="checkbox" readonly="readonly">Inconsequential</label></div>
                        <div class="checjtick"><label class="checkbox-inline"><input class="chkeffect" id="chkeffect3" value="3" name="optradio" type="checkbox" readonly="readonly">Consequential</label></div>
                        <div class="checjtick"><label class="checkbox-inline"><input class="chkeffect" id="chkeffect4" value="4" name="optradio" type="checkbox" readonly="readonly">Non existing / Unknown</label></div>

                    </div>
                    <div class="col-sm-6 col-md-4 form-group">
                        @Html.DisplayName("Follow-Up:")

                        @Html.TextBoxFor(model => model.FollowUp, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.FollowUp)

                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-6 col-md-3  form-group">
                        @Html.DisplayName("Medical Consequence:")

                        @Html.TextBoxFor(model => model.MedicalConsequence, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.MedicalConsequence)

                    </div>



                    <div class="col-sm-6 col-md-3  form-group">
                        @Html.DisplayName("Date Filed:")

                        @*@Html.TextBoxFor(model => model.MedicalConsequence_Date, new { @class = "form-control datepicker datepicker-bg", placeholder = "mm/dd/yyyy", style = "width:100%;", @readonly = "readonly" })*@
                        @*@Html.TextBox("MedicalConsequence_Date", Model.MedicalConsequence_Date, new { @class = "form-control ", style = "width:100%;", @Value = Model.MedicalConsequence_Date, @readonly = "readonly" })*@
                        @Html.TextBox("MedicalConsequence_Date", Model.MedicalConsequence_Date.HasValue ? Model.MedicalConsequence_Date.Value.ToShortDateString() : "", new { @class = "form-control", style = "width:60%;", @Readonly = true })
                        @Html.ValidationMessageFor(model => model.MedicalConsequence_Date)

                    </div>
                    <div class="col-sm-6 col-md-3  form-group">
                        @Html.DisplayName("Legal Consequence")

                        @Html.TextBoxFor(model => model.LegalConsequence, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.MedicalConsequence)

                    </div>



                    <div class="col-sm-6 col-md-3  form-group">
                        @Html.DisplayName("Date Filed:")

                        @*@Html.TextBoxFor(model => model.LegalConsequence_Date, new { @class = "form-control datepicker datepicker-bg", placeholder = "mm/dd/yyyy", style = "width:100%;", @readonly = "readonly" })*@
                        @*@Html.TextBox("LegalConsequence_Date", Model.LegalConsequence_Date, new { @class = "form-control ", style = "width:100%;", @Value = Model.LegalConsequence_Date, @readonly = "readonly" })*@
                        @Html.TextBox("LegalConsequence_Date", Model.LegalConsequence_Date.HasValue ? Model.LegalConsequence_Date.Value.ToShortDateString() : "", new { @class = "form-control", style = "width:60%;", @Readonly = true })
                        @Html.ValidationMessageFor(model => model.LegalConsequence_Date)

                    </div>

                </div>



                @*<div class="subbutt">
                    @if (Model.ApprovedBy == null)
                    {
                        <button type="submit" class="btn btn-orange pull-right">Approve</button>
                    }
                </div>*@

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

            </div>

        </div>

        <div class="clearfix"></div>

    }
</section>
<script>

    $(document).ready(function () {

        //By Default Effect Disabled
        $('#chkeffect1').attr("disabled", "disabled");
        $('#chkeffect2').attr("disabled", "disabled");
        $('#chkeffect3').attr("disabled", "disabled");
        $('#chkeffect4').attr("disabled", "disabled");

        $('#PhysicianName').attr("disabled", "disabled");
        $('#Notified_DateTime').attr("disabled", "disabled");


        var selected = $("#IncidentEvent_Id").val();
        if (selected) {
            var chkArray = selected.split(',');
            for (var i = 0; i < chkArray.length; i++) {
                $('input#' + chkArray[i]).attr('checked', 'true');
            }
        }
        var selected1 = $("#Effect").val();
        if (selected1) {
            var chkArray1 = selected1.split(',');
            for (var i = 0; i < chkArray1.length; i++) {
                $('input#chkeffect' + chkArray1[i]).attr('checked', 'true');
            }
        }


    });
    $("#Approve").submit(function () {

        getValueUsingClass();
    })
    function getValueUsingClass() {

        var chkArray = [];
        $(".chkeffect:checked").each(function () {
            chkArray.push($(this).val());
        });
        var selected;
        selected = chkArray.join(',') + ",";
        if (selected.length > 1) {
            selected = selected.substring(0, selected.length - 1);
            $("#Effect").val(selected);
        }
        else {
        }
    }
</script>



