@model DataLayer.Models.tblMDoctor

@{
    ViewBag.Title = "Details";
}

@*<h2>Details</h2>*@

<section class="bodyinner">
    <div class="container">
        @using (Html.BeginForm())
        {
            <div class="bodyleft">

                @Html.Partial("~/Views/Shared/_LeftPart.cshtml")
            </div>
            <div class="bodyright">

                <div class="report-form clearfix">
                    <h2>Doctor Form</h2>


                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true)

                    @Html.HiddenFor(model => model.Doctor_Id)
                    @Html.HiddenFor(model => model.ModifiedOn)
                    @Html.HiddenFor(model => model.ModifiedBy)
                    @Html.HiddenFor(model => model.CreatedOn)
                    @Html.HiddenFor(model => model.CreatedBy)

                    @if (ViewBag.Error != null)
                    {
                        @Html.Raw(ViewBag.Error)
                    }

                    <div class="clearfix"></div>

                    <div class="row">
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("Doctor First Name")
                            @Html.TextBoxFor(model => model.First_Name, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.First_Name)
                        </div>
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("Doctor Last Name")
                            @Html.TextBoxFor(model => model.Last_Name, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Last_Name)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 col-md-6 form-group">


                            @Html.Label("Doctor Type")
                            @Html.DropDownListFor(m => m.DoctorType, from DataLayer.DoctorType state in Enum.GetValues(typeof(DataLayer.DoctorType))
                                                                     select new SelectListItem() { Text = state.ToString(), Value = ((int)state).ToString() }, new { @class = "form-control", @readonly = "readonly", disabled = true })
                            @*@Html.TextBoxFor(model => model.DoctorType, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.DoctorType)*@
                        </div>
                        <div class="col-sm-6 col-md-6 form-group">

                            @Html.Label("NPI No")
                            @Html.TextBoxFor(model => model.NPI_No, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.NPI_No)

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("Phone1")
                            @Html.TextBoxFor(model => model.Phone1, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Phone1)


                        </div>
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("Phone2")
                            @Html.TextBoxFor(model => model.Phone2, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Phone2)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("Fax")
                            @Html.TextBoxFor(model => model.Fax, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Fax)

                        </div>
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("City")
                            @Html.TextBoxFor(model => model.City, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.City)
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("State")
                            @*@Html.TextBoxFor(model => model.State, new { @class = "form-control", @readonly = "readonly" })*@
                            @Html.DropDownListFor(e => e.State, (SelectList)ViewBag.StateName, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.State)

                        </div>
                        <div class="col-sm-6 col-md-6 form-group">
                            @Html.Label("Zip Code")
                            @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ZipCode)
                        </div>

                    </div>

                    <p>@Html.ActionLink("Back to List", "Index")</p>

                </div>



            </div>
        }
    </div>

</section>






































@*<div>
        <h4>tblMDoctor</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.First_Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.First_Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Last_Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Last_Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DoctorType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DoctorType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.NPI_No)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NPI_No)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Phone1)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Phone1)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Phone2)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Phone2)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Fax)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Fax)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.City)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.City)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.State)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.State)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ZipCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ZipCode)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CreatedOn)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ModifiedOn)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ModifiedOn)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.tblMUser.UserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.tblMUser.UserName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.tblMUser1.UserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.tblMUser1.UserName)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Doctor_Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
