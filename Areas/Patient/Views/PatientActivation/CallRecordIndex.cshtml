@model PagedList.IPagedList<DataLayer.Models.spLPatientCallRecord_Result>
@using PagedList.Mvc;
@using DataLayer;
@{
    ViewBag.Title = "CallRecordIndex";
    var test = Model;
}
<section class="bodyinner2">
    <div>
        <p class="pull-right">
            @Html.ActionLink("Create New", "CallRecord", null, new { @class = "btn btn-primary" })
        </p>
        @using (Html.BeginForm("Index", "User", FormMethod.Get))
        {

            <div class="searchsec">

                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by User Name,Name" })
                <button><i class="fa fa-search" aria-hidden="true"></i></button>
                <div class="clearfix"></div>
            </div>
        }
        <div class="clearfix"></div>
    </div>
    <div>
        <div class="table-responsive">
            <table class="table table-bordered table-striped">

                <thead>
                    <tr>

                        <th>

                            @{ var classname = "botharrow";}
                            @if ((ViewBag.CurrentSort == "FirstName" && ((ViewBag.SortDirection == true || ViewBag.SortDirection == null) && ViewBag.PageLoad != null)))
                            {
                                classname = "bottarrow";
                            }
                            else if ((ViewBag.CurrentSort == "FirstName" && ViewBag.SortDirection == false))
                            {
                                classname = "toparrow";
                            }
                            @Html.ActionLink("FirstName", "CallRecordIndex", new { sortOrder = "FirstName", CurrentSort = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, IsAsc = ViewBag.SortDirection }, new { @class = "SortHeader " + classname })


                        </th>
                      
                        <th>
                            @Html.DisplayName("Last Name")
                        </th>
 
                        <th>
                            @Html.Label("DOB")
                        </th>
                        <th>
                            @Html.DisplayName("Problem")  

                        </th>
                        <th>
                            @Html.DisplayName("Last Call On")

                        </th>
                        <th>
                            @Html.DisplayName("Scheduled Date Time")
                        </th>
                        <th>
                            @Html.DisplayName("Call Count")
                        </th>
                        <th>
                        </th>
                        <th></th>
                    </tr>

                </thead>
                <tbody>
                    @{


                        foreach (var item in Model)
                        {
      

                            <tr >
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DOB)
                                </td>
                                <td >
                                    @Html.DisplayFor(modelItem => item.Problem)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastCallOn)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ScheduledDateTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CallCount)
                                </td>
                                <td>
                                    @if(item.IsScheduled == false && item.CallCount < 3)
                                    { 
                                    <a href="@Url.Action("CallRecord", "PatientActivation", new { id = item.PatientCondition_Id })">
                                        <i class="fa fa-arrow-right" aria-hidden="true"></i>
                                    </a>
                                    }
                                </td>

                                <th>
                                    <a href="@Url.Action("CallRecordDetail", "PatientActivation", new { id = item.Patient_Id })">
                                        <i class="fa fa-eye" aria-hidden="true"></i>
                                    </a>
                                    
                                </th>
                            </tr>
                        }
                    }




                </tbody>
            </table>
        </div>
        <div>
            <br />
            <div class="pull-left">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
            @{
                bool? direction = ViewBag.SortDirection;
                if (direction == null ){ direction = false;}
            }
            @Html.PagedListPager(Model, page => Url.Action("CallRecordIndex",
                               new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, CurrentSort = ViewBag.CurrentSort, IsAsc= !direction }))
        </div>
    </div>

</section>