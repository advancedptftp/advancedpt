@model DataLayer.Models.PatientActivation
@using DataLayer;
@{
    ViewBag.Title = "Create";
    var startdate = DateTime.Now.AddDays(1);
    var enddate = startdate.AddDays(7);
}
@if (ViewBag.Error != null)
{
    @Html.Raw(ViewBag.Error)
}
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/fullcalendar.js"></script>
<link href="~/Content/fullcalendar.css" rel="stylesheet" />
<style>
    .selectedRow {
        background-color: rgba(249, 159, 62, 0.65);
        color: white;
    }
</style>
<style type="text/css">
    .table-fixed thead {
        width: 97%;
    }

    .table-fixed tbody {
        height: 230px;
        overflow-y: auto;
        width: 100%;
    }

    .table-fixed thead, .table-fixed tbody, .table-fixed tr, .table-fixed td, .table-fixed th {
        display: block;
    }

        .table-fixed tbody td, .table-fixed thead > tr > th {
            float: left;
            border-bottom-width: 0;
        }
</style>
<style>
    .loadingdivschedule {
        display: block;
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 9998;
        background-color: rgba(0,0,0,.3);
        -webkit-animation: fade 500ms;
        -moz-animation: fade 500ms;
        -o-animation: fade 500ms;
        animation: fade 500ms;
    }

    .loadingcontainerschedule {
        width: 100%;
        text-align: center;
        padding-top: 26%;
    }
</style>
<section class="bodyinner">
    <div class="container">

        <div class="activationform_fullpage">
            @using (Html.BeginForm("Create", "PatientActivation", FormMethod.Post, new { name = "Create", id = "Create" }))
            {
                <div class="report-form clearfix">
                    <h2>Activation Form</h2>
                    @Html.HiddenFor(e => e.Condition.PatientCondition_Id)
                    @Html.HiddenFor(e => e.HomeCareInsurances[0].PatientInsurance_Id)
                    @Html.HiddenFor(e => e.Patient.Phone2)
                    @Html.HiddenFor(e => e.Patient.Phone3)
                    @Html.HiddenFor(e => e.PatientUser.MobNo)
                    @Html.HiddenFor(e => e.Condition.DoctorID)
                    @Html.HiddenFor(e => e.Condition.PatientId)
                    @Html.HiddenFor(e => e.tblTPatSchdAppointment.AppointmentType)
                    @Html.HiddenFor(e => e.tblTPatSchdAppointment.AppointmentDate)
                    @Html.HiddenFor(e => e.tblTPatSchdAppointment.FromTime)
                    @Html.HiddenFor(e => e.tblTPatSchdAppointment.ToTime)
                    @Html.HiddenFor(e => e.tblTPatSchdAppointment.EmployeeID)
                    @Html.HiddenFor(e => e.tblTPatSchdAppointment.ResourceID)
                    @Html.HiddenFor(m => m.Patient.DOB)
                    @Html.HiddenFor(m => m.Condition.SuitedWeekDayMultiple)

                    @*@Html.Hidden("hdnPageNo")*@
                    @Html.ValidationSummary(true)
                    @*PARIKSHIT_START_22122017*@
                    <input type="hidden" value="@ViewBag.TempID" id="hdnTempID" />
                    <input type="hidden" value="1" id="hdnDivID" />
                    <input type="hidden" value="1" id="hdnKareo" />
                    @*PARIKSHIT_END_22122017*@
                    <div class="topforn">
                        <div class="row">
                            <div class="col-sm-3">
                                <table width="100%" border="0">
                                    <tr>
                                        <td width="22%"><strong>Date:</strong></td>
                                        <td width="78%">@Html.TextBoxFor(m => m.Condition.Contact_Date, new { @class = "applitextfield CustomDateFormat", @style = "padding:8px 0;font-size: 20px;", @Value = @Model.Condition.Contact_Date.GetExactValue() })</td>
                                    </tr>
                                </table>

                            </div>
                            <div class="col-sm-4">
                                <table width="100%" border="0">
                                    <tr>
                                        <td width="27%"><strong>Staff Name:</strong></td>
                                        <td width="73%">@Html.TextBoxFor(m => m.User.Name, new { @class = "applitextfield", @style = "padding:8px 0;font-size: 20px;" })</td>
                                    </tr>
                                </table>

                            </div>
                            <div class="col-sm-5">
                                <table width="100%" border="0">
                                    <tr>
                                        <td width="33%" style="vertical-align:middle;"><strong>Contact Method:</strong></td>
                                        <td width="67%">
                                            @Html.DropDownListFor(m => m.Condition.Contact_Type, from DataLayer.PatientContactType state in Enum.GetValues(typeof(DataLayer.PatientContactType)) select new SelectListItem() { Text = state.ToCustomString(), Value = Convert.ToInt32((state)).ToString() }, new { @class = "applitextfield1" })
                                        </td>
                                    </tr>
                                </table>

                            </div>
                        </div>
                    </div>


                    <div id="dvid_1">
                        <h3>A. INTRODUCTION FOR ALL CALLS</h3>



                        <div class="inlinetext">
                            <div class="heading">( A1 )</div>
                            <div class="headrightcont">Thank you for calling <input type="text" style="width:450px" class="applitextfield1" value="Advanced Physical Therapy Of Central Florida">, how can I help you?</div>
                            <div class="clearfix"></div>

                        </div>
                    </div>

                    <div id="dvid_2" class="inlinetext">
                        <div class="heading">( A2 )</div>
                        <div class="headrightcont">
                            Have you been here before? <div class="p_left15" style="padding-top:20px;">
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span>YES</span>
                                        @Html.RadioButtonFor(m => m.Condition.IsSeenHereBefore, Convert.ToInt16(YesNo.Yes).ToString())
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio redbuttradio1">
                                        <span>NO</span>
                                        @Html.RadioButtonFor(m => m.Condition.IsSeenHereBefore, Convert.ToInt16(YesNo.No).ToString())
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                        <span id="IsPatientFoundError" style="color:red;">Select any option</span>
                        <div class="clearfix"></div>
                    </div>

                    <div id="dvid_3" class="inlinetext">
                        <div class="heading">( A3 )</div>
                        <div class="headrightcont" id="headrightcont">
                            May I have your name?@Html.TextBoxFor(m => m.Patient.FirstName, new { @class = "applitextfield1", @placeholder = "First Name" })
                            @Html.TextBoxFor(m => m.Patient.LastName, new { @class = "applitextfield1", @placeholder = "Last Name" })
                            <div id="dvErrMsgPatientName" style="display:none;"><span id="span3" style="color:red;">Please enter your first name and last name</span></div>
                        </div>

                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_4" class="inlinetext">
                        <div class="heading">( A4 )</div>
                        <div class="headrightcont">
                            What is the best phone number at which to reach you?

                            <div>
                                <div class="control-group">
                                    <div class="inlineradio">
                                        <label class="control control--radio greenbuttradio1">
                                            <span>CELLULAR</span>
                                            @Html.RadioButton("rbPhone", "1")
                                            <div class="control__indicator"></div>
                                        </label>

                                    </div>
                                    <div class="inlineradio">
                                        <label class="control control--radio greenbuttradio1">
                                            <span>HOME</span>
                                            @Html.RadioButton("rbPhone", "2")
                                            <div class="control__indicator"></div>
                                        </label>

                                    </div>
                                    <div class="inlineradio">
                                        <label class="control control--radio greenbuttradio1">
                                            <span>OFFICE</span>
                                            @Html.RadioButton("rbPhone", "3")
                                            <div class="control__indicator"></div>
                                        </label>

                                    </div>
                                    <input type="text" name="MobNo" id="txtMobNo" class="applitextfield1 UsCellFormat" />
                                    <div style="clear:both;"></div>
                                    <div id="divErrorMSG" style="display:none;"><span id="span3" style="color:red;">Please select any one option</span></div>
                                </div>
                            </div>
                        </div>


                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_5" class="inlinetext">
                        <div class="heading">( A5 )</div>
                        <div class="headrightcont">
                            And may I have your address?
                            <div class="full_textarea" style="padding-top:20px;">
                                <div class="col-sm-6 col-md-3 form-group">
                                    <div class=headrightcont>Address1<span style="color:red;">*</span></div>

                                    @Html.TextBoxFor(m => m.Patient.AddressLine1, new { @class = "applitextfield2" })
                                </div>
                                <div class="col-sm-6 col-md-3 form-group">
                                    <div class=headrightcont>Address2</div>
                                    @Html.TextBoxFor(m => m.Patient.AddressLine2, new { @class = "applitextfield2" })
                                </div>
                                <div class="col-sm-6 col-md-2 form-group">
                                    <div class=headrightcont>City<span style="color:red;">*</span></div>
                                    @Html.TextBoxFor(m => m.Patient.City, new { @class = "applitextfield2" })
                                </div>
                                <div class="col-sm-6 col-md-2 form-group">
                                    <div class=headrightcont>State<span style="color:red;">*</span></div>
                                    @Html.DropDownListFor(m => m.Patient.State, (SelectList)ViewBag.StateName, new { @class = "applitextfield2 add_sopme_paddi" })
                                </div>

                                <div class="col-sm-6 col-md-2 form-group">
                                    <div class=headrightcont>ZIP<span style="color:red;">*</span></div><br>
                                    @Html.TextBoxFor(m => m.Patient.ZipCode, new { @class = "applitextfield2 zipcode", maxlength = "5" })
                                    @Html.ValidationMessageFor(m => m.Patient.ZipCode)
                                </div>

                            </div>
                            <div class="col-sm-12 form-group">
                                <div id="divErrMsg_AD" style="display:none;"><span id="spanAD" style="color:red;">Please fill all the mandatory details</span></div>
                            </div>
                            <div class="bottextsec"><strong>IF THEY ASK WHY:</strong> We want to get you to the office closest to your home.</div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_6" class="inlinetext">
                        <div class="heading">( A6 )</div>
                        <div class="headrightcont">
                            <div class="col-sm-12 form-group">
                                And may I have your birthdate as well?<div style="padding-top:20px;">
                                </div>
                                <div class="col-sm-6 form-group">
                                    <div class="col-sm-2 form-group" style="padding: 0 8px;">
                                        @Html.TextBox("month", "", new { @class = "form-control months", style = " font-size:20px;", onblur = "fn_Month_Validation();", @placeholder = "mm", @maxlength = 2, onkeyup = "movecursor(this,'date')" })
                                    </div>
                                    <div class="col-sm-1 form-group" style="padding: 0; width: auto; font-size: 34px; padding-top: 7px;">/</div>
                                    <div class="col-sm-2 form-group" style="padding: 0 8px;">
                                        @Html.TextBox("date", "", new { @class = "form-control days", style = " font-size:20px;", onblur = "fn_Date_Validation();", @placeholder = "dd", @maxlength = 2, onkeyup = "movecursor(this,'Year')" })

                                    </div>
                                    <div class="col-sm-1 form-group" style="padding: 0; width: auto; font-size: 34px; padding-top: 7px;">/</div>
                                    <div class="col-sm-3 form-group" style="padding: 0 8px;">
                                        @Html.TextBox("Year", "", new { @class = "form-control years", style = " font-size:20px; width:80px;", onblur = "fn_Year_Validation();", @placeholder = "yyyy" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-sm-12 form-group">
                                <div id="divErrMsg_A5" style="display:none;"><span id="spanA5" style="color:red;"></span></div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_7" class="inlinetext">
                        <div class="heading">( A7 )</div>
                        <div class="headrightcont">
                            Okay,<input id="" type="text" class="applitextfield1 j_PatientName">how did you hear about us?
                            <div>
                                Please select a response from the dropdown menu
                                @Html.DropDownListFor(m => m.Patient.ReferralSource, (SelectList)ViewBag.ReferralSources, new { @class = "applitextfield1" })
                                @Html.Hidden("hdnReferralText", "");
                                <div class="headrightcont" id="divid_d1">
                                    <div>
                                        Referring Physician Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcRefPhysicianName, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d2">
                                    <div>
                                        Referring Person Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcRefPersonName, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d3">
                                    <div>
                                        Search Engine:
                                        @Html.TextBoxFor(m => m.RefSource.SrcSearchEngine, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d4">
                                    <div>
                                        Location:
                                        @Html.TextBoxFor(m => m.RefSource.SrcLocation, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d5">
                                    <div>
                                        What Did You See?
                                        @Html.TextBoxFor(m => m.RefSource.SrcWhatYouSee, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d6">
                                    <div>
                                        New/Same Ailment:
                                        @Html.TextBoxFor(m => m.RefSource.SrcNewAilment, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d7">
                                    <div>
                                        Ailment:
                                        @Html.TextBoxFor(m => m.RefSource.SrcAilment, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d8">
                                    <div>
                                        Phone Book Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcPhoneBook, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d9">
                                    <div>
                                        Cable Provider:
                                        @Html.TextBoxFor(m => m.RefSource.SrcCableProvider, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d10">
                                    <div>
                                        Channel:
                                        @Html.TextBoxFor(m => m.RefSource.SrcCableChannel, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d11">
                                    <div>
                                        Time:
                                        @Html.TextBoxFor(m => m.RefSource.SrcCableTime, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d12">
                                    <div>
                                        Station:
                                        @Html.TextBoxFor(m => m.RefSource.SrcRadioStation, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d13">
                                    <div>
                                        Time of Day:
                                        @Html.TextBoxFor(m => m.RefSource.SrcTimeOfDay, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d14">
                                    <div>
                                        Publication:
                                        @Html.TextBoxFor(m => m.RefSource.SrcPublication, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d15">
                                    <div>
                                        Issue Month:
                                        @Html.TextBoxFor(m => m.RefSource.SrcIssueMonth, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d16">
                                    <div>
                                        Physician Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcPhysicianName, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d17">
                                    <div>
                                        Flyer Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcPhyFlyerName, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d18">
                                    <div>
                                        Business Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcBusinessName, new { @class = "applitextfield1" })
                                    </div>
                                </div>

                                <div class="headrightcont" id="divid_d19">
                                    <div>
                                        Flyer Name:
                                        @Html.TextBoxFor(m => m.RefSource.SrcBizFlyerName, new { @class = "applitextfield1" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_8" class="inlinetext">
                        <div class="heading">( A8 )</div>
                        <div class="headrightcont">Very good, welcome to <input type="text" style="width:450px" class="applitextfield1" value="Advanced Physical Therapy Of Central Florida">, my name is @Html.TextBoxFor(m => m.User.Name, new { @class = "applitextfield1" }).</div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_9" class="inlinetext">
                        <div class="heading">( A9 )</div>
                        <div class="headrightcont">
                            What exactly is wrong and how can we help you?
                            @Html.DropDownListFor(m => m.Condition.ProblemType, from DataLayer.ProblrmType option in Enum.GetValues(typeof(DataLayer.ProblrmType))
                                                                                select new SelectListItem() { Text = option.ToCustomString(), Value = Convert.ToInt32((option)).ToString() }, new { @class = "applitextfield1" })
                            <div class="full_textarea" style="padding-top:20px;">
                                @Html.TextAreaFor(m => m.Condition.ProblemDetail, new { @class = "applitextfield1" })
                            </div>
                            <div>When did your <input id="txtProbType" type="text" class="applitextfield1 P_Problemtype" readonly="readonly">happen ? @Html.TextBoxFor(m => m.Condition.FromWhenProblemExist, new { @class = "form-control datepicker datepicker-bg DenyAdvanceDateSelection", style = "width:30%;display:inline; font-size:20px;", @Value = @DateTime.Now.ToString("MM/dd/yyyy"), @Readonly = true })</div>
                            <div id="divErrMsg_A8" style="display:none;"><span id="spanA8" style="color:red;"></span></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_10" class="inlinetext">
                        <div class="heading">( A10 )</div>
                        <div class="headrightcont">
                            Are you experiencing a lot of <input id="" type="text" class="applitextfield1 P_Problemtype" readonly="readonly">,
                            medium or a little bit?
                            @Html.DropDownListFor(m => m.Condition.ProblemStrength, from DataLayer.ProblemStrength option in Enum.GetValues(typeof(DataLayer.ProblemStrength))
                                                                                    select new SelectListItem() { Text = option.ToCustomString(), Value = Convert.ToInt32((option)).ToString() }, new { @class = "applitextfield1" })

                            <div id="divErrMsg_A10" style="display:none;"><span id="spanA10" style="color:red;"></span></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_11" class="inlinetext">
                        <div class="heading">( A11 )</div>
                        <div class="headrightcont">
                            I’m sorry to hear you’re experiencing so much<input id="" type="text" class="applitextfield1 P_Problemtype" readonly="readonly">.  We’ll try to get you in as
                            soon as possible. <br />
                            <div class="clearfix"></div>
                        </div>
                    </div>
                        <div id="dvid_12" class="inlinetext">
                            <div class="heading">( A12 )</div>
                            <div class="headrightcont">
                                Are you under the care of a physician?
                                <div class="p_left15" style="padding-top:20px;">
                                    <div class="inlineradio">
                                        <label class="control control--radio greenbuttradio1">
                                            <span>YES</span>
                                            @Html.RadioButtonFor(m => m.Condition.IsUnderPhysician, Convert.ToInt16(YesNo.Yes).ToString())
                                            <div class="control__indicator"></div>
                                        </label>

                                    </div>
                                    <div class="inlineradio">
                                        <label class="control control--radio redbuttradio1">
                                            <span>NO</span>
                                            @Html.RadioButtonFor(m => m.Condition.IsUnderPhysician, Convert.ToInt16(YesNo.No).ToString())
                                            <div class="control__indicator"></div>
                                        </label>

                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <span id="IsUnderPhysician" style="color:red;">Select any option</span>
                            </div>

                            <div class="clearfix"></div>
                        </div>
                        <div id="dvid_13" class="inlinetext">
                            <div class="heading">( A13 )</div>
                            <div class="headrightcont">
                                May I have his or her name please?
                                <div>
                                    @Html.TextBox("txtDoctorName", "", new { @class = "applitextfield1" })
                                    <button class="btn btn-primary DoctorSearchModal" id="btndocsearch" data-toggle="modal" data-id="To" data-target="#_SearchDoctor">Select Doctor</button>
                                </div>
                                <div>
                                    <span id="txtDoctorNameValidatinMsg" style="color:red;  align-items:center">Enter Doctor Name </span>
                                </div>
                                <div>

                                </div>
                                <div class="clearfix"></div>

                            </div>

                        </div>
                        <div id="dvid_14" class="inlinetext">
                            <div class="heading">( A14 )</div>
                            <div class="headrightcont">Do you know the name of your doctor’s group or their phone number?@Html.TextBoxFor(m => m.Condition.DoctorPhone, new { @class = "applitextfield1 UsCellFormat" })</div>
                            <div class="clearfix"></div>
                        </div>

                        <div id="dvid_15" class="inlinetext">
                            <div class="headrightcont">
                                <div class="heading">( A15 )</div>
                                <strong>Now how do you intend to pay for your services?</strong>
                                @Html.DropDownListFor(m => m.Condition.PaymentType, from DataLayer.PatientPaymentOption option in Enum.GetValues(typeof(DataLayer.PatientPaymentOption))
                                                                                    select new SelectListItem() { Text = option.ToCustomString(), Value = Convert.ToInt32((option)).ToString() })
                            </div>                            
                            <div class="clearfix"></div>
                            <div>
                                <span id="ddlPayOptValidatinMsg" style="color:red;  align-items:center">Please select a payment option</span>
                            </div>
                        </div>
                        <div id="dvid_16" class="inlinetext">
                            <div class="heading">( A16 )</div>
                            <div class="headrightcont">Are you seeking in home care or would you be coming to us? </div>
                            <div class="p_left15" style="padding-top:55px">

                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span style="top: 12px; font-size: 20px;"> HOME CARE</span>
                                        @Html.RadioButtonFor(m => m.Condition.SeekingCareType, (Convert.ToInt16(SeekingCareType.Home_Care) + 1).ToString(), new { @class = "radioCare", @id = "Home_Care" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span style="top: 12px; font-size: 20px;">OUT PATIENT</span>
                                        @Html.RadioButtonFor(m => m.Condition.SeekingCareType, (Convert.ToInt16(SeekingCareType.Walk_In) + 1).ToString(), new { @class = "radioCare", @id = "Walk_In" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <span id="SeekingCareType_ErrMsg" style="color:red;">Select any option</span>
                        </div>                    
                    <div id="dvid_17" class="inlinetext">
                        <div class="heading">( A17 )</div>
                        <div class="headrightcont">
                            Which office is most convenient? SW State Road 200 in Ocala, SE 17th Street in Ocala, Belleview, or The Villages?<br>
                            First Choice
                            @Html.DropDownListFor(m => m.Condition.ConvenientLocation1, (IEnumerable<SelectListItem>)ViewBag.ConvenientLocation1, new { @class = "applitextfield1", @Style = "width:320px;" })
                            Second Choice
                            @Html.DropDownListFor(m => m.Condition.ConvenientLocation2, (IEnumerable<SelectListItem>)ViewBag.ConvenientLocation2, new { @class = "applitextfield1", @Style = "width:320px;" })
                            <div>
                                <span id="SameLocationError" style="color:red; display:none;">Select different location for second choice</span>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_18" class="inlinetext">
                        <div class="heading">( A18 )</div>
                        <div class="headrightcont">
                            What day of the week works best for you?
                            <div class="clearfix"></div>
                            <br />
                            <div class="col-sm-12">
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradioNew">
                                        <span>ANY DAY</span>
                                        @Html.CheckBox("Anyday", false, new { @id = "Condition_SuitedWeekDay", @value = "1", @class = "WeekDay" })
                                        <div class="control__indicator"></div>
                                    </label>
                                </div>

                            </div>
                            <div class="col-sm-12">
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradioNew1">
                                        <span>MONDAY</span>
                                        @Html.CheckBox("Monday", false, new { @id = "Condition_SuitedWeekDay", @value = "2", @class = "WeekDay 5Days" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradioNew1">
                                        <span>TUESDAY</span>
                                        @Html.CheckBox("Tuesday", false, new { @id = "Condition_SuitedWeekDay", @value = "3", @class = "WeekDay 5Days" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradioNew1">
                                        <span>WEDNESDAY</span>
                                        @Html.CheckBox("Wednesday", false, new { @id = "Condition_SuitedWeekDay", @value = "4", @class = "WeekDay 5Days" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradioNew1">
                                        <span>THURSDAY</span>
                                        @Html.CheckBox("Thursday", false, new { @id = "Condition_SuitedWeekDay", @value = "5", @class = "WeekDay 5Days" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradioNew1">
                                        <span>FRIDAY</span>
                                        @Html.CheckBox("Friday", false, new { @id = "Condition_SuitedWeekDay", @value = "6", @class = "WeekDay 5Days" })
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>

                            </div>
                            <div id="divWeekDay" style="display:none;"><span id="spWeekDay" style="color:red;"></span></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_19" class="inlinetext">
                        <div class="heading">( A19 )</div>
                        <div class="headrightcont">
                            And are mornings or afternoons better? <div class="p_left15" style="padding-top:20px;">
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span>MORNING</span>
                                        @Html.RadioButtonFor(m => m.Condition.SuitedDayTime, 1)
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span>AFTERNOON</span>
                                        @Html.RadioButtonFor(m => m.Condition.SuitedDayTime, 2)
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span>ANYTIME</span>
                                        @Html.RadioButtonFor(m => m.Condition.SuitedDayTime, 0)
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <span id="SuitedDayTime" style="color:red;">Select any option</span>
                        </div>

                        <div class="clearfix"></div>
                    </div>
                    <div id="dvid_20" class="inlinetext">
                        <div class="heading">( A20 )</div>
                        <div class="headrightcont">
                            Are you looking to get in as soon as possible or can you wait a few days? <div class="p_left15" style="padding-top:20px;">
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span>URGENT</span>
                                        @Html.RadioButtonFor(m => m.Condition.CanWaitUpto, Convert.ToInt16(CanWaitUpto.Urgent).ToString())
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                <div class="inlineradio">
                                    <label class="control control--radio greenbuttradio1">
                                        <span>CAN WAIT</span>
                                        @Html.RadioButtonFor(m => m.Condition.CanWaitUpto, Convert.ToInt16(CanWaitUpto.Can_Wait_a_Week).ToString())
                                        <div class="control__indicator"></div>
                                    </label>

                                </div>
                                @*<div class="inlineradio">
                                        <label class="control control--radio greenbuttradio1">
                                            <span>CAN WAIT A MONTH</span>
                                            @Html.RadioButtonFor(m => m.Condition.CanWaitUpto, Convert.ToInt16(CanWaitUpto.Can_Wait_a_Month).ToString())
                                            <div class="control__indicator"></div>
                                        </label>

                                    </div>*@
                                <div class="clearfix"></div>
                            </div>
                            <span id="CanWaitUpto" style="color:red;">Select any option</span>
                            </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_21" class="inlinetext">
                    <div class="heading">( A21 )</div>
                    <div class="headrightcont">Okay, let me go ahead and check to see exactly what times we have available and I’ll be right back, okay? <strong>(Hold)</strong></div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_22" class="inlinetext">
                    <div class="heading">( A22 )</div>
                    <div class="headrightcont">
                        Hi <input id="" type="text" class="applitextfield1 j_PatientName" readonly="readonly">, are you still there? Great News! We have appointments available on

                        @Html.DropDownListFor(m => m.tblMPatSchdAppointmentType.AppointmentType_Id, (SelectList)ViewBag.AppoinmentType)
                        <button class="btn btn-primary" onclick="fnShowDateForBooking();">Select for booking appointment</button>
                        ,
                        @Html.HiddenFor(m => m.Condition.ScheduledDateTime)
                        <div> Which one do you prefer? <input type="text" id="ScheduledDateTime" name="ScheduledDateTime" class="form-control" style="width:40%; font-size:19px;" /></div>

                        <span id="ScheduledDateTime_ErrorMsg" style="color:red;">Select date for booking appointment</span>
                    </div>

                    <div class="clearfix"></div>
                </div>
                <div id="dvid_23" class="inlinetext">
                    <div class="heading">( A23 )</div>
                    <div class="headrightcont">Okay, I’m going to go ahead and put you down for <input id="" type="text" class="applitextfield1 P_ScheduleDateTime" style="width:40%; font-size:19px;" readonly="readonly">. @*@Html.TextBoxFor(m => m.Condition.ScheduledDateTime, new { @class = "form-control datetimepicker datepicker-bg", style = "width:30%;", @Value = DateTime.Now.ToString("MM/dd/yyyy"), @Readonly = true })*@</div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_24" class="inlinetext">
                    <div class="heading">( A24 )</div>
                    <div class="headrightcont">
                        Now I’m going to reserve this spot for you, so if for any reason you might have to cancel or reschedule, call us at
                        least 48 hours in advance to let us know, okay?
                    </div>
                    <div class="clearfix"></div>
                    <br>
                </div>
                <div id="dvid_25" class="inlinetext">
                    <div class="heading">( A25 )</div>
                    <div class="headrightcont">
                        Do you have any concerns with transportation? <div class="p_left15" style="padding-top:20px;">
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsTransport, Convert.ToInt16(YesNo.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsTransport, Convert.ToInt16(YesNo.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <span id="IsTransportFoundError" style="color:red;">Select any option</span>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_26" class="inlinetext">
                    <div class="heading">( A26 )</div>
                    <div class="headrightcont" id="headrightcont">
                        What county do you live in
                        <select id="ddlCounty" name="ddlCounty">
                            <option value="">--Select--</option>
                            <option value="Marion">Marion</option>
                            <option value="Lake">Lake</option>
                            <option value="Sumter">Sumter</option>
                            <option value="None">None of the above</option>
                        </select>&nbsp;&nbsp;@Html.TextBox("txtTCounty", "", new { @class = "applitextfield1" })
                    </div>
                    @Html.HiddenFor(m => m.Condition.County)
                    <script>
                        $(document).on('change', '#ddlCounty', function () {
                            if ($('#ddlCounty').val() != "None") {
                                $('#Condition_County').val($('#ddlCounty').val());
                                $('#txtTCounty').hide();
                            }
                            else
                            {
                                $('#txtTCounty').show();
                            }
                        });

                        $(document).on('keypress', '#txtTCounty', function () {
                            $('#Condition_County').val($('#txtTCounty').val());
                        });
                    </script>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_27" class="inlinetext">
                    <div class="heading">( A27 )</div>
                    <div class="headrightcont" id="headrightcont">
                        Okay, after we hang up I will contact <input id="txtCounty" type="text" class="applitextfield1 P_County" readonly="readonly"> County transport and arrange for your transportation.
                    </div>

                    <div class="clearfix"></div>
                </div>

                <div id="dvid_28">
                    <h3>B. FOR HOME HEALTHCARE ONLY</h3>

                    <div class="inlinetext">
                        <div class="heading">( B1 )</div>
                        <div class="headrightcont">Okay, what city do you live in?@Html.TextBoxFor(m => m.Patient.City, new { @class = "applitextfield1 P_City", @ReadOnly = true })</div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_29" class="inlinetext">
                    <div class="heading">( B2 )</div>
                    <div class="headrightcont">
                        Is it difficult for you to leave your home? <div class="p_left15" style="padding-top:20px;">

                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsDifficultToLeaveHome, Convert.ToInt16(YesNo.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsDifficultToLeaveHome, Convert.ToInt16(YesNo.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <span id="IsDifficultToLeaveHome" style="color:red;">Select any option</span>
                    <div class="clearfix"></div>
                </div>


                <div id="dvid_30" class="inlinetext">
                    <div class="heading">( B3 )</div>
                    <div class="headrightcont">
                        Do you use a cane, walker or wheelchair?
                        <div style="padding-top:20px;">
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Cane</span>
                                    @Html.RadioButtonFor(m => m.Condition.WalkerType, Convert.ToInt16(WalkerType.cane).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Walker</span>
                                    @Html.RadioButtonFor(m => m.Condition.WalkerType, Convert.ToInt16(WalkerType.walker).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Wheelchair</span>
                                    @Html.RadioButtonFor(m => m.Condition.WalkerType, Convert.ToInt16(WalkerType.wheelchair).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>None</span>
                                    @Html.RadioButtonFor(m => m.Condition.WalkerType, Convert.ToInt16(WalkerType.None).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <span id="WalkerType" style="color:red;">Select any option</span>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_31" class="inlinetext">
                    <div class="heading">( B4 )</div>
                    <div class="headrightcont">How often do you leave the house for social functions?@Html.TextBoxFor(m => m.Condition.FrequencyOfLeavingHome, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="FrequencyValidatinMsg" style="color:red;  align-items:center">Enter Frequency of Leaving Home</span>
                    </div>
                </div>

                <div id="dvid_32" class="inlinetext">
                    <div class="heading">( B5 )</div>
                    <div class="headrightcont">
                        And do you drive or does someone take you?
                        <div style="padding-top:20px;">

                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Drive By Myself</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsDriveByOwn, (Convert.ToInt16(IsDriveType.Drive_By_Own) + 1).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Drive By Someone</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsDriveByOwn, (Convert.ToInt16(IsDriveType.Drive_By_Someone) + 1).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                        <span id="IsDriveByOwn" style="color:red;">Select any option</span>
                        <div class="clearfix"></div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_33" class="inlinetext">
                    <div class="heading">( B6 )</div>
                    <div class="headrightcont">
                        Do you need the help of another person to safely leave your home?<div class="p_left15" style="padding-top:20px;">
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Yes</span>
                                    @Html.RadioButtonFor(m => m.Condition.NeedHelpOfOtherPerson, Convert.ToInt16(NeedHelpOfOtherPerson.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>No</span>
                                    @Html.RadioButtonFor(m => m.Condition.NeedHelpOfOtherPerson, Convert.ToInt16(NeedHelpOfOtherPerson.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Sometimes</span>
                                    @Html.RadioButtonFor(m => m.Condition.NeedHelpOfOtherPerson, Convert.ToInt16(NeedHelpOfOtherPerson.Some_Times).ToCustomString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <span id="NeedHelpOfOtherPerson" style="color:red;">Select any option</span>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_34" class="inlinetext">
                    <div class="heading">( B7 )</div>
                    <div class="headrightcont">
                        <div class="p_left15">
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>Eligible for HomeCare</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsEligible, (Convert.ToInt16(IsEligable.Eligible_for_HomeCare) + 1).ToString(), new { @class = "Eligibility", @id = "Eligible_for_HomeCare" })
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span> Or Not Eligible</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsEligible, (Convert.ToInt16(IsEligable.Not_Eligible) + 1).ToString(), new { @class = "Eligibility", @id = "Not_Eligible" })
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <span id="IsEligible" style="color:red;">Select any option</span>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_35" class="inlinetext">
                    <div class="heading">( B8 )</div>
                    <div class="headrightcont">
                        Do you have medical insurance?<div class="p_left15" style="padding-top:20px;">
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsInsuranceDone, Convert.ToInt16(YesNo.Yes).ToString(), new { @class = "Insurance" })
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsInsuranceDone, Convert.ToInt16(YesNo.No).ToString(), new { @class = "Insurance" })
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <span id="IsInsuranceDone" style="color:red;">Select any option</span>
                    <div class="clearfix"></div>
                </div>


                <div id="dvid_36" class="inlinetext">
                    <div class="heading">( B9 )</div>
                    <div class="headrightcont">Okay, what type of insurance do you have?@Html.TextBoxFor(m => m.HomeCareInsurances[0].Name, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="HomeNameValidatinMsg" style="color:red;  align-items:center">Enter Insurance Name</span>
                    </div>
                </div>

                <div id="dvid_37" class="inlinetext">
                    <div class="heading">( B10 )</div>
                    <div class="headrightcont">Do you have your card handy? May I have the policy number? @Html.TextBoxFor(m => m.HomeCareInsurances[0].PolicyNumber, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="HomeNumberValidatinMsg" style="color:red;  align-items:center">Enter Policy Number</span>
                    </div>
                </div>

                <div id="dvid_38" class="inlinetext">
                    <div class="heading">( B11 )</div>
                    <div class="headrightcont">And is there a group number?@Html.TextBoxFor(m => m.HomeCareInsurances[0].GroupNumber, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_39" class="inlinetext">
                    <div class="heading">( B12 )</div>
                    <div class="headrightcont">
                        Thank you for this information. I’m going to have our home care specialist call you back as soon as she can to set up
                        all of your services. Does that work okay for you? Great! Thank you for calling and have a wonderful day.
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_40">
                    <h3>C. IN-NETWORK COMMERCIAL INSURANCE / MEDICARE REPLACEMENT PLAN</h3>

                    <div class="inlinetext">
                        <div class="heading">( C1 )</div>
                        <div class="headrightcont">Okay, do you have your card handy? <strong>(IF NOT, THEY WILL NEED TO CALL BACK WHEN IT’S AVAILABLE.)</strong></div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_41" class="inlinetext">
                    <div class="heading">( C2 )</div>
                    <div class="headrightcont">May I have the policy number?@Html.TextBoxFor(m => m.InNetworkInsurances[0].PolicyNumber, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="InNetworkNumberValidatinMsg" style="color:red;  align-items:center">Enter Policy Number</span>
                    </div>
                </div>

                <div id="dvid_42" class="inlinetext">
                    <div class="heading">( C3 )</div>
                    <div class="headrightcont">And is there a group number?@Html.TextBoxFor(m => m.InNetworkInsurances[0].GroupNumber, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_43" class="inlinetext">
                    <div class="heading">( C4 )</div>
                    <div class="headrightcont">May I have the name of the policy holder?@Html.TextBoxFor(m => m.InNetworkInsurances[0].HolderName, new { @class = "applitextfield1 j_PatientName" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_44" class="inlinetext">
                    <div class="heading">( C5 )</div>
                    <div class="headrightcont">And may I have the policy holder’s date of birth?<div style="padding-top:20px;">@Html.TextBoxFor(m => m.InNetworkInsurances[0].HolderDOB, new { @class = "form-control  j_PatientDOB HolderDOB1 CustomDateFormat", style = "width:30%;", @placeholder = "mm/dd/yyyy" })</div></div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_45" class="inlinetext">
                    <div class="heading">( C6 )</div>
                    <div class="headrightcont">
                        Can you turn that card over and give me the phone number listed for Provider Service?<div style="padding-top:20px;">@Html.TextBoxFor(m => m.InNetworkInsurances[0].ServiceProviderPhone, new { @class = "applitextfield1 UsCellFormat" })</div>
                        <p class="p_top15">
                            <strong>
                                ANSWER TO ‘HOW MUCH WILL IT BE?’: ANYWHERE BETWEEN $5 AND $60 PER VISIT DEPENDING ON YOUR
                                INSURANCE AND MOST OF OUR PATIENTS GET BETTER WITHIN 8 VISITS.
                            </strong>
                        </p>
                        <br>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_46">
                    <h3>D. MEDICARE</h3>
                    <div class="inlinetext">
                        <div class="heading">( D1 )</div>
                        <div class="headrightcont">Okay, do you have your card handy? <strong>(IF NOT, THEY WILL NEED TO CALL BACK WHEN IT’S AVAILABLE.)</strong></div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_47" class="inlinetext">
                    <div class="heading">( D2 )</div>
                    <div class="headrightcont">
                        May I have the policy number?@Html.TextBoxFor(m => m.MedicareInsurances[0].PolicyNumber, new { @class = "applitextfield1" })
                        <div>
                            <span id="div47_error" style="color:red;">Please enter policy number</span>
                        </div>


                        <div class="clearfix"></div>
                    </div>
                </div>

                <div id="dvid_48" class="inlinetext">
                    <div class="heading">( D3 )</div>
                    <div class="headrightcont">
                        And is there a group number?@Html.TextBoxFor(m => m.MedicareInsurances[0].GroupNumber, new { @class = "applitextfield1" })

                        <div class="clearfix"></div>
                    </div>
                </div>

                <div id="dvid_49" class="inlinetext">
                    <div class="heading">( D4 )</div>
                    <div class="headrightcont">
                        May I have the name of the policy holder?@Html.TextBoxFor(m => m.MedicareInsurances[0].HolderName, new { @class = "applitextfield1 j_PatientName" })
                        <div>
                            <span id="div49_error" style="color:red;">Enter the policy holder name</span>
                        </div>

                        <div class="clearfix"></div>
                    </div>
                </div>

                <div id="dvid_50" class="inlinetext">
                    <div class="heading">( D5 )</div>
                    <div class="headrightcont">
                        And may I have the policy holder’s date of birth?@Html.TextBoxFor(m => m.MedicareInsurances[0].HolderDOB, new { @class = "applitextfield1  j_PatientDOB HolderDOB2 CustomDateFormat", style = "width:20%;font-size: 26px", @placeholder = "mm/dd/yyyy" })

                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_51" class="inlinetext">
                    <div class="heading">( D6 )</div>
                    <div class="headrightcont IsSecInsurance">


                        Okay and do you have a secondary or Medigap policy as well?
                        <div class="p_left15" style="padding-top:20px;">

                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.MedicareInsurances[0].IsAuthRequiredForTreatment, Convert.ToInt16(YesNo.Yes).ToString(), new { @class = "IsSecInsurance" })
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.MedicareInsurances[0].IsAuthRequiredForTreatment, Convert.ToInt16(YesNo.No).ToString(), new { @class = "IsSecInsurance" })
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <span id="IsAuthRequiredForTreatment" style="color:red;">Select any option</span>
                </div>

                <div id="dvid_52" class="inlinetext">
                    <div class="heading">( D7 )</div>
                    <div class="headrightcont">
                        And what is the name of that policy?@Html.TextBoxFor(m => m.MedicareInsurances[1].Name, new { @class = "applitextfield1" })
                        <div>
                            <span id="div52_error" style="color:red;">Please enter policy name</span>
                            <div class="clearfix"></div>
                        </div>

                    </div>

                </div>
                <div id="dvid_53" class="inlinetext">
                    <div class="heading">( D8 )</div>
                    <div class="headrightcont">
                        May I have the policy number?@Html.TextBoxFor(m => m.MedicareInsurances[1].PolicyNumber, new { @class = "applitextfield1" })
                        <div>
                            <span id="div53_error" style="color:red;">Please enter policy number</span>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_54" class="inlinetext">
                    <div class="heading">( D9 )</div>
                    <div class="headrightcont">
                        And is there a group number?@Html.TextBoxFor(m => m.MedicareInsurances[1].GroupNumber, new { @class = "applitextfield1" })
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_55" class="inlinetext">
                    <div class="heading">( D10 )</div>
                    <div class="headrightcont">
                        May I have the name of the policy holder?@Html.TextBoxFor(m => m.MedicareInsurances[1].HolderName, new { @class = "applitextfield1 j_PatientName" })

                        <div>
                            <span id="div55_error" style="color:red;">Please enter policy holder name</span>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_56" class="inlinetext">
                    <div class="heading">( D11 )</div>
                    <div class="headrightcont">And may I have the policy holder’s date of birth?@Html.TextBoxFor(m => m.MedicareInsurances[1].HolderDOB, new { @class = "form-control  j_PatientDOB HolderDOB3 CustomDateFormat", style = "width:30%;", @placeholder = "mm/dd/yyyy" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_57" class="inlinetext">
                    <div class="heading">( D12 )</div>
                    <div class="headrightcont">
                        Have you received any physical therapy treatment this year?<div class="p_left15" style="padding-top:20px;">

                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.Condition.Is_PhysicalTherephyBefore, Convert.ToInt16(YesNo.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.Condition.Is_PhysicalTherephyBefore, Convert.ToInt16(YesNo.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <span id="Is_PhysicalTherephyBefore" style="color:red;">Select any option</span>
                </div>
                <div id="dvid_58" class="inlinetext">
                    <div class="heading">( D13 )</div>
                    <div class="headrightcont">
                        Have you been seen by a home health care agency in the last year?<div class="p_left15" style="padding-top:20px;">

                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsSeenByHomeHealthAgency, Convert.ToInt16(YesNo.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsSeenByHomeHealthAgency, Convert.ToInt16(YesNo.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <br>
                    <span id="IsSeenByHomeHealthAgency" style="color:red;">Select any option</span>
                </div>
                <div id="dvid_59" class="inlinetext">
                    <div class="heading">( D14 )</div>
                    <div class="headrightcont">
                        When were you last seen by the agency?@Html.TextBoxFor(m => m.MedicareInsurances[0].AgencyDate, new { @class = "applitextfield1" })
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_60" class="inlinetext">
                    <div class="heading">( D15 )</div>
                    <div class="headrightcont">
                        What was the name of the agency?@Html.TextBoxFor(m => m.MedicareInsurances[0].AgencyName, new { @class = "applitextfield1" })
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_61">
                    <h3>E. WORKERS COMPENSATION CLAIM</h3>

                    <div class="inlinetext">
                        <div class="heading">( E1 )</div>
                        <div class="headrightcont">What is your employer’s name?@Html.TextBoxFor(m => m.Patient.Employer_Name, new { @class = "applitextfield1" })</div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_62" class="inlinetext">
                    <div class="heading">( E2 )</div>
                    <div class="headrightcont">And what is the phone number there?@Html.TextBoxFor(m => m.Patient.Employer_Phone, new { @class = "applitextfield1 UsCellFormat" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_63" class="inlinetext">
                    <div class="heading">( E3 )</div>
                    <div class="headrightcont">What is your adjuster’s name?@Html.TextBoxFor(m => m.Condition.Insurance_Adjustor_Name, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_64" class="inlinetext">
                    <div class="heading">( E4 )</div>
                    <div class="headrightcont">And what is his or her phone number?@Html.TextBoxFor(m => m.Condition.Insurance_Adjustor_Phone, new { @class = "applitextfield1 UsCellFormat" })</div>
                    <div class="clearfix"></div>
                    <br>
                </div>
                <div id="dvid_65">
                    <h3>F. AUTO ACCIDENT / ATTORNEY LIEN CASE</h3>
                    <div class="heading">( F1 )</div>
                    <div class="headrightcont">
                        Were you seen by a medical doctor within 14 days of your accident?<div class="p_left15" style="padding-top:20px;">

                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsUnderMedicalDoctor, Convert.ToInt16(YesNo.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio redbuttradio1">
                                    <span>NO</span>
                                    @Html.RadioButtonFor(m => m.Condition.IsUnderMedicalDoctor, Convert.ToInt16(YesNo.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <span id="IsUnderMedicalDoctor" style="color:red;">Select any option</span>
                    <br>
                </div>
                <div id="dvid_66" class="inlinetext">

                    <div class="inlinetext">
                        <div class="heading">( F2 )</div>
                        <div class="headrightcont">If so, who?@Html.TextBoxFor(m => m.Condition.WhoseFaultAccident, new { @class = "applitextfield1" })</div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_67" class="inlinetext">
                    <div class="heading">( F3 )</div>
                    <div class="headrightcont">And what is the name of your auto insurance?@Html.TextBoxFor(m => m.Condition.NameOfAutoInsurance, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_68" class="inlinetext">
                    <div class="heading">( F4 )</div>
                    <div class="headrightcont">Do you have a contact number for that insurance company?@Html.TextBoxFor(m => m.Condition.AutoInsurancePhone, new { @class = "applitextfield1 UsCellFormat" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_69" class="inlinetext">
                    <div class="heading">( F5 )</div>
                    <div class="headrightcont">And may I have the claim number?@Html.TextBoxFor(m => m.Condition.AutoInsuranceClaimNo, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_70" class="inlinetext">
                    <div class="heading">( F6 )</div>
                    <div class="headrightcont">What is your attorney’s name?@Html.TextBoxFor(m => m.Condition.Attorney_Name, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <br>
                </div>
                <div id="dvid_71" class="inlinetext">
                    <div class="heading">( F7 )</div>
                    <div class="headrightcont">What is the date of the accident?@Html.TextBoxFor(m => m.Condition.Date_Of_Accident, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <br>
                </div>
                <div id="dvid_72">
                    <h3>G. PERSONAL INJURY (I.E. SLIP AND FALL IN A STORE)</h3>
                    <div class="inlinetext">
                        <div class="heading">( G1 )</div>
                        <div class="headrightcont">May I have the date of the injury?@Html.TextBoxFor(m => m.Condition.CaseInjuryDate, new { @class = "form-control datepicker datepicker-bg CustomDateFormat", style = "width:30%; font-size:19px;", @Value = DateTime.Now.ToString("MM/dd/yyyy"), @Readonly = true })</div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div id="dvid_73" class="inlinetext">
                    <div class="heading">( G2 )</div>
                    <div class="headrightcont">And who is the company contact person?@Html.TextBoxFor(m => m.Condition.StoreContactPerson, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_74" class="inlinetext">
                    <div class="heading">( G3 )</div>
                    <div class="headrightcont">Do you have their phone number?@Html.TextBoxFor(m => m.Condition.StorePhoneNo, new { @class = "applitextfield1 UsCellFormat" })</div>
                    <div class="clearfix"></div>
                    <br>
                </div>
                <div id="dvid_75">
                    <h3>H. HMO (OUT-OF-NETWORK)</h3>

                    <div class="inlinetext">
                        <div class="heading">( H1 )</div>
                        <div class="headrightcont">
                            Okay, since you have an HMO, you have two options available to you at this time: the first option is you can submit
                            a request to your HMO to be seen here by us and we can help you submit that request; do you know how to do that?
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_76" class="inlinetext">
                    <div class="heading">( H2 )</div>
                    <div class="headrightcont">Or option number two is that you can take advantage of our special program for HMO members who want to opt out.</div>
                    <div class="clearfix"></div>
                    <br>
                </div>
                <div id="dvid_77">
                    <h3>I. OUT-OF-NETWORK COMMERCIAL INSURANCE</h3>

                    <div class="inlinetext">
                        <div class="heading">( I1 )</div>
                        <div class="headrightcont">Okay, do you have your card handy? <strong>(IF NOT, THEY WILL NEED TO CALL BACK WHEN IT’S AVAILABLE.)</strong></div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_78" class="inlinetext">
                    <div class="heading">( I2 )</div>
                    <div class="headrightcont">May I have the policy number?@Html.TextBoxFor(m => m.OutNetworkInsurances[0].PolicyNumber, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="OutNetworkNumberValidatinMsg" style="color:red;  align-items:center">Enter Policy Number</span>
                    </div>
                </div>

                <div id="dvid_79" class="inlinetext">
                    <div class="heading">( I3 )</div>
                    <div class="headrightcont">And is there a group number?@Html.TextBoxFor(m => m.OutNetworkInsurances[0].GroupNumber, new { @class = "applitextfield1" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_80" class="inlinetext">
                    <div class="heading">( I4 )</div>
                    <div class="headrightcont">May I have the name of the policy holder?@Html.TextBoxFor(m => m.OutNetworkInsurances[0].HolderName, new { @class = "applitextfield1 j_PatientName" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_81" class="inlinetext">
                    <div class="heading">( I5 )</div>
                    <div class="headrightcont">And may I have the policy holder’s date of birth?@Html.TextBoxFor(m => m.OutNetworkInsurances[0].HolderDOB, new { @class = "form-control  j_PatientDOB HolderDOB4 CustomDateFormat", style = "width:30%;", @placeholder = "mm/dd/yyyy" })</div>
                    <div class="clearfix"></div>
                </div>

                <div id="dvid_82" class="inlinetext">
                    <div class="heading">( I6 )</div>
                    <div class="headrightcont">Can you turn that card over and give me the phone number listed for Provider Service?@Html.TextBoxFor(m => m.OutNetworkInsurances[0].ServiceProviderPhone, new { @class = "applitextfield1 UsCellFormat" })</div>
                    <div class="clearfix"></div>
                </div>


                <div id="dvid_83" class="inlinetext">
                    <div class="heading">( I7 )</div>
                    <div class="headrightcont">
                        Do you know if you’ve met your deductible?<div class="p_left15" style="padding-top:20px;">
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>YES</span>
                                    @Html.RadioButtonFor(m => m.OutNetworkInsurances[0].Deductible, Convert.ToInt16(YesNo.Yes).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>No</span>
                                    @Html.RadioButtonFor(m => m.OutNetworkInsurances[0].Deductible, Convert.ToInt16(YesNo.No).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>
                            <div class="inlineradio">
                                <label class="control control--radio greenbuttradio1">
                                    <span>No Not Sure</span>
                                    @Html.RadioButtonFor(m => m.OutNetworkInsurances[0].Deductible, Convert.ToInt16(YesNo.NoOption).ToString())
                                    <div class="control__indicator"></div>
                                </label>

                            </div>

                        </div>
                        <span id="IsDeductible" style="color:red;">Select any option</span>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_84" style="font-size:23px;">
                    <p><strong>IF YOU HAVE VERIFIED PATIENT BENEFITS:</strong></p>
                </div>
                <div id="dvid_85" class="inlinetext">
                    <div class="heading">( I8 )</div>
                    <div class="headrightcont">
                        <strong>For members with unmet out-of-network deductibles:</strong> ‘You have two options; you can go to an in-network provider and pay $ (in-network deductible amount >$499) or you can come to us and we can see you for only $499.’
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_86" class="inlinetext">
                    <div class="heading">( I9 )</div>
                    <div class="headrightcont">
                        For members with a deductible that has been met: “You can go in-network and pay a @Html.TextBoxFor(m => m.OutNetworkInsurances[0].CoInsurance, new { @class = "applitextfield1", @id = "txtCoInsurance" }) % co-insurance or
                        you can come to us out of network and pay a little bit more at @Html.TextBoxFor(m => m.OutNetworkInsurances[0].CoPay, new { @class = "applitextfield1", @id = "txtCoPay" }) %.
                    </div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="OutNetworkCoValidatinMsg" style="color:red;  align-items:center">Enter CoInsurance/CoPay</span>
                    </div>
                    <br>
                </div>
                <div id="dvid_87" style="font-size:23px;">
                    <p><strong>IF YOU HAVE NOT VERIFIED PATIENT BENEFITS:</strong></p>
                    <p>CONTINUE WITH ACTIVATION. WHEN CALL COMPLETE, CONTACT INSURANCE COMPANY TO CHECK PATIENT BENEFITS. THEN CALL THE PATIENT BACK WITH INFORMATION.</p>
                </div>
                <div id="dvid_88" class="inlinetext">
                    <div class="heading">( I10 )</div>
                    <div class="headrightcont">
                        <strong>For members with unmet out-of-network deductibles:</strong> ‘You have two options; you can go to an in-network provider and pay $ (in-network deductible amount >$499) or you can come to us and we can see you for only $499.’
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_89" class="inlinetext">
                    <div class="heading">( I11 )</div>
                    <div class="headrightcont">
                        For members with a deductible that has been met: “You can go in-network and pay a @Html.TextBoxFor(m => m.OutNetworkInsurances[0].CoInsurance, new { @class = "applitextfield1" }) % co-insurance or
                        you can come to us out of network and pay a little bit more at @Html.TextBoxFor(m => m.OutNetworkInsurances[0].CoPay, new { @class = "applitextfield1" }) %.
                    </div>
                    <div class="clearfix"></div>
                    <div>
                        <span id="OutNetworkCoValidatinMsg" style="color:red;  align-items:center">Enter CoInsurance/CoPay</span>
                    </div>
                    <br>
                </div>
                <div id="dvid_90">
                    <h3>J. APT PATIENTS HEAR ‘APPLE’ - NO TRANSPORT NEEDED</h3>
                    <div class="inlinetext">
                        <div class="heading">( J1 )</div>
                        <div class="headrightcont">
                            <strong>(Attire)</strong>&nbsp;&nbsp;&nbsp;Since it is your (body part) I’d like for you to wear (tank top/shorts/loose clothing) so its easier for you to participate in your exam. We do have gowns available but they’re not quite as comfortable as your own clothes.
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_91" class="inlinetext">
                    <div class="heading">( J2 )</div>
                    <div class="headrightcont">
                        <strong>(Paperwork Via Email)</strong>&nbsp;&nbsp;&nbsp;Most of our patients find it convenient to complete their paperwork at home.
                        <div style="padding-top:20px;">
                            What is the best email address to send that to?<label class="radio-inline"> @Html.TextBoxFor(m => m.PatientUser.Email, new { @class = "applitextfield1", @id = "PatientUser_Email1" })</label>
                            @Html.ValidationMessageFor(m => m.PatientUser.Email)
                            <div id="divErrMsg_J2" style="display:none;"><span id="spanJ2" style="color:red;font-size:21px"></span></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_92" class="inlinetext">
                    <div class="heading">( J3 )</div>
                    <div class="headrightcont">
                        <strong>(Payment)</strong>&nbsp;&nbsp;&nbsp;Also remember to bring some form of payment like check, card, or cash. If for any reason you feel like your deductible or co-insurance is too high, don’t worry; we have programs available for that.

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_93" class="inlinetext">
                    <div class="heading">( J4 )</div>
                    <div class="headrightcont">
                        <strong>(Late)</strong>&nbsp;&nbsp;&nbsp;Also, don’t be late; we have a pretty strict late policy and we’ll have to reschedule if you are late.

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_94" class="inlinetext">
                    <div class="heading">( J5 )</div>
                    <div class="headrightcont">
                        <strong>(Early)</strong>&nbsp;&nbsp;&nbsp;Also, since you are using insurance and there’s paperwork involved, come 30 minutes early before your appointment; that way we can take care of all those things.

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_95" class="inlinetext">
                    <div class="heading">( J6 )</div>
                    <div class="headrightcont">
                        So we’ll see you on <input id="" type="text" class="applitextfield1 P_ScheduleDateTime" readonly="readonly" style="width: 36%">. Okay
                        <input id="" type="text" class="applitextfield1 j_PatientName" readonly="readonly"> it was nice talking to you and we look forward to seeing you soon. Have a wonderful day!

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_96">
                    <h3>K. APT PATIENTS HEAR ‘APPLE’ - TRANSPORT NEEDED</h3>
                    <div class="inlinetext">
                        <div class="heading">( K1 )</div>
                        <div class="headrightcont">
                            <strong>(Attire)</strong>&nbsp;&nbsp;&nbsp;Since it is your (body part) I’d like for you to wear (tank top/shorts/loose clothing) so its easier for you to participate in your exam. We do have gowns available but they’re not quite as comfortable as your own clothes.
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvid_97" class="inlinetext">
                    <div class="heading">( K2 )</div>
                    <div class="headrightcont">
                        <strong>(Paperwork Via Email)</strong>&nbsp;&nbsp;&nbsp;Most of our patients find it convenient to complete their paperwork at home.
                        <div style="padding-top:20px;">
                            What is the best email address to send that to?<label class="radio-inline"> @Html.TextBoxFor(m => m.PatientUser.Email, new { @class = "applitextfield1", @id = "PatientUser_Email2" })</label>
                            @Html.ValidationMessageFor(m => m.PatientUser.Email)
                            <div id="divErrMsg_K2" style="display:none;"><span id="spanK2" style="color:red;font-size:21px"></span></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_98" class="inlinetext">
                    <div class="heading">( K3 )</div>
                    <div class="headrightcont">
                        <strong>(Payment)</strong>&nbsp;&nbsp;&nbsp;Also remember to bring some form of payment like check, card, or cash. If for any reason you feel like your deductible or co-insurance is too high, don’t worry; we have programs available for that.

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_99" class="inlinetext">
                    <div class="heading">( K4 )</div>
                    <div class="headrightcont">
                        <strong>(Late)</strong>&nbsp;&nbsp;&nbsp;Also, don’t be late; we have a pretty strict late policy and we’ll have to reschedule if you are late.

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_100" class="inlinetext">
                    <div class="heading">( K5 )</div>
                    <div class="headrightcont">
                        <strong>(Early)</strong>&nbsp;&nbsp;&nbsp;Also, since you are using insurance and there’s paperwork involved, come 30 minutes early before your appointment; that way we can take care of all those things.

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div id="dvid_101" class="inlinetext">
                    <div class="heading">( K6 )</div>
                    <div class="headrightcont">
                        So we’ll see you on <input id="" type="text" class="applitextfield1 P_ScheduleDateTime" readonly="readonly" style="width: 36%">. As I mentioned previously, after we hang up I will contact
                        <input id="" type="text" class="applitextfield1 j_CountyName" readonly="readonly"> transport to arrange your transportation.
                        <ul>
                            <li>I will give you a call with your pickup information.</li>
                            <li>I will call you back with <input id="" type="text" class="applitextfield1 j_CountyName" readonly="readonly"> transport to schedule your pickup once I have them on the line.</li>
                        </ul>
                        Okay
                        <input id="" type="text" class="applitextfield1 j_PatientName" readonly="readonly"> it was nice talking to you and we look forward to seeing you soon. Have a wonderful day!
                    </div>
                    <div class="clearfix"></div>
                </div>
                
                @Html.Partial("_PrevNext")

                <div id="dvid_subbutt" class="subbutt" style="display:none">

                    <button type="submit" id="btnCreatePatient" class="btn btn-orange pull-right create_bottom">Create Patient</button>
                    <div class="clearfix"></div>
                </div>
                
             </div>
            }
        </div>
    </div>
</section>
<div class="modal fade" id="_SearchDateForBooking" role="dialog">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content" style="min-height:600px;">
            <div class="modal-header" style="padding-bottom: 0; border-bottom: 0;">
                <button type="button" class="close box-close" data-dismiss="modal" style="font-size:32px;">&times;</button>
                <div>

                    <center><strong> <span id="spAppoHeader" style="font-size:35px;color:#141494;"></span></strong></center>



                </div>

            </div>
            <div class="modal-body">
                <div>
                    <div style="height:50px;">
                        <button type="button" class="btn btn-primary pull-left " style="display:none;" id="btnPrevNew">Prev</button>
                        <button type="button" class="btn btn-primary pull-right" id="btnNextNew">Next</button>
                    </div>
                    <div id='calendar' style="text-align: center"></div>






                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="_SearchDoctor" role="dialog">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="padding-bottom:0;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 id="headingSearch" class="modal-title">Search Doctor</h3>
                <h3 id="headingAddDoctor" class="modal-title">Add Doctor</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div id="searchDoctor">
                        <div class="row SearchFilterContainer" id="SearchFilterContainer">
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>First Name</div>
                                <input id="txtDoctorFirstName" type="text" class="applitextfield2" name="name" value="" autofocus />
                                </div>
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>Last Name</div>
                                <input id="txtDoctorLastName" type="text" class="applitextfield2" name="name" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>NPI No</div>
                                <input id="txtDoctorNpiNo" type="text" class="applitextfield2" name="name" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>Phone</div>
                                <input id="txtDoctorPhone" type="text" class="applitextfield2" name="name" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>City</div>
                                <input id="txtDoctorCity" type="text" class="applitextfield2" name="name" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>State</div>
                                <input id="txtDoctorState" type="text" class="applitextfield2" name="name" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>ZipCode</div>
                                <input id="txtDoctorZipCode" type="text" class="applitextfield2" name="name" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class="headrightcont">&nbsp;</div>
                                <button class="btn btn-success" onclick="fnSearchForDoctor();" id="btnTo">Search</button>
                            </div>
                        </div>
                        <div class="SearchResultContainer">
                            <table class="table table-bordered" id="tblDoctorList">
                                <thead>
                                    <tr>
                                        <td>First Name</td>
                                        <td>Last Name</td>
                                        <td>NPI No</td>
                                        <td>Phone1 </td>
                                        <td>Phone2</td>
                                        <td>Address</td>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <div id="div_noRec" style="text-align: center; vertical-align: middle; line-height: 38px; display:none;"><label style='color:red'>There no records are found !!</label></div>
                            <button style="display:none;" class="btn btn-success" id="btnAddNewDoctor" onclick="fnShowAddDoctorPane();">Add New Doctor</button>
                        </div>
                    </div>
                    <div id="CreateNewDoctor">

                        <div class="row">
                            <div class="col-sm-6 form-group">
                                @Html.Label("First Name")
                                <input type="text" id="First_Name" class="form-control" />
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("Last Name")
                                <input type="text" id="Last_Name" class="form-control" />

                            </div>
                        </div>

                        <div class="row">

                            <div class="col-sm-6 form-group">
                                @Html.Label("Doctor Type")

                                @Html.DropDownList("DoctorType", from DataLayer.DoctorType state in Enum.GetValues(typeof(DataLayer.DoctorType))
                                                                         select new SelectListItem() { Text = state.ToString(), Value = ((int)state).ToString() }, new { @class = "form-control" })
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("NPI No")
                                <input type="text" id="NPI_No" class="form-control" />
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-sm-6 form-group">
                                @Html.Label("Phone1")
                                <input type="text" id="Phone1" class="form-control UsCellFormat" />
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("Phone2")
                                <input type="text" id="Phone2" class="form-control UsCellFormat" />
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-sm-6 form-group">
                                @Html.Label("City")
                                <input type="text" id="DoctorCity" class="form-control" />
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("State")
                                @Html.DropDownList("State")
                            </div>
                        </div>

                        <div class="row">


                            <div class="col-sm-6 form-group">
                                @Html.Label("Fax")
                                <input type="text" id="Fax" class="form-control" />
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("Zip Code")
                                <input type="text" id="DoctorZipCode" class="form-control" maxlength="5" />
                            </div>
                        </div>




                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                <button id="btnDoctorSave" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="_SearchPatient" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding-bottom:0;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Search Patient Name</h4>
            </div>
            <div class="modal-body">
                <div>
                    <div id="searchPatient">
                        <div class="row SearchFilterContainer" id="SearchFilterContainer">
                            <div class="col-sm-6 col-md-3">
                                <div class=headrightcont>Patient Name</div>
                                <input id="txtPatientFullName" type="text" class="applitextfield2" name="Fname" value="" />
                            </div>
                            <div class="col-sm-6 col-md-3">
                                <div class="headrightcont">&nbsp;</div>
                                <button id="btn_psearch" class="btn btn-success fnSearchForPatient1" onclick="fnSearchForPatient();">Search</button>
                            </div>
                        </div>
                        <div class="SearchResultContainer1">
                            <table class="table table-bordered table-scroll" id="tblPatientList">
                                <thead>
                                    <tr>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>DOB</th>
                                        <th>Address</th>
                                    </tr>
                                </thead>
                                <tbody> </tbody>
                            </table>

                            <div id="div_noRecPatient" style="text-align: center; vertical-align: middle; line-height: 38px; display:none;"><label style='color:red'>There no records are found !!</label></div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdToCC" value="" />
                <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div id="loadforscheduleapp" class="loadingdivschedule">
    <div class="loadingcontainerschedule">
        <img src="~/Images/pageloader1.gif" width="200" height="200" />
    </div>
</div>
<style>
    .box1 {
        display: inline-block;
        width: 31%;
        min-height: 134px;
        margin: 7px;
        border: 1px;
        border-color: blue;
        padding: 15px 20px;
        box-shadow: inset 0px 0px 21px #0f801b;
        text-align: left;
    }

    .box2 {
        display: inline-block;
        width: 31%;
        min-height: 134px;
        margin: 7px;
        border: 1px;
        border-color: blue;
        padding: 15px 20px;
        box-shadow: inset 0px 0px 21px #ddd;
        text-align: left;
    }
</style>
<script>
    var __startdate = new Date();
    var __enddate = new Date();
    var start;
    var end
    function fnShowDateForBooking() {

        var i = 0;
        var patientName = $("#Patient_FirstName").val() + " " + $("#Patient_LastName").val();
        //start = '@startdate';
        //end = '@enddate';
        //__startdate = start;
        //__enddate = end;
        __startdate = new Date();
        __enddate = new Date();
        __startdate.setDate(__enddate.getDate() + 1);
        __enddate.setDate(__enddate.getDate() + 7);

        $('#spAppoHeader').text(fnGetFormatedDate(__startdate) + " - " + fnGetFormatedDate(__enddate));

        var Appointment_TypeId = $("#tblMPatSchdAppointmentType_AppointmentType_Id").val();
        var DaySessionTime = $('input:radio[name="Condition.SuitedDayTime"]:checked').val();
        var LocationId = $("#Condition_ConvenientLocation1").val();
        //$("#hdnPageNo").val(0);
        //alert(DaySessionTime);
        $('#_SearchDateForBooking').modal();
        $('#calendar').html("");
        $('#loadforscheduleapp').show();
        $.ajax({
            @*url: '@Url.Action("GetScheduleAppo", new { controller = "Calendar", area = "PatientSchedule" })' + "?start=" + start + "&end=" + end + "&Appointment_TypeId=1019&patientName=" + patientName,*@
            url: '@Url.Action("GetScheduleAppo_1", new { controller = "Calendar", area = "PatientSchedule" })',

            type: 'GET',
            datatype: 'json',
            //data: {
            //    start: fnGetFormatedDate(__startdate), end: fnGetFormatedDate(__enddate), Appointment_TypeId: Appointment_TypeId, patientName: patientName, DaySessionTime: DaySessionTime
            //},
            data: {
                start: fnGetFormatedDate(__startdate), end: fnGetFormatedDate(__enddate), Appointment_TypeId: Appointment_TypeId, patientName: patientName, DaySessionTime: DaySessionTime, DaysName: $("#Condition_SuitedWeekDayMultiple").val(), LocationId: LocationId
            },
            success: function (result) {
                if (result.Msg == null) {
                    $(result).each(function () {
                        var hidden = '<input type="hidden" name="name" value="' + this.Appointment_TypeId + '"  class="hdApptypeID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.EmployeeID + '"   class="hdEmployeeID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.ResourceID + '"   class="hdResourceID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.end + '"   class="hdenddate"/>';

                        //$('#calendar').append("<div class='" + this.rendering + "' onclick='fngetAppoInfo(this);'>" + this.Appointment_Type + "<br/>" + this.start + "<br/>" + this.end + "<br/>" + this.title + hidden + "</div>");
                        $('#calendar').append("<div class='" + this.rendering + "' onclick='fngetAppoInfo(this);'>" + this.Appointment_Type + "<br/>" + this.start + "<br/>" + this.title + hidden + "</div>");

                        i = i + 1;
                    })
                }
                else {
                    alert(result.Msg);
                }
                $('#loadforscheduleapp').hide();
            },
            error: function (error) {
                alert("Error: " + error);
                $('#loadforscheduleapp').hide();
            },
            statusCode: {
                404: function () {
                    alert("page not found");
                }
            }
        });

    }
    function fnGetFormatedDate(fullDate) {
        var twoDigitMonth = fullDate.getMonth() + 1 + ""; if (twoDigitMonth.length == 1) twoDigitMonth = "0" + twoDigitMonth;
        var twoDigitDate = fullDate.getDate() + ""; if (twoDigitDate.length == 1) twoDigitDate = "0" + twoDigitDate;
        var currentDate = twoDigitMonth + "-" + twoDigitDate + "-" + fullDate.getFullYear();
        return datetime = currentDate;

    }
    $("#btnNextNew").click(function () {
        __startdate.setDate(__startdate.getDate() + 7);
        __enddate.setDate(__enddate.getDate() + 7);
        fnShowHidePrevBtn();
        var patientName = $("#Patient_FirstName").val() + " " + $("#Patient_LastName").val();
        var Appointment_TypeId = $("#tblMPatSchdAppointmentType_AppointmentType_Id").val();
        var DaySessionTime = $('input:radio[name="Condition.SuitedDayTime"]:checked').val();
        var LocationId = $("#Condition_ConvenientLocation1").val();
        $('#loadforscheduleapp').show();

        $('#spAppoHeader').text(fnGetFormatedDate(__startdate) + "   -   " + fnGetFormatedDate(__enddate));
        $.ajax({
            @*url: '@Url.Action("GetScheduleAppo", new { controller = "Calendar", area = "PatientSchedule" })' + "?start=" + start + "&end=" + end + "&Appointment_TypeId=1019&patientName=" + patientName,*@
            url: '@Url.Action("GetScheduleAppo", new { controller = "Calendar", area = "PatientSchedule" })',

            type: 'GET',
            datatype: 'json',
            data: {
                start: fnGetFormatedDate(__startdate), end: fnGetFormatedDate(__enddate), Appointment_TypeId: Appointment_TypeId, patientName: patientName, DaySessionTime: DaySessionTime, LocationId: LocationId
            },
            success: function (result) {
                $('#loadforscheduleapp').hide();
                if (result.Msg == null) {
                    $('#calendar').html(" ");
                    $(result).each(function () {
                        var hidden = '<input type="hidden" name="name" value="' + this.Appointment_TypeId + '"  class="hdApptypeID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.EmployeeID + '"   class="hdEmployeeID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.ResourceID + '"   class="hdResourceID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.end + '"   class="hdenddate"/>';

                        $('#calendar').append("<div class='" + this.rendering + "' onclick='fngetAppoInfo(this);'>" + this.Appointment_Type + "<br/>" + this.start + "<br/>" + this.title + hidden + "</div>");
                        //i = i + 1;
                    })
                }
                else {
                    alert(result.Msg);
                }
                //$('#loadforscheduleapp').hide();
            },
            error: function (error) {
                alert("Error: " + error);
                $('#loadforscheduleapp').hide();
                // $('#loadforscheduleapp').hide();
            },
            statusCode: {
                404: function () {
                    alert("page not found");
                }
            }
        });
    });

    function fnShowHidePrevBtn() {
        var d1 = new Date();
        d1.setDate(d1.getDate() + 1);
        if (d1.getTime() > __startdate.getTime())
            $("#btnPrevNew").hide();
        else
            $("#btnPrevNew").show();

    }
    $("#btnPrevNew").click(function () {

        var i = 0;
        var patientName = $("#Patient_FirstName").val() + " " + $("#Patient_LastName").val();
        __startdate.setDate(__startdate.getDate() - 7);
        __enddate.setDate(__enddate.getDate() - 7);
        $('#spAppoHeader').text(fnGetFormatedDate(__startdate) + " - " + fnGetFormatedDate(__enddate));
        fnShowHidePrevBtn();
        $('#loadforscheduleapp').show();

        var Appointment_TypeId = $("#tblMPatSchdAppointmentType_AppointmentType_Id").val();
        var DaySessionTime = $('input:radio[name="Condition.SuitedDayTime"]:checked').val();
        var LocationId = $("#Condition_ConvenientLocation1").val();
        //$("#hdnPageNo").val(parseInt($("#hdnPageNo").val()) - 1);
        //var hdnPageNo2 = $("#hdnPageNo").val();
        $.ajax({
            @*url: '@Url.Action("GetScheduleAppo", new { controller = "Calendar", area = "PatientSchedule" })' + "?start=" + start + "&end=" + end + "&Appointment_TypeId=1019&patientName=" + patientName,*@
            url: '@Url.Action("GetScheduleAppo", new { controller = "Calendar", area = "PatientSchedule" })',

            type: 'GET',
            datatype: 'json',
            data: {
                start: fnGetFormatedDate(__startdate), end: fnGetFormatedDate(__enddate), Appointment_TypeId: Appointment_TypeId, patientName: patientName, DaySessionTime: DaySessionTime, LocationId: LocationId
            },
            success: function (result) {
                $('#loadforscheduleapp').hide();
                if (result.Msg == null) {
                    $('#calendar').html(" ");
                    $(result).each(function () {
                        var hidden = '<input type="hidden" name="name" value="' + this.Appointment_TypeId + '"  class="hdApptypeID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.EmployeeID + '"   class="hdEmployeeID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.ResourceID + '"   class="hdResourceID"/>';
                        hidden += '<input type="hidden" name="name" value="' + this.end + '"   class="hdenddate"/>';

                        $('#calendar').append("<div class='" + this.rendering + "' onclick='fngetAppoInfo(this);'>" + this.Appointment_Type + "<br/>" + this.start + "<br/>" + this.title + hidden + "</div>");
                        i = i + 1;
                    })
                }
                else {
                    alert(result.Msg);
                }
                // $('#loadforscheduleapp').hide();
            },
            error: function (error) {
                alert("Error: " + error);
                $('#loadforscheduleapp').hide();
                // $('#loadforscheduleapp').hide();
            },
            statusCode: {
                404: function () {
                    alert("page not found");
                }
            }
        });
    });

    $('#dvid_subbutt').click(function () {
        $('#loadforscheduleapp').show();
    });
    function fngetAppoInfo(object) {

        var Start = $(object).find('.span_StartDate').text().split(" ");
        var TempDate = Start[0];
        //alert(TempDate.replace('-', '/').replace('-', '/'));

        //var StartDate1 = new Date(Start[0]).toDateString();//for save
        var StartDate = new Date(TempDate.replace('-', '/').replace('-', '/')).toDateString(); //for show and save
        // alert((Start[1]).getFormattedTime())
        var time = Start[1].split(":");
        var hours = time[0];
        var minutes = time[1];
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var StartTime1 = hours + ':' + minutes + ' ' + ampm;
        var StartTime = Start[1];
        // alert(StartTime);
        //alert('StartDate' + StartDate);
        var End = $(object).find('.span_EndDate').text().split(" ");
        var EndDate = End[0];
        var EndTime = End[1];
        //alert(EndTime);]\
        // alert(StartDate);
        var __index = StartDate.indexOf(" ");
        var __dayName = StartDate.substr(0, __index);
        var __datePart = StartDate.substr(__dayName.length, StartDate.length - __dayName.length);

        var appointmentDate = __dayName + ", " + __datePart;
        // alert(__dayName);
        //alert(__datePart);
        //alert(StartTime1);
        var datetime = new Date(appointmentDate + " " + StartTime1).toLocaleDateString('en-US', {
            weekday: 'long',
            month: 'long',
            day: 'numeric',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            //second: '2-digit',
            //timeZoneName: 'short'
        });
        // alert(datetime);
        // var FormattedDate = String.Format("{0:MMMM d yyyy}", StartDate);
        //Format Date
        //var weekday = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        //var dayname = weekday[StartDate.getDay()];
        //alert('dayName ==' + dayname);
        //var appointmentDate = dayname + "," + StartDate.getMonth() + " " + StartDate.getDate() +  " " + StartDate.getFullYear();
        //End Format Date
        // alert($(object).find('.hdenddate').val());
        $("#tblTPatSchdAppointment_AppointmentType").val($(object).find('.hdApptypeID').val());
        $("#tblTPatSchdAppointment_AppointmentDate").val(StartDate);
        $("#tblTPatSchdAppointment_FromTime").val(StartTime);
        $("#tblTPatSchdAppointment_ToTime").val($(object).find('.hdenddate').val());
        $("#tblTPatSchdAppointment_EmployeeID").val($(object).find('.hdEmployeeID').val());
        $("#tblTPatSchdAppointment_ResourceID").val($(object).find('.hdResourceID').val());

        $("#Condition_ScheduledDateTime").val(appointmentDate + " " + StartTime);

        var var_datetime = String(datetime);
        // alert(var_datetime);
        $("#ScheduledDateTime").val(var_datetime);

        $('#_SearchDateForBooking').modal('hide');
        $("#ScheduledDateTime_ErrorMsg").hide();
        //alert($("#tblTPatSchdAppointment_AppointmentType").val());
        //alert($("#tblTPatSchdAppointment_AppointmentDate").val());
        //alert($("#tblTPatSchdAppointment_FromTime").val());
        //alert($("#tblTPatSchdAppointment_ToTime").val());
        //alert($("#tblTPatSchdAppointment_EmployeeID").val());
        //alert($("#tblTPatSchdAppointment_ResourceID").val());

    }


    //$('#btnDoctorSave').hide();
    //$('#headingAddDoctor').hide();
    //$('#CreateNewDoctor').hide();

    //$('#btnDoctorSearch').show();
    //$('#headingSearch').show();
    //$('#searchDoctor').show();

    //$("#btnAddNewDoctor").hide();


    //$('#txtDoctorFirstName').val(""),
    //$('#txtDoctorLastName').val(""),
    //$('#txtDoctorNpiNo').val(""),
    //$('#txtDoctorPhone').val(""),
    //$('#txtDoctorCity').val(""),
    //$('#txtDoctorState').val(""),
    //$('#txtDoctorZipCode').val("")

</script>
<script>

    var _DoctorName = "";
    var _DoctorID = "";
    function stopRKey(evt) {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) { return false; }
    }

    document.onkeypress = stopRKey;

    function fnShowDoctorSearch() {
        $('#_SearchDoctor').modal();

        $('#btnDoctorSave').hide();
        $('#headingAddDoctor').hide();
        $('#CreateNewDoctor').hide();

        $('#btnDoctorSearch').show();
        $('#headingSearch').show();
        $('#searchDoctor').show();

        $("#btnAddNewDoctor").hide();


        /*$('#txtDoctorFirstName').val("");
        $('#txtDoctorLastName').val("");
        $('#txtDoctorNpiNo').val("");
        $('#txtDoctorPhone').val("");
        $('#txtDoctorCity').val("");
        $('#txtDoctorState').val("");
        $('#txtDoctorZipCode').val("");*/
        $("#tblDoctorList tbody").html('');
    }
    function fnSearchForDoctor() {
        var fname = $('#txtDoctorFirstName').val();
        // alert(fname);
        //var name = "";
        //if (fname == "") {
        //    name = $('#txtDoctorName').val();
        //}
        //else {
        //    name = fname;
        //}
        $.ajax({
            url: '@Url.Action("SearchForDoctor", "PatientActivation")',
            type: 'POST',
            data: {
                FirstName: fname,
                LastName: $('#txtDoctorLastName').val(),
                NpiNo: $('#txtDoctorNpiNo').val(),
                Phone: $('#txtDoctorPhone').val(),
                City: $('#txtDoctorCity').val(),
                State: $('#txtDoctorState').val(),
                ZipCode: $('#txtDoctorZipCode').val()
            },
            success: function (json) {
                $("#tblDoctorList tbody").html('');
                for (var i = 0; i < json.length; i++) {
                    var row = "<tr onclick='fnSelectRow(this);'>" +
                                       " <td>  " + json[i].First_Name + "</td>" +
                                        "<td>" + json[i].Last_Name + "</td>" +
                                        "<td>" + json[i].NPI_No + "</td>" +
                                        "<td>" + json[i].Phone1 + " </td>" +
                                        "<td>" + json[i].Phone2 + "</td>" +
                                        "<td> <input type='hidden' id='hdn_doctorid' name='' value='" + json[i].Doctor_Id + "' class='doctorid' />" + json[i].Address + "</td>" +
                                    "</tr>";
                    $("#tblDoctorList tbody").append(row);
                }
                if (json.length == 0) {
                    $("#div_noRec").show();
                    $("#btnAddNewDoctor").show();
                }
                else {
                    $("#div_noRec").hide();
                    $("#btnAddNewDoctor").hide();
                }
            },
            error: function (msg) {
            }
        });
    }
    function fnSearchForPatient() {
        //var __PatientName = $("#txtPatientName").val();
        ////alert(__PatientName);
        //if (__PatientName != "")
        //{
        //    $('#txtPatientFullName').val(__PatientName);
        //}

        //alert("Search");

        var fname = $('#txtPatientFullName').val();
        //alert(fname);
        var name = "";
        if (fname == "") {
            //alert(1);
            name = $('#txtPatientName').val();
        }
        else {
            //alert(11);
            name = fname;
        }
        // alert(name);



        //alert($('#txtPatientFullName').val());

        $.ajax({
            url: '@Url.Action("SearchForPatientNewUpdated", "PatientActivation")',
            type: "GET",
            dataType: "JSON",
            data: {
                PatientName: name,
                //LastName:patientName,// $('#txtPatientLastName').val(),
                //SSN: $('#txtPatientSSN').val(),
                //Email: $('#txtPatientEmail').val(),
                //Phone: $('#txtPatientPhone').val(),
                //City: $('#txtPatientCity').val(),
                //State: $('#txtPatientState').val(),
                //ZipCode: $('#txtPatientZipCode').val()
            },
            success: function (json) {
                var count = 1;
                $("#tblPatientList tbody").html('');
                for (var i = 0; i < json.length; i++) {
                    var __date = json[i].DOB;
                    //alert('DOB:' + __date);
                    var dateString = __date.substr(6);
                    var currentTime = new Date(parseInt(dateString));
                    var month;
                    if (currentTime.getMonth() < 10) {
                        month = currentTime.getMonth() + 1;
                        month = '0' + month.toString();
                    }

                    else
                        month = currentTime.getMonth() + 1;
                    var day;
                    if (currentTime.getDate() < 10) {

                        day = currentTime.getDate();
                        day = '0' + day.toString();
                    }
                    else {
                        day = currentTime.getDate();
                    }

                    var year = currentTime.getFullYear();
                    var date = month + "/" + day + "/" + year;
                    //alert(date);
                    var row = "<tr onclick='fnSelectPatientRow(this);'>" +
                                        //"<td>" + count + "</td>" +
                                       "<td>" + json[i].First_Name + "</td>" +
                                        "<td>" + json[i].Last_Name + "</td>" +
                                        "<td>" + date + "</td>" +
                                         //"<td>" + json[i].Email + "</td>" +
                                        //"<td>" + json[i].MobNo + " </td>" +
                                        //"<td>" + json[i].Email + "</td>" +
                                        //"<td>" + json[i].MobNo + " </td>" +
                                        //"<td>" + json[i].Phone2 + "</td>" +
                                        "<td> <input type='hidden' name='' value='" + json[i].Patient_Id + "' class='patientID' /><input type='hidden' name='' value='" + json[i].Email + "' class='patientEmail' />" + json[i].Address + "</td>" +
                                        "<input type='hidden' name='" + "hdn__" + count + "' id='" + "hdn__" + count + "' value='" + date + "' class='patientID' />" +
                                    "</tr>";
                    $("#tblPatientList tbody").append(row);
                    count = count + 1;
                }
                if (json.length == 0) {
                    $("#div_noRecPatient").show();
                    $("#txtPatientName").val("");
                    $("#Condition_PatientId").val("");
                }
                else {
                    $("#div_noRecPatient").hide();

                }
            },
            error: function (msg) {
            },
        });
    }
    function fnShowAddDoctorPane() {
        $('#btnDoctorSave').show();
        $('#headingAddDoctor').show();
        $('#CreateNewDoctor').show();

        $('#btnDoctorSearch').hide();
        $('#headingSearch').hide();
        $('#searchDoctor').hide();


        var theText = $("#txtDoctorState").val();
        //alert("Loop:" + theText);

        $("#State option").each(function () {
            if ($(this).text() == theText) {
                $(this).attr('selected', 'selected');
            }
        });



        $("#First_Name").val($('#txtDoctorFirstName').val());
        $("#Last_Name").val($('#txtDoctorLastName').val());
        //$("#DoctorType").val($('#txtDoctorNpiNo').val());
        $("#NPI_No").val($('#txtDoctorNpiNo').val());
        $("#Phone1").val($('#txtDoctorPhone').val());
        //$("#Phone2").val("");
        //$("#Fax").val("");
        // alert($('#txtDoctorCity').val());
        $("#DoctorCity").val($('#txtDoctorCity').val());
        // alert($('#City').val());
        //$("#State").val($('#txtDoctorState').val());
        $("#DoctorZipCode").val($('#txtDoctorZipCode').val());



        $("#btnAddNewDoctor").show();
    }
    function fnSelectRow(obj) {
        // alert(1);
        $("#tblDoctorList tbody tr").removeClass('selectedRow');
        $(obj).addClass('selectedRow');
        //alert($($(obj).find('td')[0]).html() + " " + $($(obj).find('td')[1]).html());
        $('#_SearchDoctor').modal('hide');
        //alert($($(obj).find('input')[0]).val());
        $("#txtDoctorName").val(($($(obj).find('td')[0]).html().trim() + " " + $($(obj).find('td')[1]).html().trim()).trim());
        $("#Condition_DoctorID").val($($(obj).find('input')[0]).val());
        $("#txtDoctorNameValidatinMsg").hide();
        //alert($("#Condition_DoctorID").val());

    }

    $('#txtDoctorFirstName').on("keypress", function (e) {
        if (e.keyCode == 13) {
            $("#btnTo").click();
        }
    });
    $('#txtDoctorLastName').on("keypress", function (e) {
        if (e.keyCode == 13) {
            $("#btnTo").click();
        }
    });
</script>
<script>
    __last = 101;
    function fnValidate(pos) {
        var ele = [];
        if (pos == 91) {
            ele = ["Email"];
        }
        else if (pos == 97) {
            ele = ["Email"];
        }
        return ___validate(ele);
    }

    function fnNextToShow(pos) {

        $("#txtDoctorNameValidatinMsg").hide();
        $("#FrequencyValidatinMsg").hide();

        $("#HomeNameValidatinMsg").hide();
        $("#HomeNumberValidatinMsg").hide();
        $("#OutNetworkNumberValidatinMsg").hide();
        $("#InNetworkNumberValidatinMsg").hide();
        $("#OutNetworkCoValidatinMsg").hide();

        if ($('#Eligible_for_HomeCare').is(':checked')) {
            $("#Home_Care").attr('checked', 'checked');
        }
        else if ($('#Not_Eligible').is(':checked')) {
            $("#Walk_In").attr('checked', 'checked');
        }
        $(".j_PatientName").val($("#Patient_FirstName").val() + " " + $("#Patient_LastName").val());
        $(".j_CountyName").val($('#Condition_County').val());        
        $(".j_PatientDOB").val($("#Patient_DOB").val());
        $(".P_SuitedDayTime").val($("#Condition_SuitedWeekDay option:selected").text());

        $(".P_ScheduleDateTime").val($("#ScheduledDateTime").val());
        if ($("#Condition_ProblemType option:selected").val() != "0") {

            $(".P_Problemtype").val($("#Condition_ProblemType option:selected").text());
        }       

        $("#dvid_subbutt").css("display", "none");

        if (pos == 3) {
            if ($("#Patient_FirstName").val() == "" || $("#Patient_LastName").val() == "") {
                $("#dvErrMsgPatientName").show();
                return pos;
            }
            else {
                $("#dvErrMsgPatientName").hide();
            }
        }

        if (pos == 4) {
            if ($('input:radio[name=rbPhone]:checked').val() == undefined) {
                $("#divErrorMSG").show();
                return pos = 4;

            }
            else {

                if ($("#txtMobNo").val() == "") {

                    $("#divErrorMSG").show();
                    $("#divErrorMSG").html("<span style='color:red;'>Please enter phone number</span>")
                    return 4;
                }
                else {
                    $("#span3").text("");
                    $("#divErrorMSG").hide();
                }
                if ($('input:radio[name=rbPhone]:checked').val() == '2') {
                    $("#Patient_Phone2").val($("#txtMobNo").val());
                    return 5;
                }
                else if ($('input:radio[name=rbPhone]:checked').val() == '3') {
                    $("#Patient_Phone3").val($("#txtMobNo").val());
                    return 5;
                }
                else {
                    $("#PatientUser_MobNo").val($("#txtMobNo").val());
                    return 5;
                }
            }
        }
        if (pos == 5) {
            if (($("#Patient_AddressLine1").val() == '') || ($("#Patient_City").val() == '') || ($("#Patient_State").val() == '') || ($("#Patient_ZipCode").val() == '')) {
                $("#divErrMsg_AD").show();
                return 5;
            }
            else {
                $("#divErrMsg_AD").hide();
            }
        }
        if (pos == 6) {
            var day1 = $("#date").val();
            var month1 = $("#month").val();
            var year1 = $("#Year").val();

            $('#month').focus();

            var pos = DOB_Validation();
            if (pos == 6) {
                return 6;
            }
            if (day1 != " " && month1 != " " && year1 != " ") {
                $("#Patient_DOB").val(month1 + '/' + day1 + '/' + year1);
                return 7;
            }

        }
        if (pos == 9) {
            var pos = ProblemDetail_Validation();
            if (pos == 9) {
                return 9;
            }
            else {
                return 10;
            }
        }

        if (pos == 10) {
            if ($("#Condition_ProblemStrength").val() == 0) {
                $("#spanA10").text('');
                $("#divErrMsg_A10").hide();
                $("#spanA10").text("Please select option");
                $("#divErrMsg_A10").show();
                return 10;
            }
            else
            {
                $("#spanA10").text('');
                $("#divErrMsg_A10").hide();
                return 11;
            }
        }
        if (pos == 12) {
            var chg1 = $('input:radio[name="Condition.IsUnderPhysician"]:checked').val();
            if (chg1 == undefined) {
                $("#IsUnderPhysician").show();
                return 12;
            }
            else {
                $("#IsUnderPhysician").hide();

            }



            if ($("input:radio[name='Condition.IsUnderPhysician']:checked").val() == "2") {
                return 15;
            }
        }

        if (pos == 65) {
            var chg1 = $('input:radio[name="Condition.IsUnderMedicalDoctor"]:checked').val();
            if (chg1 == undefined) {
                $("#IsUnderMedicalDoctor").show();
                return 65;
            }
            else {
                $("#IsUnderMedicalDoctor").hide();
            }
        }

        if (pos == 51) {
            var chg1 = $('input:radio[name="MedicareInsurances[0].IsAuthRequiredForTreatment"]:checked').val();
            if (chg1 == undefined) {
                $("#IsAuthRequiredForTreatment").show();
                return 51;
            }
            else {
                $("#IsAuthRequiredForTreatment").hide();
            }
        }

        if (pos == 57) {
            var chg1 = $('input:radio[name="Condition.Is_PhysicalTherephyBefore"]:checked').val();
            if (chg1 == undefined) {
                $("#Is_PhysicalTherephyBefore").show();
                return 57;
            }
            else {
                $("#Is_PhysicalTherephyBefore").hide();
            }
        }

        if (pos == 58) {
            var chg1 = $('input:radio[name="Condition.IsSeenByHomeHealthAgency"]:checked').val();
            if (chg1 == undefined) {
                $("#IsSeenByHomeHealthAgency").show();
                return 58;
            }
            else {
                $("#IsSeenByHomeHealthAgency").hide();
            }
        }

        if (pos == 13) {
            if ($("#txtDoctorName").val() == "") {
                $("#txtDoctorNameValidatinMsg").show();
                return 13;
            }
            else {
                return 14;
            }

        } 
        if (pos == 16) {
            $(".P_City").val($("#Patient_City").val());
        }
        if (pos == 31) {
            if ($("#Condition_FrequencyOfLeavingHome").val() == "") {
                $("#FrequencyValidatinMsg").show();
                return 31;
            }
            else {
                return 32;
            }

        }

        if (pos == 36) {
            if ($("#HomeCareInsurances_0__Name").val() == "") {
                $("#HomeNameValidatinMsg").show();
                return 36;
            }
            else {
                return 37;
            }

        }
        
        if (pos == 37) {
            if ($("#HomeCareInsurances_0__PolicyNumber").val() == "") {
                $("#HomeNumberValidatinMsg").show();
                return 37;
            }
            else {
                return 38;
            }

        }
        if (pos == 78) {
            if ($("#OutNetworkInsurances_0__PolicyNumber").val() == "") {
                $("#OutNetworkNumberValidatinMsg").show();
                return 78;
            }
            else {
                return 79;
            }

        }

        if (pos == 41) {
            if ($("#InNetworkInsurances_0__PolicyNumber").val() == "") {
                $("#InNetworkNumberValidatinMsg").show();
                return 41;
            }
            else {
                return 42;
            }

        }

        if (pos == 86) {
            if (($("#txtCoInsurance").val() == "") || ($("#txtCoPay").val() == "")) {
                    $("#OutNetworkCoValidatinMsg").show();
                    return 86;
            }
            else {
                $("#OutNetworkCoValidatinMsg").hide();
                return 87;
            }

        }
        if (pos == 89) {
            if (($("#OutNetworkInsurances_0__CoInsurance").val() == "") || ($("#OutNetworkInsurances_0__CoPay").val() == "")) {
                    $("#OutNetworkCoValidatinMsg").show();
                    return 89;
            }
            else {
                $("#OutNetworkCoValidatinMsg").hide();
                return 90;
            }

        }


        if (pos == 2) {
            if ($("input:radio[name='Condition.IsSeenHereBefore']:checked").val() == undefined) {
                $("#IsPatientFoundError").show();
                return 2;
            }
            else {
                $("#IsPatientFoundError").hide();
            }
        }

        
        if (pos == 26) {

            $(".P_County").val($("#Condition_County").val());
        }
        //Same Location for 2nd Choice Validation
        if (pos == 17) {

            if ($("#Condition_ConvenientLocation1").val() == $("#Condition_ConvenientLocation2").val()) {
                $("#SameLocationError").show();
                return 17;
            }
            else {
                $("#SameLocationError").hide();
            }
        }
        if (pos == 18) {
            var res = fn_SelectDay();
            if (res == 18) {
                return 18;
            } else {
                fn_SelectDay();
                return 19;
            }
        }
        if (pos == 19) {
            var chg = $('input:radio[id="Condition_SuitedDayTime"]:checked').val();
            if (chg == undefined) {
                $("#SuitedDayTime").show()
                return 19;
            }
            else {
                $("#SuitedDayTime").hide()
                return 20;
            }
        }
        if (pos == 20) {
            var chg1 = $('input:radio[id="Condition_CanWaitUpto"]:checked').val();
            if (chg1 == undefined) {
                $("#CanWaitUpto").show()
                return 20;
            }
            else {
                $("#CanWaitUpto").hide()
                return 21;
            }
        }

        if (pos == 22) {

            if ($("#ScheduledDateTime").val() == "") {
                $("#ScheduledDateTime_ErrorMsg").show()
                return 22;
            }
            else {
                $("#ScheduledDateTime_ErrorMsg").hide()

            }
        }
        if (pos == 91) {
            var email = IsJPaperworkViaEmai_Validation();
            if (email == 91) {
                return 91;
            }
            else {

                return 92;
            }
        }
        if (pos == 97) {
            var email = IsKPaperworkViaEmai_Validation();
            if (email == 97) {
                return 97;
            }
            else {

                return 98;
            }
        }
        if (pos == 44) {
            var HolderDOB1 = $(".HolderDOB1").val();
            if ($(".HolderDOB1").val() != "") {
                if ((Math.abs(new Date().getFullYear() - new Date(HolderDOB1).getFullYear())) < 10) {
                    $(".HolderDOB1").show();
                    alert("Patient's age should be 10 years or more!!");
                    $(".HolderDOB1").focus();
                    return pos;

                }
            }
        }
        if (pos == 47) {

            if ($("#MedicareInsurances_0__PolicyNumber").val() == "") {
                $("#div47_error").show();
                return pos;

            }
            else {
                $("#div47_error").hide();
            }
        }
        if (pos == 49) {

            if ($("#MedicareInsurances_0__HolderName").val() == "") {
                $("#div49_error").show();
                return pos;

            }
            else {
                $("#div49_error").hide();
            }
        }

        if (pos == 50) {
            var HolderDOB2 = $(".HolderDOB2").val();
            //alert(11);
            if ($(".HolderDOB2").val() != "") {
                //alert(12);
                if ((Math.abs(new Date().getFullYear() - new Date(HolderDOB2).getFullYear())) < 10) {
                    // alert(13);
                    $(".HolderDOB2").show();
                    alert("Patient's age should be 10 years or more!!");
                    $(".HolderDOB2").focus();
                    return pos;

                }
            }
        }


        if (pos == 51) {
            if ($("input:radio[name='MedicareInsurances[0].IsAuthRequiredForTreatment']:checked").val() == '1') {
                return 52;
            }
            else if ($("input:radio[name='MedicareInsurances[0].IsAuthRequiredForTreatment']:checked").val() == '2') {
                return 57;
            }
            else {
                return 51;
            }
        }

        //////////////////////////////////////////////////////////////////
        if (pos == 53) {

            if ($("#MedicareInsurances_1__PolicyNumber").val() == "") {
                $("#div53_error").show();
                return pos;

            }
            else {
                $("#div53_error").hide();
            }
        }
        if (pos == 55) {

            if ($("#MedicareInsurances_1__HolderName").val() == "") {
                $("#div55_error").show();
                return pos;

            }
            else {
                $("#div55_error").hide();
            }
        }




        if (pos == 56) {

            var HolderDOB3 = $(".HolderDOB3").val();
            if ($(".HolderDOB3").val() != "") {

                if ((Math.abs(new Date().getFullYear() - new Date(HolderDOB3).getFullYear())) < 10) {
                    $(".HolderDOB3").show();
                    alert("Patient's age should be 10 years or more!!");
                    $(".HolderDOB3").focus();
                    return;

                }
            }
        }
        if (pos == 81) {
            var HolderDOB4 = $(".HolderDOB4").val();
            if ($(".HolderDOB4").val() != "") {
                if ((Math.abs(new Date().getFullYear() - new Date(HolderDOB4).getFullYear())) < 10) {
                    $(".HolderDOB4").show();
                    alert("Patient's age should be 10 years or more!!");
                    $(".HolderDOB4").focus();
                    return;

                }
            }
        }
        //////////////PROB///////////////////
        if (pos == 15) {
            __last = 101;
            if (parseInt($("#Condition_PaymentType option:selected").val().trim()) == 2) {
                $("input:radio[name='Condition.SeekingCareType'][value=1]").show().parent().show();
                $('#ddlPayOptValidatinMsg').hide();
            }
            else if (parseInt($("#Condition_PaymentType option:selected").val().trim()) == 5) {
                $("input:radio[name='Condition.SeekingCareType'][value=1]").show().parent().show();
                $('#ddlPayOptValidatinMsg').hide();
            }
            else if (parseInt($("#Condition_PaymentType option:selected").val().trim()) == 0) {
                $('#ddlPayOptValidatinMsg').show();
                return 15;
            }
            else
            {
                $("input:radio[name='Condition.SeekingCareType'][value=1]").hide().parent().hide();
                $('#ddlPayOptValidatinMsg').hide();
            }
        }

        if (pos == 25) {
            $("#PatientUser_Email2").val('');
            $("#PatientUser_Email1").val('');
        }

        if (pos == 25) {            
            __last = 101;
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == undefined) {
                $("#IsTransportFoundError").show();
                return 25;
            }
            else {
                $("#IsTransportFoundError").hide();
                
                if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2) {
                    if ($("#Condition_PaymentType option:selected").val() == 1) {
                        return 87;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 2 || $("#Condition_PaymentType option:selected").val() == 5) {

                        return 46;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 3 || $("#Condition_PaymentType option:selected").val() == 4) {

                        return 40;
                    }


                    else if ($("#Condition_PaymentType option:selected").val() == 6) {

                        return 61;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 7) {

                        return 65;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 8) {

                        return 72;

                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 9) {

                        return 75;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 10) {

                        return 77;
                    }
                    else {
                        return pos;
                    }
                }
                else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                    return 26;
                else
                    return pos;
            }            
        }

        ////////////////////////////////////////////////////////////////

        if (pos == 16) {
            var chg2 = $('input:radio[name="Condition.SeekingCareType"]:checked').val();
            if (chg2 == undefined) {
                $("#SeekingCareType_ErrMsg").show();
                return 16;
            }
            else {
                $("#SeekingCareType_ErrMsg").hide();

            }
        }

        if (pos == 58) {
            if ($("input:radio[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == 2) {
                if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                    return 90;
                else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                    return 96;
                else
                    return pos;
            }
            else if ($("input:radio[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == 1)
                return 59;
            else
                return pos;
        }

        if (pos == 45)
        {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }
        else if (pos == 60) {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }
        else if (pos == 64) {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }
        else if (pos == 71) {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }
        else if (pos == 74) {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }
        else if (pos == 76) {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }
        else if (pos == 89) {
            if ($("input:radio[name='Condition.IsTransport']:checked").val() == 2)
                return 90;
            else if ($("input:radio[name='Condition.IsTransport']:checked").val() == 1)
                return 96;
            else
                return pos;
        }



        if (pos == 16) {

            if ($("input:radio[name='Condition.SeekingCareType']:checked").val() == "1") {
                return 28;
            }
        }
            if (pos == 27) {
                
                    if ($("#Condition_PaymentType option:selected").val() == 1) {
                        return 87;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 2 || $("#Condition_PaymentType option:selected").val() == 5) {

                        return 46;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 3 || $("#Condition_PaymentType option:selected").val() == 4) {

                        return 40;
                    }


                    else if ($("#Condition_PaymentType option:selected").val() == 6) {

                        return 61;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 7) {

                        return 65;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 8) {

                        return 72;

                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 9) {

                        return 75;
                    }
                    else if ($("#Condition_PaymentType option:selected").val() == 10) {

                        return 77;
                    }
                    else {
                        return pos;
                    }
            }

            if (pos == 29) {
                var chg2 = $('input:radio[name="Condition.IsDifficultToLeaveHome"]:checked').val();
                if (chg2 == undefined) {
                    $("#IsDifficultToLeaveHome").show();
                    return pos;
                }
                else {
                    $("#IsDifficultToLeaveHome").hide();
                    return 30;
                }
            }

            if (pos == 30) {
                var chg2 = $('input:radio[name="Condition.WalkerType"]:checked').val();
                if (chg2 == undefined) {
                    $("#WalkerType").show();
                    return pos;
                }
                else {
                    $("#WalkerType").hide();
                    return 31;
                }
            }

            if (pos == 32) {
                var chg2 = $('input:radio[name="Condition.IsDriveByOwn"]:checked').val();
                if (chg2 == undefined) {
                    $("#IsDriveByOwn").show();
                    return pos;
                }
                else {
                    $("#IsDriveByOwn").hide();
                    return 33;
                }
            }

            if (pos == 33) {
                var chg2 = $('input:radio[name="Condition.NeedHelpOfOtherPerson"]:checked').val();
                if (chg2 == undefined) {
                    $("#NeedHelpOfOtherPerson").show();
                    return pos;
                }
                else {
                    $("#NeedHelpOfOtherPerson").hide();
                    return 34;
                }
            }

            if (pos == 83) {
                var chg2 = $('input:radio[name="OutNetworkInsurances[0].Deductible"]:checked').val();
                if (chg2 == undefined) {
                    $("#IsDeductible").show();
                    return pos;
                }
                else {
                    $("#IsDeductible").hide();
                    return 84;
                }
            }
        
        if (pos == 34) {
            if ($("input:radio[name='Condition.IsEligible']:checked").val() == "1") {
                $("#IsEligible").hide();
                return 35;
            }
            else if ($("input:radio[name='Condition.IsEligible']:checked").val() == "2") {
                $("#IsEligible").hide();
                return 16;
            }
            else {
                $("#IsEligible").show();
                return pos;
            }

        }
        else if (pos == 35) {
            if ($("input:radio[name='Condition.IsInsuranceDone']:checked").val() == "1") {
                $("#IsInsuranceDone").hide();
                return 36;
            }
            else if ($("input:radio[name='Condition.IsInsuranceDone']:checked").val() == "2") {
                $("#IsInsuranceDone").hide();
                if ($("#Condition_Contact_Type option:selected").val() == 0) {
                    var closable = alertify.alert().setting('closable');
                    alertify.alert().setHeader('AdvancePT Says')
          .setting({
              'label': 'OK',
              'message': 'Please select the contact method!!!'
          }).show();
                    $("#Condition_Contact_Type").focus();
                    return pos;
                }
                __last = 39;
                $("#dvid_subbutt").css("display", "block");
                return 39;
            }
            else {
                $("#IsInsuranceDone").show();
                return pos;
            }

        }
        else if (pos == 38) {
            if ($("#Condition_Contact_Type option:selected").val() == 0) {
                var closable = alertify.alert().setting('closable');
                alertify.alert().setHeader('AdvancePT Says')
      .setting({
          'label': 'OK',
          'message': 'Please select the contact method!!!'
      }).show();
                $("#Condition_Contact_Type").focus();
                return pos;
            }
                __last = 39;
                $("#dvid_subbutt").css("display", "block");
                return 39;
        }
        else if (pos == 100) {
            if ($("#Condition_Contact_Type option:selected").val() == 0) {
                var closable = alertify.alert().setting('closable');
                alertify.alert().setHeader('AdvancePT Says')
      .setting({
          'label': 'OK',
          'message': 'Please select the contact method!!!'
      }).show();
                $("#Condition_Contact_Type").focus();
                return pos;
            }
            $("#dvid_subbutt").css("display", "block");
        }
        else if (pos == 94) {
            if ($("#Condition_Contact_Type option:selected").val() == 0) {
                var closable = alertify.alert().setting('closable');
                alertify.alert().setHeader('AdvancePT Says')
      .setting({
          'label': 'OK',
          'message': 'Please select the contact method!!!'
      }).show();
                $("#Condition_Contact_Type").focus();
                return pos;
            }
            __last = 95;
            $("#dvid_subbutt").css("display", "block");
        }

        return pos + 1;
    }

    @*PARIKSHIT_END_22122017*@
    function fnTriggerAtEnd() {
        if ($("#dvid_" + __last).is(':visible')) $('#dvid_subbutt').show();
        else $('#dvid_subbutt').hide();
    }

</script>
<script>
    // $('#selectMethod').addClass('form-control');
    $('#ConvenientLocation1').addClass('applitextfield1');
    $('#ConvenientLocation2').addClass('applitextfield1');
    $('#Condition_DoctorID').addClass('applitextfield1');
    $('#tblMPatSchdAppointmentType_AppointmentType_Id').addClass('applitextfield1');
    $('#State').addClass('form-control');

</script>
<script>
    $("#btnDoctorSave").click(function () {
        var objClass = {
            "First_Name": $("#First_Name").val().trim(),
            "Last_Name": $("#Last_Name").val().trim(),
            "DoctorType": $("#DoctorType").val(),
            "NPI_No": $("#NPI_No").val().trim(),
            "Phone1": $("#Phone1").val().trim(),
            "Phone2": $("#Phone2").val().trim(),
            "Fax": $("#Fax").val().trim(),
            "City": $("#DoctorCity").val().trim(),
            "State": $("#State").val().trim(),
            "ZipCode": $("#DoctorZipCode").val().trim()

        };

        $.ajax({
            url: '@Url.Action("CreateDoctor", "PatientActivation")',
            type: 'POST',
            data: JSON.stringify(objClass),
            cache: 'false',
            contentType: 'application/json',
            dataType: "json",
            success: function (result) {

                // alert(result.Message);
                //alert(result.DoctorID);
                $("#txtDoctorName").val(result.DoctorName);
                $("#Condition_DoctorID").val(result.DoctorID);
                $("#First_Name").val("");
                $("#Last_Name").val("");
                $("#DoctorType").val("");
                $("#NPI_No").val("");
                $("#Phone1").val("");
                $("#Phone2").val("");
                $("#Fax").val("");
                $("#DoctorCity").val("");
                $("#State").val("");
                $("#DoctorZipCode").val("");
                //$("#txtDoctorNameValidatinMsg").hide();
            },
            error: function () {

                return false;
            }
        });
    });


</script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".divSearchPatientButton").hide();
        $('#loadforscheduleapp').hide();
        $("#SuitedDayTime").hide();
        $("#CanWaitUpto").hide();
        $("#IsUnderMedicalDoctor").hide();
        $("#IsAuthRequiredForTreatment").hide();
        $("#Is_PhysicalTherephyBefore").hide();
        $("#IsSeenByHomeHealthAgency").hide();
        $("#IsUnderPhysician").hide();
        $("#SeekingCareType_ErrMsg").hide();
        $("#ScheduledDateTime_ErrorMsg").hide();
        $("#IsPatientFoundError").hide();
        $("#IsTransportFoundError").hide();
        ////
        $("#IsDifficultToLeaveHome").hide();
        $("#WalkerType").hide();
        $("#IsDriveByOwn").hide();
        $("#NeedHelpOfOtherPerson").hide();
        $("#IsEligible").hide();
        $("#IsInsuranceDone").hide();
        $("#IsDeductible").hide();
        ////
        $("#div47_error").hide();
        $("#div49_error").hide();
        $("#div50_error").hide();
        $("#div51_error").hide();
        $("#div54_error").hide();
        $("#div55_error").hide();
        $("#div56_error").hide();
        $("#div57_error").hide();
        @*PARIKSHIT_START_22122017*@
        $("#divid_d1").hide();
        $("#divid_d2").hide();
        $("#divid_d3").hide();
        $("#divid_d4").hide();
        $("#divid_d5").hide();
        $("#divid_d6").hide();
        $("#divid_d7").hide();
        $("#divid_d8").hide();
        $("#divid_d9").hide();
        $("#divid_d10").hide();
        $("#divid_d11").hide();
        $("#divid_d12").hide();
        $("#divid_d13").hide();
        $("#divid_d14").hide();
        $("#divid_d15").hide();
        $("#divid_d16").hide();
        $("#divid_d17").hide();
        $("#divid_d18").hide();
        $("#divid_d19").hide();
        $('#txtTCounty').hide();
        $('#ddlPayOptValidatinMsg').hide();
        
        $.ajax({
            type: 'POST',
            url: "@Url.Action("PopulateTempData", "PatientActivation")",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            success: function (data) {
                if (data.success == 1) {
                    $("#Patient_FirstName").val(data.Patient_FirstName);
                    $("#Patient_LastName").val(data.Patient_LastName);
                    $("#txtMobNo").val(data.txtMobNo);
                    $("#Patient_AddressLine1").val(data.Patient_AddressLine1);
                    $("#Patient_AddressLine2").val(data.Patient_AddressLine2);
                    $("#Patient_City").val(data.Patient_City);
                    $("#Patient_State").val(data.Patient_State);
                    $("#Patient_ZipCode").val(data.Patient_ZipCode);
                    $("#month").val(data.month);
                    $("#date").val(data.date);
                    $("#Year").val(data.Year);
                    $("#Patient_ReferralSource").val(data.Patient_ReferralSource);
                    $("#Condition_ProblemType").val(data.Condition_ProblemType);
                    $("#Condition_ProblemDetail").val(data.Condition_ProblemDetail);
                    $("#txtDoctorName").val(data.txtDoctorName);
                    $("#Condition_DoctorPhone").val(data.Condition_DoctorPhone);
                    $("#Condition_FromWhenProblemExist").val(data.Condition_FromWhenProblemExist);
                    $("#Condition_ProblemStrength").val(data.Condition_ProblemStrength);
                    $("#Condition_ConvenientLocation1").val(data.Condition_ConvenientLocation1);
                    $("#Condition_ConvenientLocation2").val(data.Condition_ConvenientLocation2);
                    $("#txtPatientName").val(data.txtPatientName);
                    $("#tblMPatSchdAppointmentType_AppointmentType_Id").val(data.tblMPatSchdAppointmentType_AppointmentType_Id);
                    $("#Condition_ScheduledDateTime").val(data.Condition_ScheduledDateTime);
                    $("#Condition_FrequencyOfLeavingHome").val(data.Condition_FrequencyOfLeavingHome);
                    $("#HomeCareInsurances_0__Name").val(data.HomeCareInsurances_0__Name);
                    $("#HomeCareInsurances_0__PolicyNumber").val(data.HomeCareInsurances_0__PolicyNumber);
                    $("#HomeCareInsurances_0__GroupNumber").val(data.HomeCareInsurances_0__GroupNumber);
                    $("#Condition_PaymentType").val(data.Condition_PaymentType);
                    $("#InNetworkInsurances_0__PolicyNumber").val(data.InNetworkInsurances_0__PolicyNumber);
                    $("#InNetworkInsurances_0__GroupNumber").val(data.InNetworkInsurances_0__GroupNumber);
                    $("#InNetworkInsurances_0__HolderName").val(data.InNetworkInsurances_0__HolderName);
                    $("#InNetworkInsurances_0__HolderDOB").val(data.InNetworkInsurances_0__HolderDOB);
                    $("#InNetworkInsurances_0__ServiceProviderPhone").val(data.InNetworkInsurances_0__ServiceProviderPhone);
                    $("#MedicareInsurances_0__PolicyNumber").val(data.MedicareInsurances_0__PolicyNumber);
                    $("#MedicareInsurances_0__GroupNumber").val(data.MedicareInsurances_0__GroupNumber);
                    $("#MedicareInsurances_0__HolderName").val(data.MedicareInsurances_0__HolderName);
                    $("#MedicareInsurances_0__HolderDOB").val(data.MedicareInsurances_0__HolderDOB);
                    $("#MedicareInsurances_1__Name").val(data.MedicareInsurances_1__Name);
                    $("#MedicareInsurances_1__PolicyNumber").val(data.MedicareInsurances_1__PolicyNumber);
                    $("#MedicareInsurances_1__GroupNumber").val(data.MedicareInsurances_1__GroupNumber);
                    $("#MedicareInsurances_1__HolderName").val(data.MedicareInsurances_1__HolderName);
                    $("#MedicareInsurances_1__HolderDOB").val(data.MedicareInsurances_1__HolderDOB);
                    $("#Patient_Employer_Name").val(data.Patient_Employer_Name);
                    $("#Patient_Employer_Phone").val(data.Patient_Employer_Phone);
                    $("#Condition_Insurance_Adjustor_Name").val(data.Condition_Insurance_Adjustor_Name);
                    $("#Condition_Insurance_Adjustor_Phone").val(data.Condition_Insurance_Adjustor_Phone);
                    $("#Condition_WhoseFaultAccident").val(data.Condition_WhoseFaultAccident);
                    $("#Condition_NameOfAutoInsurance").val(data.Condition_NameOfAutoInsurance);
                    $("#Condition_AutoInsurancePhone").val(data.Condition_AutoInsurancePhone);
                    $("#Condition_AutoInsuranceClaimNo").val(data.Condition_AutoInsuranceClaimNo);
                    $("#Condition_Attorney_Name").val(data.Condition_Attorney_Name);
                    $("#Condition_Date_Of_Accident").val(data.Condition_Date_Of_Accident);
                    $("#Condition_StoreContactPerson").val(data.Condition_StoreContactPerson);
                    $("#OutNetworkInsurances_0__PolicyNumber").val(data.OutNetworkInsurances_0__PolicyNumber);
                    $("#OutNetworkInsurances_0__GroupNumber").val(data.OutNetworkInsurances_0__GroupNumber);
                    $("#OutNetworkInsurances_0__HolderName").val(data.OutNetworkInsurances_0__HolderName);
                    $("#OutNetworkInsurances_0__HolderDOB").val(data.OutNetworkInsurances_0__HolderDOB);
                    $("#OutNetworkInsurances_0__ServiceProviderPhone").val(data.OutNetworkInsurances_0__ServiceProviderPhone);
                    $("#OutNetworkInsurances_0__CoInsurance").val(data.OutNetworkInsurances_0__CoInsurance);
                    $("#OutNetworkInsurances_0__CoPay").val(data.OutNetworkInsurances_0__CoPay);
                    $("#PatientUser_Email1").val(data.PatientUser_Email);
                    $("#PatientUser_Email2").val(data.PatientUser_Email);
                    $("#hdnDivID").val(data.DivID);

                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////

                    if (data.rbPhone == "2") {
                        $("input[name='rbPhone'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.rbPhone == "3") {
                        $("input[name='rbPhone'][value=3]").attr('checked', 'checked');
                    }
                    else if (data.rbPhone == "1") {
                        $("input[name='rbPhone'][value=1]").attr('checked', 'checked');
                    }

                    if (data.OutNetworkInsurances_0__Deductible == "1") {
                        $("input[name='OutNetworkInsurances_0__Deductible'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.OutNetworkInsurances_0__Deductible == "0") {
                        $("input[name='OutNetworkInsurances_0__Deductible'][value=0]").attr('checked', 'checked');
                    }
                    else if (data.OutNetworkInsurances_0__Deductible == "2") {
                        $("input[name='OutNetworkInsurances_0__Deductible'][value=2]").attr('checked', 'checked');
                    }

                    if (data.SeekingCareType == "2") {
                        $("#Home_Care").removeAttr('checked');
                        $("#Walk_In").attr('checked', 'checked');
                    }
                    else if (data.SeekingCareType == "1") {
                        $("#Walk_In").removeAttr('checked');
                        $("#Home_Care").attr('checked', 'checked');
                    }
                    if (data.IsEligibile == "2") {
                        $("input[name='Condition.IsEligible'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.IsEligibile == "1") {
                        $("input[name='Condition.IsEligible'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_IsPaperworkViaEmail == "2") {
                        $("input[name='Condition.IsPaperworkViaEmail'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsPaperworkViaEmail == "1") {
                        $("input[name='Condition.IsPaperworkViaEmail'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_IsSeenByHomeHealthAgency == "2") {
                        $("input[name='Condition.IsSeenByHomeHealthAgency'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsSeenByHomeHealthAgency == "1") {
                        $("input[name='Condition.IsSeenByHomeHealthAgency'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_Is_PhysicalTherephyBefore == "2") {
                        $("input[name='Condition.Is_PhysicalTherephyBefore'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_Is_PhysicalTherephyBefore == "1") {
                        $("input[name='Condition.Is_PhysicalTherephyBefore'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_IsInsuranceDone == "2") {
                        $("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsInsuranceDone == "1") {
                        $("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment'][value=1]").attr('checked', 'checked');
                    }
                    if (data.MedicareInsurances_0__IsAuthRequiredForTreatment == "2") {
                        $("input[name='Condition.IsInsuranceDone'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.MedicareInsurances_0__IsAuthRequiredForTreatment == "1") {
                        $("input[name='Condition.IsInsuranceDone'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_IsUnderPhysician == "2") {
                        $("input[name='Condition.IsUnderPhysician'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsUnderPhysician == "1") {
                        $("input[name='Condition.IsUnderPhysician'][value=1]").attr('checked', 'checked');
                    }

                    if (data.Condition_IsSeenHereBefore == "2") {
                        $("input[name='Condition.IsSeenHereBefore'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsSeenHereBefore == "1") {
                        $("input[name='Condition.IsSeenHereBefore'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_IsDifficultToLeaveHome == "1") {
                        $("input[name='Condition.IsDifficultToLeaveHome'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsDifficultToLeaveHome == "2") {
                        $("input[name='Condition.IsDifficultToLeaveHome'][value=2]").attr('checked', 'checked');
                    }
                    if (data.Condition_IsDriveByOwn == "1") {
                        $("input[name='Condition.IsDriveByOwn'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.Condition_IsDriveByOwn == "0") {
                        $("input[name='Condition.IsDriveByOwn'][value=0]").attr('checked', 'checked');
                    }
                    if (data.Condition_NeedHelpOfOtherPerson == "1") {
                        $("input[name='Condition.NeedHelpOfOtherPerson'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.Condition_NeedHelpOfOtherPerson == "3") {
                        $("input[name='Condition.NeedHelpOfOtherPerson'][value=3]").attr('checked', 'checked');
                    }
                    else if (data.Condition_NeedHelpOfOtherPerson == "2") {
                        $("input[name='Condition.NeedHelpOfOtherPerson'][value=2]").attr('checked', 'checked');
                    }
                    if (data.Condition_SuitedWeekDay == "2") {
                        $("input[name='Condition.SuitedWeekDay'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedWeekDay == "3") {
                        $("input[name='Condition.SuitedWeekDay'][value=3]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedWeekDay == "4") {
                        $("input[name='Condition.SuitedWeekDay'][value=4]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedWeekDay == "5") {
                        $("input[name='Condition.SuitedWeekDay'][value=5]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedWeekDay == "6") {
                        $("input[name='Condition.SuitedWeekDay'][value=6]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedWeekDay == "1") {
                        $("input[name='Condition.SuitedWeekDay'][value=1]").attr('checked', 'checked');
                    }
                    if (data.Condition_SuitedDayTime == "1") {
                        $("input[name='Condition.SuitedDayTime'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedDayTime == "2") {
                        $("input[name='Condition.SuitedDayTime'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_SuitedDayTime == "0") {
                        $("input[name='Condition.SuitedDayTime'][value=0]").attr('checked', 'checked');
                    }
                    if (data.Condition_CanWaitUpto == "1") {
                        $("input[name='Condition.CanWaitUpto'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.Condition_CanWaitUpto == "0") {
                        $("input[name='Condition.CanWaitUpto'][value=0]").attr('checked', 'checked');
                    }
                    else
                    {
                        $("input[name='Condition.CanWaitUpto'][value=1]").attr('checked', false);
                        $("input[name='Condition.CanWaitUpto'][value=0]").attr('checked', false);
                    }
                    if (data.Condition_WalkerType == "1") {
                        $("input[name='Condition.WalkerType'][value=1]").attr('checked', 'checked');
                    }
                    else if (data.Condition_WalkerType == "2") {
                        $("input[name='Condition.WalkerType'][value=2]").attr('checked', 'checked');
                    }
                    else if (data.Condition_WalkerType == "3") {
                        $("input[name='Condition.WalkerType'][value=3]").attr('checked', 'checked');
                    }
                    else if (data.Condition_WalkerType == "0") {
                        $("input[name='Condition.WalkerType'][value=0]").attr('checked', 'checked');
                    }

                    ///////////////////////////////////////////
                    var cnt = parseInt($('#hdnDivID').val());
                    ///////////////////////////////////////////
                    if (fnValidate(__curpos)) {
                        __fnHideAll();
                        var nextdivtoshow = cnt;
                        $("#dvid_" + (nextdivtoshow)).show();
                        if (__curpos != nextdivtoshow) {
                            for (var i = 2; i <= nextdivtoshow; i++) {
                                __navigated.push(i);
                            }
                        }
                        __curpos = nextdivtoshow;
                        __fnShowHideNextPrev();
                    }


                }
                else {
                    //alert(data.message);
                }

            }
        });
        @*PARIKSHIT_END_22122017*@
    });
    $('input:radio[name="Condition.SuitedDayTime"]').change(function () {
        $("#SuitedDayTime").hide();
    });
    $('input:radio[name="Condition.CanWaitUpto"]').change(function () {
        $("#CanWaitUpto").hide();
    });
    $('input:radio[name="Condition.SeekingCareType"]').change(function () {
        $("#SeekingCareType_ErrMsg").hide();
    });
    $('input:radio[name="Condition.IsUnderPhysician"]').change(function () {
        $("#IsUnderPhysician").hide();
    });

    $('input:radio[name="Condition.IsUnderMedicalDoctor"]').change(function () {
        $("#IsUnderMedicalDoctor").hide();
    });

    $('input:radio[name="Condition.IsAuthRequiredForTreatment"]').change(function () {
        $("#IsAuthRequiredForTreatment").hide();
    });

    $('input:radio[name="Condition.Is_PhysicalTherephyBefore"]').change(function () {
        $("#Is_PhysicalTherephyBefore").hide();
    });

    $('input:radio[name="Condition.IsSeenByHomeHealthAgency"]').change(function () {
        $("#IsSeenByHomeHealthAgency").hide();
    });


    $('input:radio[name="Condition.IsSeenHereBefore"]').change(function () {
        if ($(this).val() == 1) {
            //alert($(this).val());
            $(".divSearchPatientButton").show();
        }
        else if ($(this).val() == 2) {
            //alert($(this).val());
            $(".divSearchPatientButton").hide();
        }
    });

    $("#Patient_ReferralSource").change(function () {
        $("#divid_d1").hide();
        $("#divid_d2").hide();
        $("#divid_d3").hide();
        $("#divid_d4").hide();
        $("#divid_d5").hide();
        $("#divid_d6").hide();
        $("#divid_d7").hide();
        $("#divid_d8").hide();
        $("#divid_d9").hide();
        $("#divid_d10").hide();
        $("#divid_d11").hide();
        $("#divid_d12").hide();
        $("#divid_d13").hide();
        $("#divid_d14").hide();
        $("#divid_d15").hide();
        $("#divid_d16").hide();
        $("#divid_d17").hide();
        $("#divid_d18").hide();
        $("#divid_d19").hide();

        if ($(this).val() == 1026) {
            $("#divid_d1").show();
        }
        else if ($(this).val() == 1019) {
            $("#divid_d2").show();
        }
        else if ($(this).val() == 1030) {
            $("#divid_d3").show();
        }
        else if ($(this).val() == 1037) {
            $("#divid_d4").show();
            $("#divid_d5").show();
        }
        else if ($(this).val() == 1028) {
            $("#divid_d6").show();
            $("#divid_d7").show();
        }
        else if ($(this).val() == 1032) {
            $("#divid_d8").show();
        }
        else if ($(this).val() == 1031) {
            $("#divid_d9").show();
            $("#divid_d10").show();
            $("#divid_d11").show();
        }
        else if ($(this).val() == 1036) {
            $("#divid_d12").show();
            $("#divid_d13").show();
        }
        else if ($(this).val() == 1029) {
            $("#divid_d14").show();
            $("#divid_d15").show();
        }
        else if ($(this).val() == 1027) {
            $("#divid_d16").show();
            $("#divid_d17").show();
        }
        else if ($(this).val() == 1024) {
            $("#divid_d18").show();
            $("#divid_d19").show();
        }
    });

    function fnShowPatientSearch() {
        $('#_SearchPatient').modal();
        $("#tblPatientList tbody").html('');
        $('#txtPatientFullName').val("");
        //$('#txtPatientFirstName').val("");
        //$('#txtPatientLastName').val("");
        //$('#txtPatientPhone').val("");
        //$('#txtPatientCity').val("");
        //$('#txtPatientState').val("");
        //$('#txtPatientZipCode').val("");
        ////------------------------------------
        //$('#txtPatientFirstName').val($("#Patient_FirstName").val());
        //$('#txtPatientLastName').val($("#Patient_LastName").val());
        //$('#txtPatientPhone').val($("#txtMobNo").val());
        //$('#txtPatientCity').val($("#Patient_City").val());
        //$('#txtPatientState').val($("#Patient_State option:selected").text());
        //$('#txtPatientZipCode').val($("#Patient_ZipCode").val());
        ////---------------------------------------------------------------------------
        ////make textboxes readonly
        //$('#txtPatientFirstName').attr('readonly', 'readonly');
        //$('#txtPatientLastName').attr('readonly', 'readonly');
        //$('#txtPatientPhone').attr('readonly', 'readonly');
        //$('#txtPatientCity').attr('readonly', 'readonly');
        //$('#txtPatientState').attr('readonly', 'readonly');
        //$('#txtPatientZipCode').attr('readonly', 'readonly');
    }

    //For Patient
    function fnSelectPatientRow(obj) {
        $("#tblPatientList tbody tr").removeClass('selectedRow');
        $(obj).addClass('selectedRow');
        $('#_SearchPatient').modal('hide');
        $("#txtPatientName").val($($(obj).find('td')[0]).html() + " " + $($(obj).find('td')[1]).html());
        $("#Condition_PatientId").val($($(obj).find('input')[0]).val());
        $("#PatientUser_Email1").val($($(obj).find('input')[1]).val());
        $("#PatientUser_Email2").val($($(obj).find('input')[1]).val());
        $("#IsPatientFoundError").hide();
    }
</script>
@*for schedule Calendar*@
@*<script>

        function fnRenderEvent(start, end) {
            //alert(11);
            $('#loading').show();
            $.ajax({
                url: '@Url.Action("GetEventsTest", new { controller = "Calendar", area = "PatientSchedule" })' + "?start=" + start + "&end=" + end,
                type: 'GET',
                datatype: 'json',
                data: {
                },
                success: function (result) {
                    $('#loading').hide();
                    $('#calendar').fullCalendar('removeEvents');
                    $(result).each(function () {
                        delete_null_properties(this, true);
                        $('#calendar').fullCalendar('renderEvent', this);
                    })

                },
                error: function (e) {

                }
            });
        }
        function delete_null_properties(test, recurse) {
            debugger;
            for (var i in test) {
                if (test[i] === null) {
                    delete test[i];
                } else if (recurse && typeof test[i] === 'object') {
                    delete_null_properties(test[i], recurse);
                }
                if (test[i] && Object.keys(test[i]).length === 0) {
                    delete test[i]
                }
            }
        }
    </script>*@
<script type="text/javascript">
    $("input:radio[name=rbPhone]").click(function () {
        $("#divErrorMSG").html(' ');
    });
    function movecursor(field, nextField) {
        //alert("ok");
        if (field.value.length >= field.maxLength) {
            document.getElementById(nextField).focus();

        }

    }
    //For (A5)
    function fn_Month_Validation() {
        $("#spanA5").text('');
        $("#divErrMsg_A5").hide();

        //For Month
        if ($("#month").val() != "") {
            if ($("#month").val() >= 1 && $("#month").val() <= 12) {
                for (var i = 1; i <= 9; i++) {
                    if ($("#month").val() == i) {
                        $("#month").val("0" + i);
                    }
                }
                $("#spanA5").text('');
                $("#divErrMsg_A5").hide();
                $("#date").focus();
            }
            else {
                $("#spanA5").text('Month should be within 1 and 12');
                $("#divErrMsg_A5").show();
                $("#month").val(' ');
                $("#month").focus();
            }
        }
    }


    function fn_Date_Validation() {
        //For Date
        $("#spanA5").text('');
        $("#divErrMsg_A5").hide();

        if ($("#date") != "") {
            if ($("#date").val() >= 1 && $("#date").val() <= 31) {
                for (var i = 1; i <= 9; i++) {
                    if ($("#date").val() == i) {
                        $("#date").val("0" + i);
                    }
                }
                $("#spanA5").text('');
                $("#divErrMsg_A5").hide();
                $("#Year").focus();
            } else {
                $("#spanA5").text('Date should be within 1 and 31');
                $("#divErrMsg_A5").show();
                $("#date").val(' ');
                $("#date").focus();
            }
        }
    }

    function fn_Year_Validation() {
        //For Year
        $("#spanA5").text('');
        $("#divErrMsg_A5").hide();

        if ($("#Year") != null) {
            if ($("#Year").val() >= 1900 && $("#Year").val() <= 1990) {
                $("#spanA5").text('');
                $("#divErrMsg_A5").hide();
            } else {
                $("#spanA5").text('Year should be within 1900 and 1990'); //Year always 1900 - 1990
                $("#divErrMsg_A5").show();
                $("#Year").val(' ');
                $("#Year").focus();
            }
        }
    }

    function DOB_Validation() {
        var pos = "";
        if ($("#month").val() == "" || $("#date").val() == "" || $("#Year").val() == "") {
            $("#spanA5").text('');
            $("#divErrMsg_A5").hide();
            $("#spanA5").text("Please enter date of birth");
            $("#divErrMsg_A5").show();
            pos = 6;
        }
        else {
            $("#spanA5").text('');
            $("#divErrMsg_A5").hide();

            if ($("#Year").val() >= 1900 && $("#Year").val() <= 1990) {
                $("#spanA5").text('');
                $("#divErrMsg_A5").hide();
            } else {
                $("#spanA5").text('Year should be within 1900 and 1990'); //Year always 1900 - 1990
                $("#divErrMsg_A5").show();
                $("#Year").val(' ');
                $("#Year").focus();
                pos = 6;
            }
        }
        return pos;
    }
    function ProblemDetail_Validation() {
        var pos = "";
        if ($("#Condition_ProblemType").val() == 0) {
            $("#spanA8").text('');
            $("#divErrMsg_A8").hide();
            $("#spanA8").text("Please select option");
            $("#divErrMsg_A8").show();
            pos = 9;
        }

        if ($("#Condition_FromWhenProblemExist").val() == '') {
            $("#spanA8").text('');
            $("#divErrMsg_A8").hide();
            $("#spanA8").text("Please select date");
            $("#divErrMsg_A8").show();
            pos = 9;
        }

        return pos;
    }

    $("#Condition_ProblemDetail").click(function () {
        $("#spanA8").html("");
        $("#divErrMsg_A8").hide();
    });


    $("#month").click(function () {
        $("#spanA5").html("");
    });

    function IsJPaperworkViaEmai_Validation() {
        var pos = "";
        if ($("#PatientUser_Email1").val() == "") {
            $("#spanJ2").text('');
            $("#divErrMsg_J2").hide();
            $("#spanJ2").text("Please enter email");
            $("#divErrMsg_J2").show();
            pos = 91;
        }

        return pos;
    }
    function IsKPaperworkViaEmai_Validation() {
        var pos = "";
        if ($("#PatientUser_Email2").val() == "") {
            $("#spanK2").text('');
            $("#divErrMsg_K2").hide();
            $("#spanK2").text("Please enter email");
            $("#divErrMsg_K2").show();
            pos = 97;
        }
        $("#PatientUser_Email1").val($("#PatientUser_Email2").val());
        return pos;
    }

    $("#PatientUser_Email2").click(function () {
        $("#spanJ2").html("");
        $("#spanK2").html('');
        $("#divErrMsg_J2").hide();
        $("#divErrMsg_K2").hide();
    });

    $("#PatientUser_Email1").click(function () {
        $("#spanJ2").html("");
        $("#spanK2").html('');
        $("#divErrMsg_J2").hide();
        $("#divErrMsg_K2").hide();
    });



    //End of (A5)

    //For (A17)
    function fn_SelectDay() {
        if (!$('.WeekDay').filter(':checked').length > 0) {
            $("#spWeekDay").text("Please select any day option");
            $("#divWeekDay").show();
            return 18;
        }
        else {  //if ($('.WeekDay').filter(':checked').length > 0) {
            $("#spWeekDay").text("");
            $("#divWeekDay").hide();

            var daysSelected = "";
            $('.WeekDay:checked').each(function () {
                daysSelected = daysSelected + $(this).val() + ",";
            });

            //alert(daysSelected);
            $('#Condition_SuitedWeekDayMultiple').val(daysSelected);
            //alert($("#Condition_SuitedWeekDayMultiple").val());

        }
        //-----------------------------------//
        //if ($(".5Days").filter(':checked').length > 3) {
        //    $("#spWeekDay").text("Please select any 2 or 3 days, or any 1 day");
        //    $("#divWeekDay").show();
        //    return 17;
        //}
        //else {
        //    $("#spWeekDay").text("");
        //    $("#divWeekDay").hide();
        //}
    }

    $(".WeekDay").click(function () {
        $("#spWeekDay").text("");
        $("#divWeekDay").hide();
    })

    $("input:checkbox[name='Anyday']").click(function () {
        if ($('input[name="Anyday"]').is(':checked')) {
            $("input:checkbox[name='Monday']").attr("disabled", true);
            $("input:checkbox[name='Tuesday']").attr("disabled", true);
            $("input:checkbox[name='Wednesday']").attr("disabled", true);
            $("input:checkbox[name='Thursday']").attr("disabled", true);
            $("input:checkbox[name='Friday']").attr("disabled", true);
        }
        else {
            $("input:checkbox[name='Monday']").attr("disabled", false);
            $("input:checkbox[name='Tuesday']").attr("disabled", false);
            $("input:checkbox[name='Wednesday']").attr("disabled", false);
            $("input:checkbox[name='Thursday']").attr("disabled", false);
            $("input:checkbox[name='Friday']").attr("disabled", false);

        }
    });

    //End of (A17)
    $('#txtPatientName').on("keypress", function (e) {
        //alert(11);
        if (e.keyCode == 13) {
            fnShowPatientSearch();
            //fnSearchForPatient();
            $("#btn_psearch").click();
            $("#txtPatientFullName").val($("#txtPatientName").val());
            $("#txtPatientName").val("");

            //return false; // prevent the button click from happening
        }
    });
    //$("#txtPatientName").keypress(function (e) {

    //    var code = (e.keyCode ? e.keyCode : e.which);

    //    if (code === 13) {
    //        //$("#tblPatientList tbody").html('');
    //        fnSearchForPatient();
    //        $("#btnPatientSearch").click();
    //        //return false;
    //        // $("#btn").trigger("click");
    //    }
    //});

    $(document).on("click", ".PatientSearchModal", function () {

        fnShowPatientSearch();
        $("#btn_psearch").click();
        $("#txtPatientFullName").val($("#txtPatientName").val());
        $("#txtPatientName").val("");
    });
</script>
<script>
    $("#Patient_FirstName").keypress(function (event) {
        var inputValue = event.which;
        // allow letters and whitespaces only.
        if (!(inputValue >= 65 && inputValue <= 122) && (inputValue != 32 && inputValue != 0)) {
            event.preventDefault();
        }
    });
    $("#Patient_LastName").keypress(function (event) {
        var inputValue = event.which;
        // allow letters and whitespaces only.
        if (!(inputValue >= 65 && inputValue <= 122) && (inputValue != 32 && inputValue != 0)) {
            event.preventDefault();
        }
        else {
            $("#dvErrMsgPatientName").hide();
        }
    });
    //$("#txtMobNo").keypress(function (event) {
    //    var inputValue = event.which;
    //    // allow letters and whitespaces only.
    //    if (!(inputValue >= 65 && inputValue <= 120) && (inputValue != 32 && inputValue != 0)) {
    //        event.preventDefault();
    //    }
    //    else {
    //        $("#divErrorMSG").hide();
    //    }
    //});
    $("#txtMobNo").keyup(function () {
        $("#divErrorMSG").hide();
    });
    $("#Condition_ProblemType").change(function () {
        //alert("onchange");
        //alert($('#Condition_ProblemType').val());
        if ($('#Condition_ProblemType').val() != 0) {
            $("#divErrMsg_A8").hide();
            $('#txtProbType').val($('#Condition_ProblemType option:selected').text());
        }
        //else {

        //}
    });

    $("#Patient_ReferralSource").change(function () {
        //alert("onchange");
        //alert($('#Condition_ProblemType').val());
        if ($('#Patient_ReferralSource').val() != 0) {
            $('#hdnReferralText').val($('#Patient_ReferralSource option:selected').text());
        }
        //else {

        //}
    });
</script>
<script>
    $("#MedicareInsurances_0__PolicyNumber").keypress(function (event) {

        $("#div49_error").hide();

    });
    //$("#MedicareInsurances_0__GroupNumber").keypress(function (event) {

    //    $("#div50_error").hide();

    //});
    $("#MedicareInsurances_0__HolderName").keypress(function (event) {

        $("#div51_error").hide();

    });
    $("#MedicareInsurances_1__Name").keypress(function (event) {

        $("#div54_error").hide();

    });
    $("#MedicareInsurances_1__PolicyNumber").keypress(function (event) {

        $("#div55_error").hide();

    });
    $("#MedicareInsurances_1__GroupNumber").keypress(function (event) {

        $("#div56_error").hide();

    });
    $("#MedicareInsurances_1__HolderName").keypress(function (event) {

        $("#div57_error").hide();

    });
    //Parikshit_START_22122017
    $('#btnPrev').click(function (e) {
        e.preventDefault();
        $('#ddlPayOptValidatinMsg').hide();
        //if ((parseInt($('#hdnPopUp').val()) == 0) && (parseInt($('#hdnDivID').val()) == 3)) {
        //    $('#hdnPopUp').val(1);
        //}
        ////////////////////////////////////
        //var dvprevval1 = parseInt($('#hdnDivID').val());
        //var dvnewval1 = dvprevval1 - 1;
        //$('#hdnDivID').val(dvnewval1);
        //alert($('#hdnDivID').val());
        ////////////////////////////////////
        var SeekingCareType = "0";
        var IsEligibile = "0";
        var rbPhone = "0";
        ////////////////////////
        var IsUnderPhysician = "0";
        var IsSeenHereBefore = "0";
        var NeedHelpOfOtherPerson = "0";
        var IsInsuranceDone = "0";
        var IsAuthRequiredForTreatment = "0";
        var Is_PhysicalTherephyBefore = "0";
        var IsSeenByHomeHealthAgency = "0";
        var Deductible = "0";
        var IsPaperworkViaEmail = "0";
        var IsDifficultToLeaveHome = "0";
        /////////////////////////////////////
        var Condition_SuitedWeekDay = "0";
        var SuitedDayTime = "0";
        var CanWaitUpto = "0";
        var WalkerType = "0";
        var IsDriveByOwn = "0";

        if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "1")
            Deductible = "1";
        else if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "0")
            Deductible = "0";
        else if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "2")
            Deductible = "2";

        if ($("input[name='Condition.SeekingCareType']:checked").val() == "2")
            SeekingCareType = "2";
        else if ($("input[name='Condition.SeekingCareType']:checked").val() == "1")
            SeekingCareType = "1";

        if ($("input[name='Condition.IsEligible']:checked").val() == "1")
            IsEligibile = "1";
        else if ($("input[name='Condition.IsEligible']:checked").val() == "2")
            IsEligibile = "2";

        if ($("input[name='rbPhone']:checked").val() == "2")
            rbPhone = "2";
        else if ($("input[name='rbPhone']:checked").val() == "3")
            rbPhone = "3";
        else if ($("input[name='rbPhone']:checked").val() == "1")
            rbPhone = "1";

        if ($("input[name='Condition.IsPaperworkViaEmail']:checked").val() == "1")
            IsPaperworkViaEmail = "1";
        else if ($("input[name='Condition.IsPaperworkViaEmail']:checked").val() == "2")
            IsPaperworkViaEmail = "2";

        if ($("input[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == "1")
            IsSeenByHomeHealthAgency = "1";
        else if ($("input[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == "2")
            IsSeenByHomeHealthAgency = "2";

        if ($("input[name='Condition.Is_PhysicalTherephyBefore']:checked").val() == "1")
            Is_PhysicalTherephyBefore = "1";
        else if ($("input[name='Condition.Is_PhysicalTherephyBefore']:checked").val() == "2")
            Is_PhysicalTherephyBefore = "2";

        if ($("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment']:checked").val() == "1")
            IsInsuranceDone = "1";
        else if ($("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment']:checked").val() == "2")
            IsInsuranceDone = "2";

        if ($("input[name='Condition.IsInsuranceDone']:checked").val() == "1")
            IsAuthRequiredForTreatment = "1";
        else if ($("input[name='Condition.IsInsuranceDone']:checked").val() == "2")
            IsAuthRequiredForTreatment = "2";

        if ($("input[name='Condition.IsUnderPhysician']:checked").val() == "1")
            IsUnderPhysician = "1";
        else if ($("input[name='Condition.IsUnderPhysician']:checked").val() == "2")
            IsUnderPhysician = "2";

        if ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "1")
            IsSeenHereBefore = "1";
        else if ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "2")
            IsSeenHereBefore = "2";

        if ($("input[name='Condition.IsDifficultToLeaveHome']:checked").val() == "1")
            IsDifficultToLeaveHome = "1";
        else if ($("input[name='Condition.IsDifficultToLeaveHome']:checked").val() == "2")
            IsDifficultToLeaveHome = "2";

        if ($("input[name='Condition.IsDriveByOwn']:checked").val() == "1")
            IsDriveByOwn = "1";
        else if ($("input[name='Condition.IsDriveByOwn']:checked").val() == "0")
            IsDriveByOwn = "0";

        if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "1")
            NeedHelpOfOtherPerson = "1";
        else if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "3")
            NeedHelpOfOtherPerson = "3";
        else if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "2")
            NeedHelpOfOtherPerson = "2";

        if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "2")
            Condition_SuitedWeekDay = "2";
        else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "3")
            Condition_SuitedWeekDay = "3";
        else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "4")
            Condition_SuitedWeekDay = "4";
        else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "5")
            Condition_SuitedWeekDay = "5";
        else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "6")
            Condition_SuitedWeekDay = "6";
        else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "1")
            Condition_SuitedWeekDay = "1";

        if ($("input[name='Condition.SuitedDayTime']:checked").val() == "1")
            SuitedDayTime = "1";
        else if ($("input[name='Condition.SuitedDayTime']:checked").val() == "2")
            SuitedDayTime = "2";
        else if ($("input[name='Condition.SuitedDayTime']:checked").val() == "0")
            SuitedDayTime = "0";

        if ($("input[name='Condition.CanWaitUpto']:checked").val() == "1")
            CanWaitUpto = "1";
        else if ($("input[name='Condition.CanWaitUpto']:checked").val() == "0")
            CanWaitUpto = "0";

        if ($("input[name='Condition.WalkerType']:checked").val() == "1")
            WalkerType = "1";
        else if ($("input[name='Condition.WalkerType']:checked").val() == "2")
            WalkerType = "2";
        else if ($("input[name='Condition.WalkerType']:checked").val() == "3")
            WalkerType = "3";
        else if ($("input[name='Condition.WalkerType']:checked").val() == "0")
            WalkerType = "0";

        var _Patient = {

            "Patient_FirstName": $("#Patient_FirstName").val(),
            "Patient_LastName": $("#Patient_LastName").val(),
            "rbPhone": rbPhone,
            "txtMobNo": $("#txtMobNo").val(),
            "Patient_AddressLine1": $("#Patient_AddressLine1").val(),
            "Patient_AddressLine2": $("#Patient_AddressLine2").val(),
            "Patient_City": $("#Patient_City").val(),
            "Patient_State": $("#Patient_State").val(),
            "Patient_ZipCode": $("#Patient_ZipCode").val(),
            "month": $("#month").val(),
            "date": $("#date").val(),
            "Year": $("#Year").val(),
            "Patient_ReferralSource": $("#Patient_ReferralSource").val(),
            "Condition_ProblemType": $("#Condition_ProblemType").val(),
            "Condition_ProblemDetail": $("#Condition_ProblemDetail").val(),
            "Condition_IsUnderPhysician": IsUnderPhysician,
            "txtDoctorName": $("#txtDoctorName").val(),
            "Condition_DoctorPhone": $("#Condition_DoctorPhone").val(),
            "Condition_FromWhenProblemExist": $("#Condition_FromWhenProblemExist").val(),
            "Condition_ProblemStrength": $("#Condition_ProblemStrength").val(),
            "SeekingCareType": SeekingCareType,
            "Condition_ConvenientLocation1": $("#Condition_ConvenientLocation1").val(),
            "Condition_ConvenientLocation2": $("#Condition_ConvenientLocation2").val(),
            "Condition_IsSeenHereBefore": IsSeenHereBefore,
            "txtPatientName": "", //$("#txtPatientName").val(),
            "Condition_SuitedWeekDay": Condition_SuitedWeekDay,
            "Condition_SuitedDayTime": SuitedDayTime,
            "Condition_CanWaitUpto": CanWaitUpto,
            "tblMPatSchdAppointmentType_AppointmentType_Id": $("#tblMPatSchdAppointmentType_AppointmentType_Id").val(),
            "Condition_ScheduledDateTime": $("#Condition_ScheduledDateTime").val(),
            "Condition_IsDifficultToLeaveHome": IsDifficultToLeaveHome,
            "Condition_WalkerType": WalkerType,
            "Condition_FrequencyOfLeavingHome": $("#Condition_FrequencyOfLeavingHome").val(),
            "Condition_IsDriveByOwn": IsDriveByOwn,
            "Condition_NeedHelpOfOtherPerson": NeedHelpOfOtherPerson,
            "IsEligible": IsEligibile,
            "Condition_IsInsuranceDone": IsInsuranceDone,
            "HomeCareInsurances_0__Name": $("#HomeCareInsurances_0__Name").val(),
            "HomeCareInsurances_0__PolicyNumber": $("#HomeCareInsurances_0__PolicyNumber").val(),
            "HomeCareInsurances_0__GroupNumber": $("#HomeCareInsurances_0__GroupNumber").val(),
            "Condition_PaymentType": $("#Condition_PaymentType").val(),
            "InNetworkInsurances_0__PolicyNumber": $("#InNetworkInsurances_0__PolicyNumber").val(),
            "InNetworkInsurances_0__GroupNumber": $("#InNetworkInsurances_0__GroupNumber").val(),
            "InNetworkInsurances_0__HolderName": $("#InNetworkInsurances_0__HolderName").val(),
            "InNetworkInsurances_0__HolderDOB": $("#InNetworkInsurances_0__HolderDOB").val(),
            "InNetworkInsurances_0__ServiceProviderPhone": $("#InNetworkInsurances_0__ServiceProviderPhone").val(),
            "MedicareInsurances_0__PolicyNumber": $("#MedicareInsurances_0__PolicyNumber").val(),
            "MedicareInsurances_0__GroupNumber": $("#MedicareInsurances_0__GroupNumber").val(),
            "MedicareInsurances_0__HolderName": $("#MedicareInsurances_0__HolderName").val(),
            "MedicareInsurances_0__HolderDOB": $("#MedicareInsurances_0__HolderDOB").val(),
            "MedicareInsurances_0__IsAuthRequiredForTreatment": IsAuthRequiredForTreatment,
            "MedicareInsurances_1__Name": $("#MedicareInsurances_1__Name").val(),
            "MedicareInsurances_1__PolicyNumber": $("#MedicareInsurances_1__PolicyNumber").val(),
            "MedicareInsurances_1__GroupNumber": $("#MedicareInsurances_1__GroupNumber").val(),
            "MedicareInsurances_1__HolderName": $("#MedicareInsurances_1__HolderName").val(),
            "MedicareInsurances_1__HolderDOB": $("#MedicareInsurances_1__HolderDOB").val(),
            "Condition_Is_PhysicalTherephyBefore": Is_PhysicalTherephyBefore,
            "Condition_IsSeenByHomeHealthAgency": IsSeenByHomeHealthAgency,
            "Patient_Employer_Name": $("#Patient_Employer_Name").val(),
            "Patient_Employer_Phone": $("#Patient_Employer_Phone").val(),
            "Condition_Insurance_Adjustor_Name": $("#Condition_Insurance_Adjustor_Name").val(),
            "Condition_Insurance_Adjustor_Phone": $("#Condition_Insurance_Adjustor_Phone").val(),
            "Condition_WhoseFaultAccident": $("#Condition_WhoseFaultAccident").val(),
            "Condition_NameOfAutoInsurance": $("#Condition_NameOfAutoInsurance").val(),
            "Condition_AutoInsurancePhone": $("#Condition_AutoInsurancePhone").val(),
            "Condition_AutoInsuranceClaimNo": $("#Condition_AutoInsuranceClaimNo").val(),
            "Condition_Attorney_Name": $("#Condition_Attorney_Name").val(),
            "Condition_Date_Of_Accident": $("#Condition_Date_Of_Accident").val(),
            "Condition_StoreContactPerson": $("#Condition_StoreContactPerson").val(),
            "Condition_StorePhoneNo": $("#Condition_StorePhoneNo").val(),
            "OutNetworkInsurances_0__PolicyNumber": $("#OutNetworkInsurances_0__PolicyNumber").val(),
            "OutNetworkInsurances_0__GroupNumber": $("#OutNetworkInsurances_0__GroupNumber").val(),
            "OutNetworkInsurances_0__HolderName": $("#OutNetworkInsurances_0__HolderName").val(),
            "OutNetworkInsurances_0__HolderDOB": $("#OutNetworkInsurances_0__HolderDOB").val(),
            "OutNetworkInsurances_0__ServiceProviderPhone": $("#OutNetworkInsurances_0__ServiceProviderPhone").val(),
            "OutNetworkInsurances_0__Deductible": Deductible,
            "OutNetworkInsurances_0__CoInsurance": $("#OutNetworkInsurances_0__CoInsurance").val(),
            "OutNetworkInsurances_0__CoPay": $("#OutNetworkInsurances_0__CoPay").val(),
            "Condition_IsPaperworkViaEmail": IsPaperworkViaEmail,
            "PatientUser_Email": $("#PatientUser_Email1").val(),

            "TempID": $("#hdnTempID").val(),
            "DivID": $("#hdnDivID").val(),
            "KareoID": $("#hdnKareo").val()
        };
        $.ajax({
            type: 'POST',
            url: "@Url.Action("SaveTempData", "PatientActivation")",
            data: JSON.stringify(_Patient),
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            success: function (data) {
                if (data.success == 0) {
                    alert(data.message);
                }

            }
        });
    });


    $('#btnNext').click(function (e) {
        e.preventDefault();
        if ((parseInt($('#hdnDivID').val()) == 3) && ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "1")) {
            //$('#hdnPopUp').val(0);
            ////////////////////////////////////
            //var dvprevval = parseInt($('#hdnDivID').val());
            //var dvnewval = dvprevval + 1;
            //$('#hdnDivID').val(dvnewval);
            //alert($('#hdnDivID').val());
            ////////////////////////////////////
            var SeekingCareType = "0";
            var IsEligibile = "0";
            var rbPhone = "0";
            ////////////////////////
            var IsUnderPhysician = "0";
            var IsSeenHereBefore = "0";
            var NeedHelpOfOtherPerson = "0";
            var IsInsuranceDone = "0";
            var IsAuthRequiredForTreatment = "0";
            var Is_PhysicalTherephyBefore = "0";
            var IsSeenByHomeHealthAgency = "0";
            var Deductible = "0";
            var IsPaperworkViaEmail = "0";
            var IsDifficultToLeaveHome = "0";
            /////////////////////////////////////
            var Condition_SuitedWeekDay = "0";
            var SuitedDayTime = "0";
            var CanWaitUpto = "0";
            var WalkerType = "0";
            var IsDriveByOwn = "0";

            if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "1")
                Deductible = "1";
            else if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "0")
                Deductible = "0";
            else if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "2")
                Deductible = "2";

            if ($("input[name='Condition.SeekingCareType']:checked").val() == "2")
                SeekingCareType = "2";
            else if ($("input[name='Condition.SeekingCareType']:checked").val() == "1")
                SeekingCareType = "1";

            if ($("input[name='Condition.IsEligible']:checked").val() == "1")
                IsEligibile = "1";
            else if ($("input[name='Condition.IsEligible']:checked").val() == "2")
                IsEligibile = "2";

            if ($("input[name='rbPhone']:checked").val() == "2")
                rbPhone = "2";
            else if ($("input[name='rbPhone']:checked").val() == "3")
                rbPhone = "3";
            else if ($("input[name='rbPhone']:checked").val() == "1")
                rbPhone = "1";

            if ($("input[name='Condition.IsPaperworkViaEmail']:checked").val() == "1")
                IsPaperworkViaEmail = "1";
            else if ($("input[name='Condition.IsPaperworkViaEmail']:checked").val() == "2")
                IsPaperworkViaEmail = "2";

            if ($("input[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == "1")
                IsSeenByHomeHealthAgency = "1";
            else if ($("input[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == "2")
                IsSeenByHomeHealthAgency = "2";

            if ($("input[name='Condition.Is_PhysicalTherephyBefore']:checked").val() == "1")
                Is_PhysicalTherephyBefore = "1";
            else if ($("input[name='Condition.Is_PhysicalTherephyBefore']:checked").val() == "2")
                Is_PhysicalTherephyBefore = "2";

            if ($("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment']:checked").val() == "1")
                IsInsuranceDone = "1";
            else if ($("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment']:checked").val() == "2")
                IsInsuranceDone = "2";

            if ($("input[name='Condition.IsInsuranceDone']:checked").val() == "1")
                IsAuthRequiredForTreatment = "1";
            else if ($("input[name='Condition.IsInsuranceDone']:checked").val() == "2")
                IsAuthRequiredForTreatment = "2";

            if ($("input[name='Condition.IsUnderPhysician']:checked").val() == "1")
                IsUnderPhysician = "1";
            else if ($("input[name='Condition.IsUnderPhysician']:checked").val() == "2")
                IsUnderPhysician = "2";

            if ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "1")
                IsSeenHereBefore = "1";
            else if ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "2")
                IsSeenHereBefore = "2";

            if ($("input[name='Condition.IsDifficultToLeaveHome']:checked").val() == "1")
                IsDifficultToLeaveHome = "1";
            else if ($("input[name='Condition.IsDifficultToLeaveHome']:checked").val() == "2")
                IsDifficultToLeaveHome = "2";

            if ($("input[name='Condition.IsDriveByOwn']:checked").val() == "1")
                IsDriveByOwn = "1";
            else if ($("input[name='Condition.IsDriveByOwn']:checked").val() == "0")
                IsDriveByOwn = "0";

            if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "1")
                NeedHelpOfOtherPerson = "1";
            else if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "3")
                NeedHelpOfOtherPerson = "3";
            else if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "2")
                NeedHelpOfOtherPerson = "2";

            if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "2")
                Condition_SuitedWeekDay = "2";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "3")
                Condition_SuitedWeekDay = "3";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "4")
                Condition_SuitedWeekDay = "4";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "5")
                Condition_SuitedWeekDay = "5";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "6")
                Condition_SuitedWeekDay = "6";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "1")
                Condition_SuitedWeekDay = "1";

            if ($("input[name='Condition.SuitedDayTime']:checked").val() == "1")
                SuitedDayTime = "1";
            else if ($("input[name='Condition.SuitedDayTime']:checked").val() == "2")
                SuitedDayTime = "2";
            else if ($("input[name='Condition.SuitedDayTime']:checked").val() == "0")
                SuitedDayTime = "0";

            if ($("input[name='Condition.CanWaitUpto']:checked").val() == "1")
                CanWaitUpto = "1";
            else if ($("input[name='Condition.CanWaitUpto']:checked").val() == "0")
                CanWaitUpto = "0";

            if ($("input[name='Condition.WalkerType']:checked").val() == "1")
                WalkerType = "1";
            else if ($("input[name='Condition.WalkerType']:checked").val() == "2")
                WalkerType = "2";
            else if ($("input[name='Condition.WalkerType']:checked").val() == "3")
                WalkerType = "3";
            else if ($("input[name='Condition.WalkerType']:checked").val() == "0")
                WalkerType = "0";

            var _Patient = {

                "Patient_FirstName": $("#Patient_FirstName").val(),
                "Patient_LastName": $("#Patient_LastName").val(),
                "rbPhone": rbPhone,
                "txtMobNo": $("#txtMobNo").val(),
                "Patient_AddressLine1": $("#Patient_AddressLine1").val(),
                "Patient_AddressLine2": $("#Patient_AddressLine2").val(),
                "Patient_City": $("#Patient_City").val(),
                "Patient_State": $("#Patient_State").val(),
                "Patient_ZipCode": $("#Patient_ZipCode").val(),
                "month": $("#month").val(),
                "date": $("#date").val(),
                "Year": $("#Year").val(),
                "Patient_ReferralSource": $("#Patient_ReferralSource").val(),
                "Condition_ProblemType": $("#Condition_ProblemType").val(),
                "Condition_ProblemDetail": $("#Condition_ProblemDetail").val(),
                "Condition_IsUnderPhysician": IsUnderPhysician,
                "txtDoctorName": $("#txtDoctorName").val(),
                "Condition_DoctorPhone": $("#Condition_DoctorPhone").val(),
                "Condition_FromWhenProblemExist": $("#Condition_FromWhenProblemExist").val(),
                "Condition_ProblemStrength": $("#Condition_ProblemStrength").val(),
                "SeekingCareType": SeekingCareType,
                "Condition_ConvenientLocation1": $("#Condition_ConvenientLocation1").val(),
                "Condition_ConvenientLocation2": $("#Condition_ConvenientLocation2").val(),
                "Condition_IsSeenHereBefore": IsSeenHereBefore,
                "txtPatientName": "", //$("#txtPatientName").val(),
                "Condition_SuitedWeekDay": Condition_SuitedWeekDay,
                "Condition_SuitedDayTime": SuitedDayTime,
                "Condition_CanWaitUpto": CanWaitUpto,
                "tblMPatSchdAppointmentType_AppointmentType_Id": $("#tblMPatSchdAppointmentType_AppointmentType_Id").val(),
                "Condition_ScheduledDateTime": $("#Condition_ScheduledDateTime").val(),
                "Condition_IsDifficultToLeaveHome": IsDifficultToLeaveHome,
                "Condition_WalkerType": WalkerType,
                "Condition_FrequencyOfLeavingHome": $("#Condition_FrequencyOfLeavingHome").val(),
                "Condition_IsDriveByOwn": IsDriveByOwn,
                "Condition_NeedHelpOfOtherPerson": NeedHelpOfOtherPerson,
                "IsEligible": IsEligibile,
                "Condition_IsInsuranceDone": IsInsuranceDone,
                "HomeCareInsurances_0__Name": $("#HomeCareInsurances_0__Name").val(),
                "HomeCareInsurances_0__PolicyNumber": $("#HomeCareInsurances_0__PolicyNumber").val(),
                "HomeCareInsurances_0__GroupNumber": $("#HomeCareInsurances_0__GroupNumber").val(),
                "Condition_PaymentType": $("#Condition_PaymentType").val(),
                "InNetworkInsurances_0__PolicyNumber": $("#InNetworkInsurances_0__PolicyNumber").val(),
                "InNetworkInsurances_0__GroupNumber": $("#InNetworkInsurances_0__GroupNumber").val(),
                "InNetworkInsurances_0__HolderName": $("#InNetworkInsurances_0__HolderName").val(),
                "InNetworkInsurances_0__HolderDOB": $("#InNetworkInsurances_0__HolderDOB").val(),
                "InNetworkInsurances_0__ServiceProviderPhone": $("#InNetworkInsurances_0__ServiceProviderPhone").val(),
                "MedicareInsurances_0__PolicyNumber": $("#MedicareInsurances_0__PolicyNumber").val(),
                "MedicareInsurances_0__GroupNumber": $("#MedicareInsurances_0__GroupNumber").val(),
                "MedicareInsurances_0__HolderName": $("#MedicareInsurances_0__HolderName").val(),
                "MedicareInsurances_0__HolderDOB": $("#MedicareInsurances_0__HolderDOB").val(),
                "MedicareInsurances_0__IsAuthRequiredForTreatment": IsAuthRequiredForTreatment,
                "MedicareInsurances_1__Name": $("#MedicareInsurances_1__Name").val(),
                "MedicareInsurances_1__PolicyNumber": $("#MedicareInsurances_1__PolicyNumber").val(),
                "MedicareInsurances_1__GroupNumber": $("#MedicareInsurances_1__GroupNumber").val(),
                "MedicareInsurances_1__HolderName": $("#MedicareInsurances_1__HolderName").val(),
                "MedicareInsurances_1__HolderDOB": $("#MedicareInsurances_1__HolderDOB").val(),
                "Condition_Is_PhysicalTherephyBefore": Is_PhysicalTherephyBefore,
                "Condition_IsSeenByHomeHealthAgency": IsSeenByHomeHealthAgency,
                "Patient_Employer_Name": $("#Patient_Employer_Name").val(),
                "Patient_Employer_Phone": $("#Patient_Employer_Phone").val(),
                "Condition_Insurance_Adjustor_Name": $("#Condition_Insurance_Adjustor_Name").val(),
                "Condition_Insurance_Adjustor_Phone": $("#Condition_Insurance_Adjustor_Phone").val(),
                "Condition_WhoseFaultAccident": $("#Condition_WhoseFaultAccident").val(),
                "Condition_NameOfAutoInsurance": $("#Condition_NameOfAutoInsurance").val(),
                "Condition_AutoInsurancePhone": $("#Condition_AutoInsurancePhone").val(),
                "Condition_AutoInsuranceClaimNo": $("#Condition_AutoInsuranceClaimNo").val(),
                "Condition_Attorney_Name": $("#Condition_Attorney_Name").val(),
                "Condition_Date_Of_Accident": $("#Condition_Date_Of_Accident").val(),
                "Condition_StoreContactPerson": $("#Condition_StoreContactPerson").val(),
                "Condition_StorePhoneNo": $("#Condition_StorePhoneNo").val(),
                "OutNetworkInsurances_0__PolicyNumber": $("#OutNetworkInsurances_0__PolicyNumber").val(),
                "OutNetworkInsurances_0__GroupNumber": $("#OutNetworkInsurances_0__GroupNumber").val(),
                "OutNetworkInsurances_0__HolderName": $("#OutNetworkInsurances_0__HolderName").val(),
                "OutNetworkInsurances_0__HolderDOB": $("#OutNetworkInsurances_0__HolderDOB").val(),
                "OutNetworkInsurances_0__ServiceProviderPhone": $("#OutNetworkInsurances_0__ServiceProviderPhone").val(),
                "OutNetworkInsurances_0__Deductible": Deductible,
                "OutNetworkInsurances_0__CoInsurance": $("#OutNetworkInsurances_0__CoInsurance").val(),
                "OutNetworkInsurances_0__CoPay": $("#OutNetworkInsurances_0__CoPay").val(),
                "Condition_IsPaperworkViaEmail": IsPaperworkViaEmail,
                "PatientUser_Email": $("#PatientUser_Email1").val(),
                "TempID": $("#hdnTempID").val(),
                "DivID": $("#hdnDivID").val(),
                "KareoID": $("#hdnKareo").val()
            };
            $.ajax({
                type: 'POST',
                url: "@Url.Action("SaveTempData", "PatientActivation")",
                data: JSON.stringify(_Patient),
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (data) {
                    if (data.success == 0) {
                        alert(data.message);
                    }
                }
            });

            $('#myModal').modal();
        }
        else {
            ////////////////////////////////////
            //var dvprevval = parseInt($('#hdnDivID').val());
            //var dvnewval = dvprevval + 1;
            //$('#hdnDivID').val(dvnewval);
            //alert($('#hdnDivID').val());
            ////////////////////////////////////
            var SeekingCareType = "0";
            var IsEligibile = "0";
            var rbPhone = "0";
            ////////////////////////
            var IsUnderPhysician = "0";
            var IsSeenHereBefore = "0";
            var NeedHelpOfOtherPerson = "0";
            var IsInsuranceDone = "0";
            var IsAuthRequiredForTreatment = "0";
            var Is_PhysicalTherephyBefore = "0";
            var IsSeenByHomeHealthAgency = "0";
            var Deductible = "0";
            var IsPaperworkViaEmail = "0";
            var IsDifficultToLeaveHome = "0";
            /////////////////////////////////////
            var Condition_SuitedWeekDay = "0";
            var SuitedDayTime = "0";
            var CanWaitUpto = "0";
            var WalkerType = "0";
            var IsDriveByOwn = "0";

            if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "1")
                Deductible = "1";
            else if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "0")
                Deductible = "0";
            else if ($("input[name='OutNetworkInsurances_0__Deductible']:checked").val() == "2")
                Deductible = "2";

            if ($("input[name='Condition.SeekingCareType']:checked").val() == "2")
                SeekingCareType = "2";
            else if ($("input[name='Condition.SeekingCareType']:checked").val() == "1")
                SeekingCareType = "1";

            if ($("input[name='Condition.IsEligible']:checked").val() == "1")
                IsEligibile = "1";
            else if ($("input[name='Condition.IsEligible']:checked").val() == "2")
                IsEligibile = "2";

            if ($("input[name='rbPhone']:checked").val() == "2")
                rbPhone = "2";
            else if ($("input[name='rbPhone']:checked").val() == "3")
                rbPhone = "3";
            else if ($("input[name='rbPhone']:checked").val() == "1")
                rbPhone = "1";

            if ($("input[name='Condition.IsPaperworkViaEmail']:checked").val() == "1")
                IsPaperworkViaEmail = "1";
            else if ($("input[name='Condition.IsPaperworkViaEmail']:checked").val() == "2")
                IsPaperworkViaEmail = "2";

            if ($("input[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == "1")
                IsSeenByHomeHealthAgency = "1";
            else if ($("input[name='Condition.IsSeenByHomeHealthAgency']:checked").val() == "2")
                IsSeenByHomeHealthAgency = "2";

            if ($("input[name='Condition.Is_PhysicalTherephyBefore']:checked").val() == "1")
                Is_PhysicalTherephyBefore = "1";
            else if ($("input[name='Condition.Is_PhysicalTherephyBefore']:checked").val() == "2")
                Is_PhysicalTherephyBefore = "2";

            if ($("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment']:checked").val() == "1")
                IsInsuranceDone = "1";
            else if ($("input[name='MedicareInsurances_0__IsAuthRequiredForTreatment']:checked").val() == "2")
                IsInsuranceDone = "2";

            if ($("input[name='Condition.IsInsuranceDone']:checked").val() == "1")
                IsAuthRequiredForTreatment = "1";
            else if ($("input[name='Condition.IsInsuranceDone']:checked").val() == "2")
                IsAuthRequiredForTreatment = "2";

            if ($("input[name='Condition.IsUnderPhysician']:checked").val() == "1")
                IsUnderPhysician = "1";
            else if ($("input[name='Condition.IsUnderPhysician']:checked").val() == "2")
                IsUnderPhysician = "2";

            if ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "1")
                IsSeenHereBefore = "1";
            else if ($("input[name='Condition.IsSeenHereBefore']:checked").val() == "2")
                IsSeenHereBefore = "2";

            if ($("input[name='Condition.IsDifficultToLeaveHome']:checked").val() == "1")
                IsDifficultToLeaveHome = "1";
            else if ($("input[name='Condition.IsDifficultToLeaveHome']:checked").val() == "2")
                IsDifficultToLeaveHome = "2";

            if ($("input[name='Condition.IsDriveByOwn']:checked").val() == "1")
                IsDriveByOwn = "1";
            else if ($("input[name='Condition.IsDriveByOwn']:checked").val() == "0")
                IsDriveByOwn = "0";

            if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "1")
                NeedHelpOfOtherPerson = "1";
            else if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "3")
                NeedHelpOfOtherPerson = "3";
            else if ($("input[name='Condition.NeedHelpOfOtherPerson']:checked").val() == "2")
                NeedHelpOfOtherPerson = "2";

            if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "2")
                Condition_SuitedWeekDay = "2";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "3")
                Condition_SuitedWeekDay = "3";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "4")
                Condition_SuitedWeekDay = "4";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "5")
                Condition_SuitedWeekDay = "5";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "6")
                Condition_SuitedWeekDay = "6";
            else if ($("input[name='Condition.SuitedWeekDay']:checked").val() == "1")
                Condition_SuitedWeekDay = "1";

            if ($("input[name='Condition.SuitedDayTime']:checked").val() == "1")
                SuitedDayTime = "1";
            else if ($("input[name='Condition.SuitedDayTime']:checked").val() == "2")
                SuitedDayTime = "2";
            else if ($("input[name='Condition.SuitedDayTime']:checked").val() == "0")
                SuitedDayTime = "0";

            if ($("input[name='Condition.CanWaitUpto']:checked").val() == "1")
                CanWaitUpto = "1";
            else if ($("input[name='Condition.CanWaitUpto']:checked").val() == "0")
                CanWaitUpto = "0";

            if ($("input[name='Condition.WalkerType']:checked").val() == "1")
                WalkerType = "1";
            else if ($("input[name='Condition.WalkerType']:checked").val() == "2")
                WalkerType = "2";
            else if ($("input[name='Condition.WalkerType']:checked").val() == "3")
                WalkerType = "3";
            else if ($("input[name='Condition.WalkerType']:checked").val() == "0")
                WalkerType = "0";

            var _Patient = {

                "Patient_FirstName": $("#Patient_FirstName").val(),
                "Patient_LastName": $("#Patient_LastName").val(),
                "rbPhone": rbPhone,
                "txtMobNo": $("#txtMobNo").val(),
                "Patient_AddressLine1": $("#Patient_AddressLine1").val(),
                "Patient_AddressLine2": $("#Patient_AddressLine2").val(),
                "Patient_City": $("#Patient_City").val(),
                "Patient_State": $("#Patient_State").val(),
                "Patient_ZipCode": $("#Patient_ZipCode").val(),
                "month": $("#month").val(),
                "date": $("#date").val(),
                "Year": $("#Year").val(),
                "Patient_ReferralSource": $("#Patient_ReferralSource").val(),
                "Condition_ProblemType": $("#Condition_ProblemType").val(),
                "Condition_ProblemDetail": $("#Condition_ProblemDetail").val(),
                "Condition_IsUnderPhysician": IsUnderPhysician,
                "txtDoctorName": $("#txtDoctorName").val(),
                "Condition_DoctorPhone": $("#Condition_DoctorPhone").val(),
                "Condition_FromWhenProblemExist": $("#Condition_FromWhenProblemExist").val(),
                "Condition_ProblemStrength": $("#Condition_ProblemStrength").val(),
                "SeekingCareType": SeekingCareType,
                "Condition_ConvenientLocation1": $("#Condition_ConvenientLocation1").val(),
                "Condition_ConvenientLocation2": $("#Condition_ConvenientLocation2").val(),
                "Condition_IsSeenHereBefore": IsSeenHereBefore,
                "txtPatientName": "",//$("#txtPatientName").val(),
                "Condition_SuitedWeekDay": Condition_SuitedWeekDay,
                "Condition_SuitedDayTime": SuitedDayTime,
                "Condition_CanWaitUpto": CanWaitUpto,
                "tblMPatSchdAppointmentType_AppointmentType_Id": $("#tblMPatSchdAppointmentType_AppointmentType_Id").val(),
                "Condition_ScheduledDateTime": $("#Condition_ScheduledDateTime").val(),
                "Condition_IsDifficultToLeaveHome": IsDifficultToLeaveHome,
                "Condition_WalkerType": WalkerType,
                "Condition_FrequencyOfLeavingHome": $("#Condition_FrequencyOfLeavingHome").val(),
                "Condition_IsDriveByOwn": IsDriveByOwn,
                "Condition_NeedHelpOfOtherPerson": NeedHelpOfOtherPerson,
                "IsEligible": IsEligibile,
                "Condition_IsInsuranceDone": IsInsuranceDone,
                "HomeCareInsurances_0__Name": $("#HomeCareInsurances_0__Name").val(),
                "HomeCareInsurances_0__PolicyNumber": $("#HomeCareInsurances_0__PolicyNumber").val(),
                "HomeCareInsurances_0__GroupNumber": $("#HomeCareInsurances_0__GroupNumber").val(),
                "Condition_PaymentType": $("#Condition_PaymentType").val(),
                "InNetworkInsurances_0__PolicyNumber": $("#InNetworkInsurances_0__PolicyNumber").val(),
                "InNetworkInsurances_0__GroupNumber": $("#InNetworkInsurances_0__GroupNumber").val(),
                "InNetworkInsurances_0__HolderName": $("#InNetworkInsurances_0__HolderName").val(),
                "InNetworkInsurances_0__HolderDOB": $("#InNetworkInsurances_0__HolderDOB").val(),
                "InNetworkInsurances_0__ServiceProviderPhone": $("#InNetworkInsurances_0__ServiceProviderPhone").val(),
                "MedicareInsurances_0__PolicyNumber": $("#MedicareInsurances_0__PolicyNumber").val(),
                "MedicareInsurances_0__GroupNumber": $("#MedicareInsurances_0__GroupNumber").val(),
                "MedicareInsurances_0__HolderName": $("#MedicareInsurances_0__HolderName").val(),
                "MedicareInsurances_0__HolderDOB": $("#MedicareInsurances_0__HolderDOB").val(),
                "MedicareInsurances_0__IsAuthRequiredForTreatment": IsAuthRequiredForTreatment,
                "MedicareInsurances_1__Name": $("#MedicareInsurances_1__Name").val(),
                "MedicareInsurances_1__PolicyNumber": $("#MedicareInsurances_1__PolicyNumber").val(),
                "MedicareInsurances_1__GroupNumber": $("#MedicareInsurances_1__GroupNumber").val(),
                "MedicareInsurances_1__HolderName": $("#MedicareInsurances_1__HolderName").val(),
                "MedicareInsurances_1__HolderDOB": $("#MedicareInsurances_1__HolderDOB").val(),
                "Condition_Is_PhysicalTherephyBefore": Is_PhysicalTherephyBefore,
                "Condition_IsSeenByHomeHealthAgency": IsSeenByHomeHealthAgency,
                "Patient_Employer_Name": $("#Patient_Employer_Name").val(),
                "Patient_Employer_Phone": $("#Patient_Employer_Phone").val(),
                "Condition_Insurance_Adjustor_Name": $("#Condition_Insurance_Adjustor_Name").val(),
                "Condition_Insurance_Adjustor_Phone": $("#Condition_Insurance_Adjustor_Phone").val(),
                "Condition_WhoseFaultAccident": $("#Condition_WhoseFaultAccident").val(),
                "Condition_NameOfAutoInsurance": $("#Condition_NameOfAutoInsurance").val(),
                "Condition_AutoInsurancePhone": $("#Condition_AutoInsurancePhone").val(),
                "Condition_AutoInsuranceClaimNo": $("#Condition_AutoInsuranceClaimNo").val(),
                "Condition_Attorney_Name": $("#Condition_Attorney_Name").val(),
                "Condition_Date_Of_Accident": $("#Condition_Date_Of_Accident").val(),
                "Condition_StoreContactPerson": $("#Condition_StoreContactPerson").val(),
                "Condition_StorePhoneNo": $("#Condition_StorePhoneNo").val(),
                "OutNetworkInsurances_0__PolicyNumber": $("#OutNetworkInsurances_0__PolicyNumber").val(),
                "OutNetworkInsurances_0__GroupNumber": $("#OutNetworkInsurances_0__GroupNumber").val(),
                "OutNetworkInsurances_0__HolderName": $("#OutNetworkInsurances_0__HolderName").val(),
                "OutNetworkInsurances_0__HolderDOB": $("#OutNetworkInsurances_0__HolderDOB").val(),
                "OutNetworkInsurances_0__ServiceProviderPhone": $("#OutNetworkInsurances_0__ServiceProviderPhone").val(),
                "OutNetworkInsurances_0__Deductible": Deductible,
                "OutNetworkInsurances_0__CoInsurance": $("#OutNetworkInsurances_0__CoInsurance").val(),
                "OutNetworkInsurances_0__CoPay": $("#OutNetworkInsurances_0__CoPay").val(),
                "Condition_IsPaperworkViaEmail": IsPaperworkViaEmail,
                "PatientUser_Email": $("#PatientUser_Email1").val(),
                "TempID": $("#hdnTempID").val(),
                "DivID": $("#hdnDivID").val(),
                "KareoID": $("#hdnKareo").val()
            };
            $.ajax({
                type: 'POST',
                url: "@Url.Action("SaveTempData", "PatientActivation")",
                data: JSON.stringify(_Patient),
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (data) {
                    if (data.success == 0) {
                        alert(data.message);
                    }
                }
            });
        }
    });
    //Parikshit_END_22122017
</script>
@*PARIKSHIT_START_22122017*@
<!-- The Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog  modal-lg">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <input type="button" class="close" value="&times;" />
                <h2>Search for Existing Patient</h2>
            </div>
            <div class="modal-body">
                <p>Firstname:<span style="color:red;">*</span> <input type="text" id="txtFName" name="txtFName" size="10" />&nbsp;&nbsp;&nbsp;Lastname:<span style="color:red;">*</span> <input type="text" id="txtLName" name="txtLName" size="10" />&nbsp;&nbsp;&nbsp;DOB:<span style="color:red;">*</span> <input type="text" id="txtDOB" name="txtDOB" placeholder="MM/dd/yyyy" size="10" maxlength="10" /></p>
                <p>&nbsp;&nbsp;&nbsp;</p>
                <p><input type="button" id="btnSearch" name="btnSearch" value="Search Patient" class="btn btn-primary btn-lg" /></p>
                <p><div id="dvErr" style="color:red;"></div></p>
            </div>
            <div class="modal-footer">
                <h3>Advanced Physical Therapy</h3>
            </div>
        </div>
    </div>
</div>

<div id="myResult" class="modal fade" role="dialog">
    <div class="modal-dialog  modal-lg">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <input type="button" class="close" value="&times;" />
                <h2>List of Existing Patient</h2>
            </div>
            <div class="modal-body" id="dvList">
            </div>
            <div class="modal-footer">
                <h3>Advanced Physical Therapy</h3>
            </div>
        </div>
    </div>
</div>
<script>
    $('#txtDoctorName').on("keypress", function (e) {
        //alert(11);
        //$("#txtDoctorNameValidatinMsg").hide();
        if (e.keyCode == 13) {
            var DoctorFirstName = $("#txtDoctorName").val();
            var DoctorFirstNamesplit = DoctorFirstName.split(" ");
            if (DoctorFirstNamesplit.length > 1 && DoctorFirstNamesplit.length < 3) {
                $("#txtDoctorFirstName").val(DoctorFirstNamesplit[0]);
                $("#txtDoctorLastName").val(DoctorFirstNamesplit[1]);
            }
            else if (DoctorFirstNamesplit.length > 1 && DoctorFirstNamesplit.length >= 3) {
                $("#txtDoctorFirstName").val(DoctorFirstNamesplit[0]);
                $("#txtDoctorLastName").val(DoctorFirstNamesplit[1] + " " + DoctorFirstNamesplit[2]);
            }
            else {
                $("#txtDoctorFirstName").val($("#txtDoctorName").val());
                $("#txtDoctorLastName").val("");
            }
            fnShowDoctorSearch();
            $("#btnTo").click();
            //$("#txtDoctorFirstName").val($("#txtDoctorName").val());
            $("#txtDoctorName").val("");
            $("#txtDoctorNameValidatinMsg").hide();
            //return false; // prevent the button click from happening
        }
    });
    $(document).on("click", ".DoctorSearchModal", function () {
        if ($("#txtDoctorName").val() != "") {
            var DoctorFirstName = $("#txtDoctorName").val();
            var DoctorFirstNamesplit = DoctorFirstName.split(" ");
            if (DoctorFirstNamesplit.length > 1 && DoctorFirstNamesplit.length < 3) {
                $("#txtDoctorFirstName").val(DoctorFirstNamesplit[0]);
                $("#txtDoctorLastName").val(DoctorFirstNamesplit[1]);
            }
            else if (DoctorFirstNamesplit.length > 1 && DoctorFirstNamesplit.length >= 3) {
                $("#txtDoctorFirstName").val(DoctorFirstNamesplit[0]);
                $("#txtDoctorLastName").val(DoctorFirstNamesplit[1] + " " + DoctorFirstNamesplit[2]);
            }
            else {
                $("#txtDoctorFirstName").val($("#txtDoctorName").val());
                $("#txtDoctorLastName").val("");
            }
            //fnShowDoctorSearch();
            $("#btnTo").click();
            //$("#txtDoctorFirstName").val($("#txtDoctorName").val());
            $("#txtDoctorName").val("");
        }

        $('#btnDoctorSave').hide();
        $('#headingAddDoctor').hide();
        $('#CreateNewDoctor').hide();

        $('#btnDoctorSearch').show();
        $('#headingSearch').show();
        $('#searchDoctor').show();

        $("#btnAddNewDoctor").hide();
    });

</script>
<script>
    $(function () {
        $('#txtDOB').bind('keyup', 'keydown', function (event) {
            var inputLength = event.target.value.length;
            if (inputLength === 2 || inputLength === 5) {
                var thisVal = event.target.value;
                thisVal += '/';
                $(event.target).val(thisVal);
            }
        })
    });

    // When the user clicks on <span> (x), close the modal
    $(document).on('click', '.close', function () {
        $('#myModal').modal('hide');
        $('#myResult').modal('hide');
    });

    $(document).on('click', '#btnSearch', function () {

        $('#loadforscheduleapp').show();
        if (($('#txtFName').val() != "") || ($('#txtLName').val() != "") || ($('#txtDOB').val() != "")) {
                    var _Patient = {

                        "Patient_FirstName": $("#txtFName").val(),
                        "Patient_LastName": $("#txtLName").val(),
                        "Patient_DOB": $("#txtDOB").val()
                    };
                    $.ajax({
                        type: 'POST',
                        url: "@Url.Action("CheckKareoData", "PatientActivation")",
                        data: JSON.stringify(_Patient),
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        success: function (data) {
                            //alert(data);
                            if (data.success == 0) {
                                $("#dvErr").text(data.message);
                                $('#loadforscheduleapp').hide();
                            }
                            else if (data.success == 1) {
                                var LiTempID = data.KareoPatientID;
                                $('#hdnKareo').val(LiTempID);
                                $.ajax({
                                    type: 'POST',
                                    url: "@Url.Action("PutSessionKID", "PatientActivation")",
                                    data: { TempID: LiTempID },
                                    success: function (sdata) {
                                        if (sdata.success == 1) {
                                        }
                                    }
                                });
                                $.ajax({
                                    type: 'POST',
                                    url: "@Url.Action("CheckKareoRecord", "PatientActivation")",
                                    data: { TempID: LiTempID },
                                    success: function (cdata) {
                                        if (cdata.success == 1) {
                                            $.ajax({
                                                type: 'POST',
                                                url: "@Url.Action("PutSessionKID", "PatientActivation")",
                                                data: { TempID: LiTempID },
                                                success: function (kdata) {
                                                    if (kdata.success == 1) {
                                                    }
                                                }
                                            });
                                            $("#Patient_FirstName").val(data.FirstName);
                                            $("#Patient_LastName").val(data.LastName);
                                            $("#Patient_AddressLine1").val(data.Addr1);
                                            $("#Patient_AddressLine2").val(data.Addr2);
                                            $("#Patient_City").val(data.City);
                                            $("#Patient_State").val(9);
                                            $("#Patient_ZipCode").val(data.Zip);
                                            $("#month").val(("0" + (new Date(data.DOB).getMonth() + 1)).slice(-2));
                                            $("#date").val(new Date(data.DOB).getDate());
                                            $("#Year").val(new Date(data.DOB).getFullYear());
                                            $("#Patient_ReferralSource").find("option:contains('" + data.ReferralSource + "')").each(function () {
                                                $(this).attr("selected", "selected");
                                            });
                                            $("#txtDoctorName").val(data.PrimaryCare);
                                            $("#MedicareInsurances_0__PolicyNumber").val(data.PolicyNumber);

                                            if (data.MobilePhone != "") {
                                                $("input[name='rbPhone'][value=1]").attr('checked', 'checked');
                                                $("#txtMobNo").val(data.MobilePhone);
                                            }
                                            else {
                                                if (data.HomePhone != "") {
                                                    $("input[name='rbPhone'][value=2]").attr('checked', 'checked');
                                                    $("#txtMobNo").val(data.HomePhone);
                                                }
                                                else {
                                                    $("input[name='rbPhone'][value=3]").attr('checked', 'checked');
                                                    $("#txtMobNo").val(data.WorkPhone);
                                                }
                                            }
                                            $('#myModal').modal('hide');
                                            $('#loadforscheduleapp').hide();
                                        }
                                        else {
                                            if (cdata.message == '') {
                                                $("#Patient_FirstName").val(data.FirstName);
                                                $("#Patient_LastName").val(data.LastName);
                                                $("#Patient_AddressLine1").val(data.Addr1);
                                                $("#Patient_AddressLine2").val(data.Addr2);
                                                $("#Patient_City").val(data.City);
                                                $("#Patient_State").val(9);
                                                $("#Patient_ZipCode").val(data.Zip);
                                                $("#month").val(("0" + (new Date(data.DOB).getMonth() + 1)).slice(-2));
                                                $("#date").val(new Date(data.DOB).getDate());
                                                $("#Year").val(new Date(data.DOB).getFullYear());
                                                $("#Patient_ReferralSource").find("option:contains('" + data.ReferralSource + "')").each(function () {
                                                    $(this).attr("selected", "selected");
                                                });
                                                $("#txtDoctorName").val(data.PrimaryCare);
                                                $("#MedicareInsurances_0__PolicyNumber").val(data.PolicyNumber);

                                                if (data.MobilePhone != "") {
                                                    $("input[name='rbPhone'][value=1]").attr('checked', 'checked');
                                                    $("#txtMobNo").val(data.MobilePhone);
                                                }
                                                else {
                                                    if (data.HomePhone != "") {
                                                        $("input[name='rbPhone'][value=2]").attr('checked', 'checked');
                                                        $("#txtMobNo").val(data.HomePhone);
                                                    }
                                                    else {
                                                        $("input[name='rbPhone'][value=3]").attr('checked', 'checked');
                                                        $("#txtMobNo").val(data.WorkPhone);
                                                    }
                                                }
                                                $('#myModal').modal('hide');
                                                $('#loadforscheduleapp').hide();
                                            }
                                            else {
                                                $("#dvErr").text(data.message);
                                                $('#loadforscheduleapp').hide();
                                            }
                                        }
                                    }
                                });
                            }
                            else {
                                //$.each(data.FirstNameList, function (index, value) {
                                //    alert(index + ': ' + value);
                                //});
                                //alert(data.PatientListData);
                                $('#dvList').html(data.PatientListData);
                                $('#myModal').modal('hide');
                                $('#myResult').modal('show');

                                $('#loadforscheduleapp').hide();
                            }
                        }
                    });
                }
                else {
                    alert('Please enter atleast one field !!');
                    $('#loadforscheduleapp').hide();
                }            
        return false;
    });

    function RowClick(iRow) {
        $('#loadforscheduleapp').show();
        var LiTempID = $('#hdnKPI_' + iRow).val();
        $('#hdnKareo').val(LiTempID);
        $.ajax({
            type: 'POST',
            url: "@Url.Action("PutSessionKID", "PatientActivation")",
            data: { TempID: LiTempID },
            success: function (kdata) {
                if (kdata.success == 1) {
                }
            }
        });
        $.ajax({
            type: 'POST',
            url: "@Url.Action("CheckKareoRecord", "PatientActivation")",
            data: { TempID: LiTempID },
            success: function (data) {
                if (data.success == 1) {
                    $.ajax({
                        type: 'POST',
                        url: "@Url.Action("PutSessionKID", "PatientActivation")",
                        data: { TempID: LiTempID },
                        success: function (kdata) {
                            if (kdata.success == 1) {
                            }
                        }
                    });
                    $("#Patient_FirstName").val($('#tdF_' + iRow).text());
                    $("#Patient_LastName").val($('#tdL_' + iRow).text());
                    $("#Patient_AddressLine1").val($('#hdnA1_' + iRow).val());
                    $("#Patient_AddressLine2").val($('#hdnA2_' + iRow).val());
                    $("#Patient_City").val($('#hdnC_' + iRow).val());
                    $("#Patient_State").val($('#hdnS_' + iRow).val());
                    $("#Patient_ZipCode").val($('#hdnZ_' + iRow).val());
                    $("#month").val(("0" + (new Date($('#tdD_' + iRow).text()).getMonth() + 1)).slice(-2));
                    $("#date").val(new Date($('#tdD_' + iRow).text()).getDate());
                    $("#Year").val(new Date($('#tdD_' + iRow).text()).getFullYear());

                    $("#Patient_ReferralSource").find("option:contains('" + $('#hdnRS_' + iRow).val() + "')").each(function () {
                        $(this).attr("selected", "selected");
                    });
                    $("#txtDoctorName").val($('#hdnPC_' + iRow).val());
                    $("#MedicareInsurances_0__PolicyNumber").val($('#hdnPON_' + iRow).val());

                    if ($('#hdnMP_' + iRow).val() != "") {
                        $("input[name='rbPhone'][value=1]").attr('checked', 'checked');
                        $("#txtMobNo").val($('#hdnMP_' + iRow).val());
                    }
                    else {
                        if ($('#hdnHP_' + iRow).val() != "") {
                            $("input[name='rbPhone'][value=2]").attr('checked', 'checked');
                            $("#txtMobNo").val($('#hdnHP_' + iRow).val());
                        }
                        else {
                            $("input[name='rbPhone'][value=3]").attr('checked', 'checked');
                            $("#txtMobNo").val($('#hdnWP_' + iRow).val());
                        }
                    }
                    $('#myResult').modal('hide');
                    $('#loadforscheduleapp').hide();
                }
                else {
                    if (data.message == '') {
                        $("#Patient_FirstName").val($('#tdF_' + iRow).text());
                        $("#Patient_LastName").val($('#tdL_' + iRow).text());
                        $("#Patient_AddressLine1").val($('#hdnA1_' + iRow).val());
                        $("#Patient_AddressLine2").val($('#hdnA2_' + iRow).val());
                        $("#Patient_City").val($('#hdnC_' + iRow).val());
                        $("#Patient_State").val($('#hdnS_' + iRow).val());
                        $("#Patient_ZipCode").val($('#hdnZ_' + iRow).val());
                        $("#month").val(("0" + (new Date($('#tdD_' + iRow).text()).getMonth() + 1)).slice(-2));
                        $("#date").val(new Date($('#tdD_' + iRow).text()).getDate());
                        $("#Year").val(new Date($('#tdD_' + iRow).text()).getFullYear());

                        $("#Patient_ReferralSource").find("option:contains('" + $('#hdnRS_' + iRow).val() + "')").each(function () {
                            $(this).attr("selected", "selected");
                        });
                        $("#txtDoctorName").val($('#hdnPC_' + iRow).val());
                        $("#MedicareInsurances_0__PolicyNumber").val($('#hdnPON_' + iRow).val());

                        if ($('#hdnMP_' + iRow).val() != "") {
                            $("input[name='rbPhone'][value=1]").attr('checked', 'checked');
                            $("#txtMobNo").val($('#hdnMP_' + iRow).val());
                        }
                        else {
                            if ($('#hdnHP_' + iRow).val() != "") {
                                $("input[name='rbPhone'][value=2]").attr('checked', 'checked');
                                $("#txtMobNo").val($('#hdnHP_' + iRow).val());
                            }
                            else {
                                $("input[name='rbPhone'][value=3]").attr('checked', 'checked');
                                $("#txtMobNo").val($('#hdnWP_' + iRow).val());
                            }
                        }
                        $('#myResult').modal('hide');
                        $('#loadforscheduleapp').hide();
                    }
                    else {
                        alert(data.message);
                        $('#loadforscheduleapp').hide();
                    }
                }
            }
        });
    }
</script>
@*PARIKSHIT_END_22122017*@