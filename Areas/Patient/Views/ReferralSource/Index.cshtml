@model IEnumerable<DataLayer.Models.tblMReferralSource>
@using DataLayer;
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}
<style>
    .SortHeader {
        color: #fff;
    }

    .sortorderasc {
        color: black;
    }

    .sortorderdesc {
        color: green;
    }

    .searchsec {
        width: 350px;
    }
</style>
<center><h2 style="margin-top:20px;">Referral Source List</h2></center>
@*<h2>Index</h2>*@

<section class="bodyinner2">
    <div>
        <p class="pull-right">
            @Html.ActionLink("Create New Record", "Create", null, new { @class = "btn btn-primary" })
        </p>
        @using (Html.BeginForm("Index", "ReferralSource", FormMethod.Get))
        {
            <div class="searchsec">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search here ..." })
                <button><i class="fa fa-search" aria-hidden="true"></i></button>
                <div class="clearfix"></div>
            </div>
        }
        <div class="clearfix"></div>
    </div>

    <div>
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>

                        <th>
                            @{ var classname = "botharrow";}
                            @if ((ViewBag.CurrentSort == "Name" && ((ViewBag.SortDirection == true || ViewBag.SortDirection == null) && ViewBag.PageLoad != null)))
                            {
                                classname = "bottarrow";
                            }
                            else if ((ViewBag.CurrentSort == "Name" && ViewBag.SortDirection == false))
                            {
                                classname = "toparrow";
                            }
                            @Html.ActionLink("Name", "Index", new { sortOrder = "Name", CurrentSort = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, IsAsc = ViewBag.SortDirection }, new { @class = "SortHeader " + classname })

                        </th>
                        @*<th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>*@

                        <th>
                            @Html.DisplayNameFor(model => model.Related_query)
                        </th>

                   

                        <th></th>
                        <th></th>
                    </tr>

                </thead>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Related_query)
                        </td>
                      
                          <td>
                        <a href="@Url.Action("Edit", "ReferralSource", new { id = item.ReferralSource_Id })">
                            <i class="fa fa-edit" aria-hidden="true"></i>
                        </a>
                              &nbsp;&nbsp;
                              <a href="@Url.Action("Delete", "ReferralSource", new { id = item.ReferralSource_Id })">
                                  <i class="fa fa-trash" aria-hidden="true"></i>
                              </a>
                        </td>
                      
                        <td>
                            <a href="@Url.Action("Details", "ReferralSource", new { id = item.ReferralSource_Id })">
                                <i class="fa fa-eye" aria-hidden="true"></i>
                            </a>
                            </td>
</tr>
                }

            </table>

        </div>
        @*<div>
            <br />
            <div class="pull-left">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
            @{
                bool? direction = ViewBag.SortDirection;
                if (direction == null) { direction = false; }
            }
            @Html.PagedListPager(Model, page => Url.Action("Index",
                      new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, CurrentSort = ViewBag.CurrentSort, IsAsc = !direction }))
        </div>*@
    </div>

</section>

<script>
    function fnShowDetail(Doctor_Id) {
        var url = "@Url.Action("Doctor", "Doctor", new { Area = "Patient" })" + "?id=" + Doctor_Id;
        //fnShowPopupForDetail(url);
        popupwindow(url, 'Doctor', 1000, 800);
    }
</script>










