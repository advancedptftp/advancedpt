@model DataLayer.Models.tblMPatSchdEmpAppmntType
@using DataLayer
@{
    ViewBag.Title = "Create";
    var _SStart = Model.ShiftStart;
    var _SEnd = Model.ShiftEnd;
    var _LunchSt = Model.LunchStart;
    var _LunchE = Model.LunchEnd;
    var _ClientMinute = Model.MassageClientMinute;
}

<!DOCTYPE html>

<style>
    #slider-range, #SlideMax {
        width: 400px;
    }

    #slider-range, #time, #SlideMax, table {
        margin: 10px;
        display: block;
    }

    #slider-range1, #SlideMax1 {
        width: 400px;
    }

    #slider-range1, #time1, #SlideMax1, table {
        margin: 10px;
        display: block;
    }
</style>

<section class="bodyinner">
    <div class="container">
        <div class="report-form clearfix">
            <h2 class="text-center">Resource Setup Details</h2>
            <br /><br />
            @using (Html.BeginForm("EmpAppTypeDetails", "Resource", FormMethod.Post, new { name = "ResourceAppintmentType", id = "ResourceAppintmentType" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                if (ViewBag.Error != null)
                {
                    @Html.Raw(ViewBag.Error)
                }
                <div class="row">
                    @Html.HiddenFor(e => e.EmpAppmntType_Id)
                    @Html.HiddenFor(e => e.EmployeeID)
                    @Html.HiddenFor(e => e.AppointmentTypes)
                    @Html.HiddenFor(e => e.Location_ID)
                    @Html.HiddenFor(e => e.Emp_Type)
                    @Html.HiddenFor(e => e.IsTechCPT)
                    @Html.HiddenFor(e => e.MassageClientMinute)
                    @Html.HiddenFor(e => e.IsTechLMT)
                    @Html.HiddenFor(e => e.PersonalTrainingClient)
                    <div class="col-sm-12 col-md-12 form-group">
                        <div class="col-sm-12 form-group">
                            <div class="col-sm-6 form-group">
                                @Html.Label("Location")
                                @Html.DropDownListFor(e => e.Location_ID, (SelectList)ViewBag.Location, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("Employee Type")
                                @Html.DropDownListFor(m => m.Emp_Type, from DataLayer.EmployeeType state in Enum.GetValues(typeof(DataLayer.EmployeeType))
                                                                               select new SelectListItem() { Text = state.ToCustomString(), Value = ((int)state).ToCustomString() }, new { @class = "form-control", @disabled = "disabled" })
                            </div>

                            <div class="col-sm-6 form-group">
                                <div class="headrightcont" id="PT"></div>
                                <div class="headrightcont" id="PTA"></div>
                                <div class="headrightcont" id="LMT"></div>
                                <div class="headrightcont" id="PersonalTrainerOnly"></div>
                                @Html.Label("Employee Name")
                                @Html.DropDownListFor(e => e.EmployeeID, (SelectList)ViewBag.Resource1, new { @class = "form-control", @disabled = "disabled" })
                                @*@Html.DropDownList("Resource1")*@
                            </div>
                           

                        <div class="col-sm-12 col-md-12 form-group">
                            <div class="col-sm-6 form-group">
                                @Html.Label("Working Time ")
                                <div id="slider-range"></div>
                                <span id="SlideMax"></span>
                                <br />
                                <div class="col-sm-6 form-group">
                                    @Html.TextBoxFor(m => m.ShiftStart, new { @class = "form-control CustomTimeFormat", @onchange = "TestOnTextChange(this);" })
                                </div>
                                <div class="col-sm-6 form-group">
                                    @Html.TextBoxFor(m => m.ShiftEnd, new { @class = "form-control CustomTimeFormat", @onchange = "TestOnTextChange(this);" })
                                </div>
                                @*<div class="col-sm-6 form-group">

                    <input type="submit" name="scheduleSubmit" value="Submit" id="scheduleSubmit" class="ui-button ui-state-default ui-corner-all" />
                </div>*@
                            </div>
                            <div class="col-sm-6 form-group">
                                @Html.Label("Lunch Break ")
                                <div id="slider-range1"></div>
                                <span id="SlideMax1"></span>
                                <br />
                                <div class="col-sm-6 form-group">
                                    @Html.TextBoxFor(m => m.LunchStart, new { @class = "form-control CustomTimeFormat", @onchange = "TestOnTextChange(this);" })
                                </div>
                                <div class="col-sm-6 form-group">
                                    @Html.TextBoxFor(m => m.LunchEnd, new { @class = "form-control CustomTimeFormat", @onchange = "TestOnTextChange(this);" })
                                </div>
                            </div>
                        </div>




                            <div class="col-sm-12 col-md-12 form-group">
                                <div id="Massage">
                                    <div class="col-sm-6 form-group">
                                        <div class="headrightcont">
                                            <label>Is the tech a Licensed Massage Therapist?</label><br />
                                            <label class="radio-inline">@Html.RadioButtonFor(m => m.IsTechLMT, 1, new { @disabled = "disabled" })Yes</label>
                                            <label class="radio-inline">@Html.RadioButtonFor(m => m.IsTechLMT, 0, new { @disabled = "disabled" })No</label>
                                            <span id="TechLMT" class="validateMsg"></span>
                                        </div>

                                    </div>
                                    <div class="col-sm-6 form-group" id="minutes1">

                                        <label>How many minutes of the <span id="minutes"></span> minute day would you like for this LMT to have Massage Only clients?</label>
                                        @Html.TextBoxFor(m => m.MassageClientMinute, new { @class = "form-control", @style = "width:100px;", @onchange = "TestOnTextChange(this);", @disabled = "disabled" })
                                        <span id="MassageC" class="validateMsg"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12 col-md-12 form-group">
                                <div id="Personal_Trainer">
                                    <div class="col-sm-6 form-group">
                                        <div class="headrightcont">
                                            <label>Is the tech a Certified Personal Trainer?</label><br />
                                            <label class="radio-inline">@Html.RadioButtonFor(m => m.IsTechCPT, 1, new { @disabled = "disabled" })Yes</label>
                                            <label class="radio-inline">@Html.RadioButtonFor(m => m.IsTechCPT, 0, new { @disabled = "disabled" })No</label>
                                        </div>

                                    </div>
                                    <div class="col-sm-6 form-group" id="minutes2">

                                        <label>How many minutes of the <span id="Client"></span> minute day would you like for this Trainer to have Personal Training clients? </label>
                                        @Html.TextBoxFor(m => m.PersonalTrainingClient, new { @class = "form-control", @style = "width:100px;", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12 col-md-12 form-group">
                                <div class="col-sm-6 form-group">
                                    <label>
                                        What Appointment Types should be allowed for
                                        the P.T. portion of this Resource?
                                    </label>
                                    <br />
                                    @foreach (var item in ViewBag.AppointmentType)
                                    {
                                        <input id="chk@(item.Value)"
                                               type="checkbox"
                                               class="chk"
                                               value="@item.Value"
                                               checked="@item.Selected"
                                               name="@item.Text"
                                               disabled="disabled" />
                                        @item.Text <br />
                                    }

                                </div>
                            </div>

                            <div class="col-sm-12 col-md-12 form-group">
                                <div class="row">
                                    <div class="col-sm-6 form-group">
                                        @Html.Label("Is Active")
                                        @Html.CheckBoxFor(model => model.IsActive, new { @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <p>@Html.ActionLink("Back to List", "EmployeeAppointment")</p>
            }


            <div class="clearfix"></div>
        </div>
</section>
<script>
    $(document).ready(function () {

        //fnGetRelatedQuestion();
        //fnGetRelatedQuestion1();
        $("#Personal_Trainer").hide();
        //$("#tblMUser_Password").hide();
        $("#Massage").hide();

        //fnGetEmployee();
        debugger;
        var selected = $("#AppointmentTypes").val();
        //alert('selected =' +selected);
        if (selected) {
            var chkArray = selected.split(',');
            for (var i = 0; i < chkArray.length; i++) {
                $('input#chk' + chkArray[i]).attr('checked', 'true');
            }
        }
        var selectedLMT = $("#IsTechLMT").val();
        if (selectedLMT == "1") {
            $("#Massage").show();
        }
        var selectedPT = $("#IsTechCPT").val();
        if (selectedPT == "1") {
            $("#Personal_Trainer").show();
        }
        //var selected1 = $("#Resource2AppointmentType").val();

        //if (selected1) {
        //    var chkArray = selected1.split(',');
        //    for (var i = 0; i < chkArray.length; i++) {
        //        $('input#chk1' + chkArray[i]).attr('checked', 'true');
        //    }
        //}









        if ($("#ResourceType").val() == 2) {

            document.getElementById("TECH").innerHTML = "Select tech";
            document.getElementById("PT").innerHTML = "Select P.T";
            $("#TECH").show();
            $("#PT").show();
            $("#Resource1").show();
            $("#Resource2").show();
            $("#Appointment").show();
            $("#Massage").show();
            $("#PatientVisit").hide();

        }
        else if ($("#ResourceType").val() == 1) {

            document.getElementById("PT").innerHTML = "Select P.T";
            $("#PT").show();
            $("#Resource1").show();
            $("#Resource2").hide();
            $("#Appointment").hide();
            $("#Personal_Trainer").hide();
            $("#PatientVisit").show();

        }
        else if ($("#ResourceType").val() == 3) {

            document.getElementById("PTA").innerHTML = "Select P.T.A";
            $("#PTA").show();
            $("#Resource1").show();
            $("#Resource2").hide();
            $("#Appointment").hide();
            $("#PatientVisit").hide();
        }
        else if ($("#ResourceType").val() == 4) {

            document.getElementById("PTA").innerHTML = "Select P.T.A";
            $("#PTA").show();
            document.getElementById("TECH").innerHTML = "Select tech";
            $("#TECH").show();
            $("#Resource1").show();
            $("#Resource2").show();
            $("#Appointment").show();
            $("#Massage").show();
            $("#PatientVisit").hide();
        }
        else if ($("#ResourceType").val() == 5) {

            document.getElementById("LMT").innerHTML = "Select L.M.T";
            $("#LMT").show();
            $("#Resource1").show();
            $("#Resource2").hide();
            $("#Appointment").hide();
            $("#PatientVisit").hide();
        }
        else if ($("#ResourceType").val() == 6) {

            document.getElementById("PersonalTrainerOnly").innerHTML = "Select Personal Trainer Only";
            $("#PersonalTrainerOnly").show();
            $("#Resource1").show();
            $("#Appointment").hide();
            $("#Resource2").hide();
            $("#PatientVisit").hide();
        }



        var Start = '@_SStart';
        $('#ShiftStart').val(Start);

        var End = '@_SEnd';
        $('#ShiftEnd').val(End);

        var LunchSt = '@_LunchSt';
        $('#LunchStart').val(LunchSt);

        var LunchE = '@_LunchE';
        $('#LunchEnd').val(LunchE);

        $("#slider-range1").slider({
            range: true, min: 0, max: 1440, values: [840, 1020], step: 1, slide: SetLunchSlideTime, change: checkMax1
        });


    });
</script>
<script>
    function fnGetEmployee() {
        $('#Resource1').html("");
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetEmployee", "Resource")',
            datatype: "Json",
            data: { EmpType: $('#Emp_Type').val(), LocationID: $('#Location_ID').val()},
            success: function (data) {
               // alert(data);
                var items = '<option value="0">Select a Employee name</option>';
                $.each(data, function (i, Related_query) {

                    items += "<option value='" + Related_query.id + "'>" + Related_query.firstname + ' ' + Related_query.Last_Name + "</option>";

                });
                $('#Resource1').html(items);
                $('#Resource1').show();
                $('#div_resource1').show();
                $("#Massage").show();
                $("#lblAptType").text("What Appointment Types should be allowed for the  " + $("#Emp_Type option:selected").text() + " portion of this Resource?");

            }


        });
    }
</script>
<script>
    var startTime;
    var endTime;
    var val0;
    var val1;
    var val3;
    var val4;
    $("#slider-range").slider({
        range: true, min: 0, max: 1440, values: [540, 1020], step: 1, slide: slideTime, change: checkMax
    });

    function SetLunchTime() {
        // alert('inside SetLunchTime');

        //val0 = $("#slider-range1").slider("values", 0);
        //val1 = $("#slider-range").slider("values", 1);
        //minutes0 = parseInt(val0 % 60, 10);
        //hours0 = parseInt(val0 / 60 % 24, 10);
        //minutes1 = parseInt(val1 % 60, 10);
        //hours1 = parseInt(val1 / 60 % 24, 10);
        //startTime1 = getTime1(hours0, minutes0);
        //endTime1 = getTime1(hours1, minutes1);
        //$("#ModifiedOn").val(startTime1 + ' - ' + endTime1);

        //alert(val1);
        $("#slider-range1").slider({
            range: true, min: val0, max: val1, values: [540, 1020], step: 1, slide: SetLunchSlideTime, change: checkMax1
        });
    }

    function SetLunchSlideTime() {
        val3 = $("#slider-range1").slider("values", 0),
        val4 = $("#slider-range1").slider("values", 1),
          minutes0 = parseInt(val3 % 60, 10),
          hours0 = parseInt(val3 / 60 % 24, 10),
          minutes1 = parseInt(val4 % 60, 10),
          hours1 = parseInt(val4 / 60 % 24, 10);
        startTime1 = getTime1(hours0, minutes0);
        endTime1 = getTime1(hours1, minutes1);
        star1 = getTime3(hours0, minutes0);
        end1 = getTime3(hours1, minutes1);
        //$("#tblMEmployee_Address1").val(startTime1);
        //$("#tblMEmployee_Address2").val(endTime1);

        $("#LunchStart").val(star1);
        $("#LunchEnd").val(end1);
        $("#LunchStart").attr('value', star1);
        $("#LunchEnd").attr('value', end1);


    }
    function TestOnTextChange(obj) {
        $('#' + obj.id).attr('value', $('#' + obj.id).val());
    }

    //$("#slider-range").change(function () {

    //    val0 = $("#slider-range").slider("values", 0);
    //    val1 = $("#slider-range").slider("values", 1);
    //    alert('val' + val0);

    //    var minutes0 = parseInt(val0 % 60, 10),
    //     hours0 = parseInt(val0 / 60 % 24, 10),
    //     minutes1 = parseInt(val1 % 60, 10),
    //     hours1 = parseInt(val1 / 60 % 24, 10);
    //    startTime = getTime(hours0, minutes0);
    //    endTime = getTime(hours1, minutes1);
    //    $("#time").val(startTime);
    //    $("#ModifiedBy").val(endTime);

    //    console.log(startTime);
    //    console.log(endTime);


    //});

    function slideTime(event, ui) {
        val0 = $("#slider-range").slider("values", 0);
        val1 = $("#slider-range").slider("values", 1);
        var minutes0 = parseInt(val0 % 60, 10),
         hours0 = parseInt(val0 / 60 % 24, 10),
         minutes1 = parseInt(val1 % 60, 10),
         hours1 = parseInt(val1 / 60 % 24, 10);
        startTime = getTime(hours0, minutes0);
        endTime = getTime(hours1, minutes1);
        start = getTime2(hours0, minutes0);
        end = getTime2(hours1, minutes1);
        //alert(startTime);
        //alert(endTime);
        $("#ShiftStart").val(start);
        $("#ShiftEnd").val(end);
        $("#LunchStart").val(start);
        $("#LunchEnd").val(end);
        $("#LunchStart").attr('value', start);
        $("#LunchEnd").attr('value', end);
        $("#ShiftStart").attr('value', start);
        $("#ShiftEnd").attr('value', end);
        //$("#tblMEmployee1_Address1").val(startTime);
        //$("#tblMEmployee1_Address2").val(endTime);
        //$("#tblMEmployee_Address1").val(startTime);
        //$("#tblMEmployee_Address2").val(endTime);

        SetLunchTime();
    }
    function getTime(hours, minutes) {
        var time = null;
        minutes = minutes + "";
        if (hours < 12) { time = "AM"; }
        else { time = "PM"; }
        if (hours == 0) { hours = 12; }
        if (hours > 12) { hours = hours - 12; }
        if (minutes.length == 1) { minutes = "0" + minutes; }
        var strhour = '';
        if (hours <= 9) strhour = '0' + hours;
        else strhour = hours;
        var strminute = '';
        if (minutes < 10) strminute = '0' + minutes;
        else strminute = minutes;
        return strhour + ":" + strminute + " " + time;
    }
    function getTime2(hours, minutes) {
        //var time = null;
        //minutes = minutes + "";
        //if (hours < 12) { time = "AM"; }
        //else { time = "PM"; }
        //if (hours == 0) { hours = 12; }
        //if (hours > 12) { hours = hours - 12; }
        //if (minutes.length == 1) { minutes = "0" + minutes; }
        var strhour = '';
        if (hours <= 9) strhour = '0' + hours;
        else strhour = hours;
        var strminute = '';
        if (minutes < 10) strminute = '0' + minutes;
        else strminute = minutes;
        return strhour + ":" + strminute;// + " " + time;
    }
    function checkMax() {
        var size = $("#slider-range").slider("values", 1) - $("#slider-range").slider("values", 0);
        if (size >= 1435) {
            $("#slider-range div")
                .addClass("ui-state-error")
                .removeClass("ui-widget-header");
            $("#scheduleSubmit")
                .attr("disabled", "disabled")
                .addClass("ui-state-disabled")
                .removeClass("ui-state-default");
            // $("#SlideMax").text("Cannot be more than 24 hours");
        }
        else {
            $("#slider-range div")
                .addClass("ui-widget-header")
                .removeClass("ui-state-error");
            $("#scheduleSubmit")
                .removeAttr("disabled")
                .addClass("ui-state-default")
                .removeClass("ui-state-disabled");
            $("#SlideMax").text("");
        }
    }

    slideTime();


    var startTime1;
    var endTime1;
    //$("#scheduleSubmit").on('click', function () {
    //    console.log(startTime);
    //    console.log(endTime);

    //    $("#slider-range1").slider({
    //        range: true, min: val0 , max: val1, values: [540, 1020], step: 5, slide: slideTime1, change: checkMax1
    //    });
    //});

    //$("#slider-range1").slider({
    //    range: true, min: val0, max: val1 + 5, values: [540, 1020], step: 5, slide: slideTime1, change: checkMax1
    //});


    //$(".ui-widget-header").bind("change", function (event, ui) {
    //    alert('ok');
    //});
    //$("#slider-range").on("change", ".ui-widget-header", function () {
    //    alert('ok');
    //});

    //function slideTime1(event, ui) {
    //    var val0 = $("#slider-range1").slider("values", 0),
    //        val1 = $("#slider-range1").slider("values", 1),
    //        minutes0 = parseInt(val0 % 60, 10),
    //        hours0 = parseInt(val0 / 60 % 24, 10),
    //        minutes1 = parseInt(val1 % 60, 10),
    //        hours1 = parseInt(val1 / 60 % 24, 10);
    //    startTime1 = getTime1(hours0, minutes0);
    //    endTime1 = getTime1(hours1, minutes1);
    //    $("#ModifiedOn").val(startTime1);
    //    $("#CreatedBy").val(endTime1);
    //}
    function getTime1(hours, minutes) {
        var time = null;
        minutes = minutes + "";
        if (hours < 12) { time = "AM"; }
        else { time = "PM"; }
        if (hours == 0) { hours = 12; }
        if (hours > 12) { hours = hours - 12; }
        if (minutes.length == 1) { minutes = "0" + minutes; }
        var strhour = '';
        if (hours <= 9) strhour = '0' + hours;
        else strhour = hours;
        var strminute = '';
        if (minutes < 10) strminute = '0' + minutes;
        else strminute = minutes;
        return strhour + ":" + strminute + " " + time;
    }
    function getTime3(hours, minutes) {
        //var time = null;
        //minutes = minutes + "";
        //if (hours < 12) { time = "AM"; }
        //else { time = "PM"; }
        //if (hours == 0) { hours = 12; }
        //if (hours > 12) { hours = hours - 12; }
        //if (minutes.length == 1) { minutes = "0" + minutes; }
        var strhour = '';
        if (hours <= 9) strhour = '0' + hours;
        else strhour = hours;
        var strminute = '';
        if (minutes < 10) strminute = '0' + minutes;
        else strminute = minutes;
        // return strhour + ":" + strminute + " " + time;
        return strhour + ":" + strminute;// + " " + time;
    }
    function checkMax1() {
        var size = $("#slider-range1").slider("values", startTime) - $("#slider-range1").slider("values", endTime);
        if (size >= 600) {
            $("#slider-range1 div")
                .addClass("ui-state-error")
                .removeClass("ui-widget-header");

            $("#SlideMax1").text("Cannot be more than 24 hours");
        }
        else {
            $("#slider-range1 div")
                .addClass("ui-widget-header")
                .removeClass("ui-state-error");

            $("#SlideMax1").text("");
        }
    }

    slideTime();






    $(function () {
        $("#Location").change(function () {
            //debugger;
            //fnGetRelatedQuestion();
            //fnGetRelatedQuestion1();
        });
        debugger;
        $("#Emp_Type").change(function () {
            fnGetEmployee();

        });
        //if (($("#ResourceType").val() = 1) ||( $("#ResourceType").val() = 3) ||($("#ResourceType").val() = 5) || ($("#ResourceType").val() = 6)) {
        //    $("#Resource1").change(function () {
        //        //var status = this.value;
        //        //alert('ok');
        //        fnGetRelatedQuestion2();
        //    });
        //}
        //else {
        //    $("#Resource2").change(function () {
        //        //var status = this.value;
        //        //alert('ok');
        //        fnGetRelatedQuestion2();
        //    });
        //}

    });
    $("input:radio[name='IsTechLMT']").change(function () {

        if ($("input:radio[name='IsTechLMT']:checked").val() == 1) {

            $("#minutes1").show();

            var WorkStartTime = $("#ShiftStart").val();
            var WorkEndTime = $("#ShiftEnd").val();

            var vWorkStartTime = WorkStartTime.split(':');
            var vWH = parseInt(vWorkStartTime[0]);
            var vWHToMin = vWH * 60;
            var WHTotalMin = vWHToMin + parseInt(vWorkStartTime[1]);


            var vWorkEndTime = WorkEndTime.split(':');
            var vWE = parseInt(vWorkEndTime[0]);
            var vWEToMin = vWE * 60;
            var WETotalMin = vWEToMin + parseInt(vWorkEndTime[1]);

            //alert(WHTotalMin);
            //alert(WETotalMin);


            var lunchStartTime = $("#LunchStart").val();
            var lunchEndTime = $("#LunchEnd").val();

            var vlunchStartTime = lunchStartTime.split(':');
            var vLH = parseInt(vlunchStartTime[0]);
            var vLHToMin = vLH * 60;
            var LHTotalMin = vLHToMin + parseInt(vlunchStartTime[1]);


            var vlunchEndTime = lunchEndTime.split(':');
            var vLE = parseInt(vlunchEndTime[0]);
            var vLEToMin = vLE * 60;
            var LETotalMin = vLEToMin + parseInt(vlunchEndTime[1]);

            //alert(LHTotalMin);
            //alert(LETotalMin);

            var hours = WETotalMin - WHTotalMin;
            var Lunchhours = LETotalMin - LHTotalMin;

            var totalhours = hours - Lunchhours;

            $("#minutes").text(totalhours);
            $("#Personal_Trainer").hide();
            $("#minutes2").hide();
            $("#minutes").attr('value', totalhours);
        }
        if ($("input:radio[name='IsTechLMT']:checked").val() == 0) {

            $("#Personal_Trainer").show();
            $("#minutes1").hide();

        }
    });
    $("input:radio[name='IsTechCPT']").change(function (
        ) {
        if ($("input:radio[name='IsTechCPT']:checked").val() == 1) {




            $("#minutes2").show();

            var WorkStartTime = $("#ShiftStart").val();
            var WorkEndTime = $("#ShiftEnd").val();

            var vWorkStartTime = WorkStartTime.split(':');
            var vWH = parseInt(vWorkStartTime[0]);
            var vWHToMin = vWH * 60;
            var WHTotalMin = vWHToMin + parseInt(vWorkStartTime[1]);


            var vWorkEndTime = WorkEndTime.split(':');
            var vWE = parseInt(vWorkEndTime[0]);
            var vWEToMin = vWE * 60;
            var WETotalMin = vWEToMin + parseInt(vWorkEndTime[1]);

            //alert(WHTotalMin);
            //alert(WETotalMin);


            var lunchStartTime = $("#LunchStart").val();
            var lunchEndTime = $("#LunchEnd").val();

            var vlunchStartTime = lunchStartTime.split(':');
            var vLH = parseInt(vlunchStartTime[0]);
            var vLHToMin = vLH * 60;
            var LHTotalMin = vLHToMin + parseInt(vlunchStartTime[1]);


            var vlunchEndTime = lunchEndTime.split(':');
            var vLE = parseInt(vlunchEndTime[0]);
            var vLEToMin = vLE * 60;
            var LETotalMin = vLEToMin + parseInt(vlunchEndTime[1]);

            //alert(LHTotalMin);
            //alert(LETotalMin);

            var hours = WETotalMin - WHTotalMin;
            var Lunchhours = LETotalMin - LHTotalMin;

            var totalhours = hours - Lunchhours;

            //alert(totalhours);
            $("#Client").text(totalhours);


        }
        if ($("input:radio[name='IsTechCPT']:checked").val() == 0) {


            $("#minutes2").hide();

        }
    });

</script>
