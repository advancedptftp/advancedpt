
@model PagedList.IPagedList<DataLayer.Models.tblMUserRole>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}
<style>
    .SortHeader {
        color: #fff;
    }

    .sortorderasc {
        color: black;
    }

    .sortorderdesc {
        color: green;
    }
</style>

<section class="bodyinner2">
   
    
    
   
    <div>
        <p class="pull-right">
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
        </p>
        @using (Html.BeginForm("Index", "UserRole", FormMethod.Get))
        {

            <div class="searchsec">

                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by User Role" })
                <button><i class="fa fa-search" aria-hidden="true"></i></button>
                <div class="clearfix"></div>
            </div>
        }
        <div class="clearfix"></div>
    </div>








    @*<div>
        <p class="pull-right">
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
        </p>
        @using (Html.BeginForm("Index", "UserRole", FormMethod.Get))
        {
            <div class="searchsec">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search here ..." })
                <button><i class="fa fa-search" aria-hidden="true"></i></button>
                <div class="clearfix"></div>
            </div>
        }
        <div class="clearfix"></div>
    </div>*@
    <div>
        <div class="table-responsive">

            
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>

                        <th>
                            @{ var classname = "botharrow";}
                            @if ((ViewBag.CurrentSort == "UserRole" && ((ViewBag.SortDirection == true || ViewBag.SortDirection == null) && ViewBag.PageLoad != null)))
                            {
                                classname = "bottarrow";
                            }
                            else if ((ViewBag.CurrentSort == "UserRole" && ViewBag.SortDirection == false))
                            {
                                classname = "toparrow";
                            }
                            @Html.ActionLink("User Role", "Index", new { sortOrder = "UserRole", CurrentSort = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, IsAsc = ViewBag.SortDirection }, new { @class = "SortHeader " + classname })

                        </th>
                        <th>
                            @{ var classname1 = "botharrow";}
                            @if ((ViewBag.CurrentSort == "Description" && ((ViewBag.SortDirection == true || ViewBag.SortDirection == null) && ViewBag.PageLoad != null)))
                            {
                                classname1 = "bottarrow";
                            }
                            else if ((ViewBag.CurrentSort == "Description" && ViewBag.SortDirection == false))
                            {
                                classname1 = "toparrow";
                            }
                            @Html.ActionLink("Description", "Index", new { sortOrder = "Description", CurrentSort = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, IsAsc = ViewBag.SortDirection }, new { @class = "SortHeader " + classname1 })
                            @*@Html.Label("Page Number")*@

                        </th>
                        <th>
                            @Html.Label("Is Super Admin")
                        </th>
                        <th></th>
                    </tr>

                </thead>
                
                
                
                
                
                
                
                
                @*<thead>
                    <tr>
                        <th>
                            @Html.Label("User Role")
                        </th>
                        <th>
                            @Html.DisplayName("Description")
                        </th>
                        <th>
                            @Html.Label("Is Super Admin")
                        </th>
                        <th></th>
                    </tr>
                </thead>*@
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserRole)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsSuperAdmin)
                            </td>
                            <td>


                                <a href="@Url.Action("Edit", "UserRole", new { id = item.UserRole_Id })">
                                    <i class="fa fa-edit" aria-hidden="true"></i>
                                </a>
                                &nbsp;&nbsp;
                                @*<a href="@Url.Action("Details", "UserRole", new { id = item.UserRole_Id })">
                                    <i class="fa fa-eye" aria-hidden="true"></i>
                                </a>&nbsp;&nbsp;*@




                                @if ((item.IsSuperAdmin != true) && (item.UserRole_Id != 99))
                                {
                                    <a href="@Url.Action("Delete", "UserRole", new { id = item.UserRole_Id })">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                    </a>

                                } &nbsp; &nbsp;
                                @if ((item.IsSuperAdmin != true) && (item.UserRole_Id != 99))
                                {
                                    @Html.ActionLink("Permission", "Permission", new { id = item.UserRole_Id }, new { @class = "btn btn-success" })
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
       
        <div>
            <br />
            @using (Html.BeginForm("Index", "UserRole", new { sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, CurrentSort = ViewBag.CurrentSort }, FormMethod.Post, new { @style = "float:left;width:80px;" }))
            {
                @Html.DropDownList("PageSize")
            }
            @{
                bool? direction = ViewBag.SortDirection;
                if (direction == null) { direction = false; }
            }
            <div class="pull-left" style=" padding:10px;">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>

            @Html.PagedListPager(Model, page => Url.Action("Index",
                      new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, CurrentSort = ViewBag.CurrentSort, IsAsc = !direction }))
        </div>
    </div>

</section>
<script>
    var test = '@ViewBag.CurrentFilter';
</script>
<script>
    $("#PageSize").addClass("form-control");
    $('#PageSize').on('change', function (event) {

        var form = $(event.target).parents('form');

        form.submit();
    });
</script>
