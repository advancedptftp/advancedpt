@model PagedList.IPagedList<DataLayer.Models.tblMVenderMaster>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}


<section class="bodyinner2">
    <div>
        <p class="pull-right">
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
        </p>
        @using (Html.BeginForm("Index", "Vendor", FormMethod.Get))
        {

            <div class="searchsec">

                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by Vendor Name,Company Name" })
                <button><i class="fa fa-search" aria-hidden="true"></i></button>
                <div class="clearfix"></div>
            </div>
        }
        <div class="clearfix"></div>
    </div>
    <div>
        <div class="table-responsive">
            <table class="table table-bordered table-striped">

                <thead>
                    <tr>

                        <th>
                            @{ var classname = "botharrow";}
                            @if ((ViewBag.CurrentSort == "VendorName" && ((ViewBag.SortDirection == true || ViewBag.SortDirection == null) && ViewBag.PageLoad != null)))
                            {
                                classname = "bottarrow";
                            }
                            else if ((ViewBag.CurrentSort == "VendorName" && ViewBag.SortDirection == false))
                            {
                                classname = "toparrow";
                            }
                            @Html.ActionLink("Vendor Name", "Index", new { sortOrder = "VendorName", CurrentSort = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, IsAsc = ViewBag.SortDirection }, new { @class = "SortHeader " + classname })

                        </th>
                        <th>
                            @{ var classname1 = "botharrow";}
                            @if ((ViewBag.CurrentSort == "CompanyName" && ((ViewBag.SortDirection == true || ViewBag.SortDirection == null) && ViewBag.PageLoad != null)))
                            {
                                classname1 = "bottarrow";
                            }
                            else if ((ViewBag.CurrentSort == "CompanyName" && ViewBag.SortDirection == false))
                            {
                                classname1 = "toparrow";
                            }
                            @Html.ActionLink("Company Name", "Index", new { sortOrder = "CompanyName", CurrentSort = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, IsAsc = ViewBag.SortDirection }, new { @class = "SortHeader " + classname1 })

                        </th>
                        <th>
                            @Html.DisplayName("Address")
                        </th>
                        <th>
                            @Html.DisplayName("City")
                        </th>
                        <th>
                            @Html.DisplayName("State")
                        </th>
                        <th>
                            @Html.DisplayName("Zip")
                        </th>
                        <th>
                            @Html.DisplayName("Phone")
                        </th>
                        <th>
                            @Html.DisplayName("Fax")
                        </th>
                        <th></th>
                    </tr>

                </thead>

               <tbody>
                    @{
                        int i = 0;

                        foreach (var item in Model)
                        {
                            <tr class=@(i % 2 == 0 ? "sky"  : "")>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vendor_Name)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Company_Name)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Street_Address)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.City)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.State)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ZIP_Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Phone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FAX)
                                </td>
                                <td>
                                    <a href="@Url.Action("Edit", "Vendor", new { id = item.Vendor_Id })">
                                        <i class="fa fa-edit" aria-hidden="true"></i>
                                    </a>
                                    &nbsp;&nbsp;
                                    <a style="display:none;" href="@Url.Action("Delete", "Vendor", new { id = item.Vendor_Id })">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                    </a>&nbsp;&nbsp;
                                    <a href="@Url.Action("Details", "Vendor", new { id = item.Vendor_Id })">
                                        <i class="fa fa-eye" aria-hidden="true"></i>
                                    </a>

                                </td>
                            </tr>
                            i++;
                        }
                    }




                </tbody>
            </table>
        </div>
        <div>
            <br />
            @using (Html.BeginForm("Index", "Vendor", new { sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, CurrentSort = ViewBag.CurrentSort }, FormMethod.Post, new { @style = "float:left;width:80px;" }))
            {
                @Html.DropDownList("PageSize")
            }
            <div class="pull-left" style=" padding: 10px;">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
            @{
                bool? direction = ViewBag.SortDirection;
                if (direction == null) { direction = false; }
            }
            @Html.PagedListPager(Model, page => Url.Action("Index",
                                                          new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, CurrentSort = ViewBag.CurrentSort, IsAsc = !direction, pagesize = ViewBag.IPageSize }))

        </div>
    </div>

</section>
<script>
    $("#PageSize").addClass("form-control");
    $('#PageSize').on('change', function (event) {

        var form = $(event.target).parents('form');

        form.submit();
    });
</script>

